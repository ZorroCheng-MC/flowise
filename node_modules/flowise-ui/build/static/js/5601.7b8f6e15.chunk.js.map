{"version":3,"file":"static/js/5601.7b8f6e15.chunk.js","mappings":"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","sources":["api/marketplaces.js","views/marketplaces/index.js"],"sourcesContent":["import client from './client'\n\nconst getAllChatflowsMarketplaces = () => client.get('/marketplaces/chatflows')\nconst getAllToolsMarketplaces = () => client.get('/marketplaces/tools')\n\nexport default {\n    getAllChatflowsMarketplaces,\n    getAllToolsMarketplaces\n}\n","import { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport PropTypes from 'prop-types'\n\n// material-ui\nimport { Grid, Box, Stack, Tabs, Tab } from '@mui/material'\nimport { useTheme } from '@mui/material/styles'\nimport { IconHierarchy, IconTool } from '@tabler/icons'\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard'\nimport ItemCard from 'ui-component/cards/ItemCard'\nimport { gridSpacing } from 'store/constant'\nimport WorkflowEmptySVG from 'assets/images/workflow_empty.svg'\nimport ToolDialog from 'views/tools/ToolDialog'\n\n// API\nimport marketplacesApi from 'api/marketplaces'\n\n// Hooks\nimport useApi from 'hooks/useApi'\n\n// const\nimport { baseURL } from 'store/constant'\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props\n    return (\n        <div\n            role='tabpanel'\n            hidden={value !== index}\n            id={`attachment-tabpanel-${index}`}\n            aria-labelledby={`attachment-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box sx={{ p: 1 }}>{children}</Box>}\n        </div>\n    )\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n}\n\n// ==============================|| Marketplace ||============================== //\n\nconst Marketplace = () => {\n    const navigate = useNavigate()\n\n    const theme = useTheme()\n    const customization = useSelector((state) => state.customization)\n\n    const [isChatflowsLoading, setChatflowsLoading] = useState(true)\n    const [isToolsLoading, setToolsLoading] = useState(true)\n    const [images, setImages] = useState({})\n    const tabItems = ['Chatflows', 'Tools']\n    const [value, setValue] = useState(0)\n    const [showToolDialog, setShowToolDialog] = useState(false)\n    const [toolDialogProps, setToolDialogProps] = useState({})\n\n    const getAllChatflowsMarketplacesApi = useApi(marketplacesApi.getAllChatflowsMarketplaces)\n    const getAllToolsMarketplacesApi = useApi(marketplacesApi.getAllToolsMarketplaces)\n\n    const onUseTemplate = (selectedTool) => {\n        const dialogProp = {\n            title: 'Add New Tool',\n            type: 'IMPORT',\n            cancelButtonName: 'Cancel',\n            confirmButtonName: 'Add',\n            data: selectedTool\n        }\n        setToolDialogProps(dialogProp)\n        setShowToolDialog(true)\n    }\n\n    const goToTool = (selectedTool) => {\n        const dialogProp = {\n            title: selectedTool.templateName,\n            type: 'TEMPLATE',\n            data: selectedTool\n        }\n        setToolDialogProps(dialogProp)\n        setShowToolDialog(true)\n    }\n\n    const goToCanvas = (selectedChatflow) => {\n        navigate(`/marketplace/${selectedChatflow.id}`, { state: selectedChatflow })\n    }\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue)\n    }\n\n    useEffect(() => {\n        getAllChatflowsMarketplacesApi.request()\n        getAllToolsMarketplacesApi.request()\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        setChatflowsLoading(getAllChatflowsMarketplacesApi.loading)\n    }, [getAllChatflowsMarketplacesApi.loading])\n\n    useEffect(() => {\n        setToolsLoading(getAllToolsMarketplacesApi.loading)\n    }, [getAllToolsMarketplacesApi.loading])\n\n    useEffect(() => {\n        if (getAllChatflowsMarketplacesApi.data) {\n            try {\n                const chatflows = getAllChatflowsMarketplacesApi.data\n                const images = {}\n                for (let i = 0; i < chatflows.length; i += 1) {\n                    const flowDataStr = chatflows[i].flowData\n                    const flowData = JSON.parse(flowDataStr)\n                    const nodes = flowData.nodes || []\n                    images[chatflows[i].id] = []\n                    for (let j = 0; j < nodes.length; j += 1) {\n                        const imageSrc = `${baseURL}/api/v1/node-icon/${nodes[j].data.name}`\n                        if (!images[chatflows[i].id].includes(imageSrc)) {\n                            images[chatflows[i].id].push(imageSrc)\n                        }\n                    }\n                }\n                setImages(images)\n            } catch (e) {\n                console.error(e)\n            }\n        }\n    }, [getAllChatflowsMarketplacesApi.data])\n\n    return (\n        <>\n            <MainCard sx={{ background: customization.isDarkMode ? theme.palette.common.black : '' }}>\n                <Stack flexDirection='row'>\n                    <h1>Marketplace</h1>\n                </Stack>\n                <Tabs sx={{ mb: 2 }} variant='fullWidth' value={value} onChange={handleChange} aria-label='tabs'>\n                    {tabItems.map((item, index) => (\n                        <Tab\n                            key={index}\n                            icon={index === 0 ? <IconHierarchy /> : <IconTool />}\n                            iconPosition='start'\n                            label={<span style={{ fontSize: '1.1rem' }}>{item}</span>}\n                        />\n                    ))}\n                </Tabs>\n                {tabItems.map((item, index) => (\n                    <TabPanel key={index} value={value} index={index}>\n                        {item === 'Chatflows' && (\n                            <Grid container spacing={gridSpacing}>\n                                {!isChatflowsLoading &&\n                                    getAllChatflowsMarketplacesApi.data &&\n                                    getAllChatflowsMarketplacesApi.data.map((data, index) => (\n                                        <Grid key={index} item lg={3} md={4} sm={6} xs={12}>\n                                            <ItemCard onClick={() => goToCanvas(data)} data={data} images={images[data.id]} />\n                                        </Grid>\n                                    ))}\n                            </Grid>\n                        )}\n                        {item === 'Tools' && (\n                            <Grid container spacing={gridSpacing}>\n                                {!isToolsLoading &&\n                                    getAllToolsMarketplacesApi.data &&\n                                    getAllToolsMarketplacesApi.data.map((data, index) => (\n                                        <Grid key={index} item lg={3} md={4} sm={6} xs={12}>\n                                            <ItemCard data={data} onClick={() => goToTool(data)} />\n                                        </Grid>\n                                    ))}\n                            </Grid>\n                        )}\n                    </TabPanel>\n                ))}\n                {!isChatflowsLoading && (!getAllChatflowsMarketplacesApi.data || getAllChatflowsMarketplacesApi.data.length === 0) && (\n                    <Stack sx={{ alignItems: 'center', justifyContent: 'center' }} flexDirection='column'>\n                        <Box sx={{ p: 2, height: 'auto' }}>\n                            <img\n                                style={{ objectFit: 'cover', height: '30vh', width: 'auto' }}\n                                src={WorkflowEmptySVG}\n                                alt='WorkflowEmptySVG'\n                            />\n                        </Box>\n                        <div>No Marketplace Yet</div>\n                    </Stack>\n                )}\n                {!isToolsLoading && (!getAllToolsMarketplacesApi.data || getAllToolsMarketplacesApi.data.length === 0) && (\n                    <Stack sx={{ alignItems: 'center', justifyContent: 'center' }} flexDirection='column'>\n                        <Box sx={{ p: 2, height: 'auto' }}>\n                            <img\n                                style={{ objectFit: 'cover', height: '30vh', width: 'auto' }}\n                                src={WorkflowEmptySVG}\n                                alt='WorkflowEmptySVG'\n                            />\n                        </Box>\n                        <div>No Marketplace Yet</div>\n                    </Stack>\n                )}\n            </MainCard>\n            <ToolDialog\n                show={showToolDialog}\n                dialogProps={toolDialogProps}\n                onCancel={() => setShowToolDialog(false)}\n                onConfirm={() => setShowToolDialog(false)}\n                onUseTemplate={(tool) => onUseTemplate(tool)}\n            ></ToolDialog>\n        </>\n    )\n}\n\nexport default Marketplace\n"],"names":["client","get","TabPanel","props","children","value","index","other","_objectWithoutProperties","_excluded","_jsx","_objectSpread","role","hidden","id","concat","Box","sx","p","navigate","useNavigate","theme","useTheme","customization","useSelector","state","_useState","useState","_useState2","_slicedToArray","isChatflowsLoading","setChatflowsLoading","_useState3","_useState4","isToolsLoading","setToolsLoading","_useState5","_useState6","images","setImages","tabItems","_useState7","_useState8","setValue","_useState9","_useState10","showToolDialog","setShowToolDialog","_useState11","_useState12","toolDialogProps","setToolDialogProps","getAllChatflowsMarketplacesApi","useApi","marketplacesApi","getAllToolsMarketplacesApi","useEffect","request","loading","data","chatflows","i","length","flowDataStr","flowData","nodes","JSON","parse","j","imageSrc","baseURL","name","includes","push","e","console","error","_jsxs","_Fragment","MainCard","background","isDarkMode","palette","common","black","Stack","flexDirection","Tabs","mb","variant","onChange","event","newValue","map","item","Tab","icon","IconHierarchy","IconTool","iconPosition","label","style","fontSize","Grid","container","spacing","gridSpacing","lg","md","sm","xs","ItemCard","onClick","selectedChatflow","selectedTool","dialogProp","title","templateName","type","goToTool","alignItems","justifyContent","height","objectFit","width","src","WorkflowEmptySVG","alt","ToolDialog","show","dialogProps","onCancel","onConfirm","onUseTemplate","tool","cancelButtonName","confirmButtonName"],"sourceRoot":""}