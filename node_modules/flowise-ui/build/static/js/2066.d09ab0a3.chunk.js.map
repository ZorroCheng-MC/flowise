{"version":3,"file":"static/js/2066.d09ab0a3.chunk.js","mappings":"8HAgBA,KACIA,gBAfoB,WAAH,OAASC,EAAAA,EAAOC,IAAI,aAAa,EAgBlDC,oBAdwB,SAACC,GAAE,OAAKH,EAAAA,EAAOC,IAAI,cAADG,OAAeD,GAAK,EAe9DE,sCAb0C,SAACF,GAAE,OAAKH,EAAAA,EAAOC,IAAI,qBAADG,OAAsBD,GAAK,EAcvFG,kBAZsB,SAACC,GAAI,OAAKP,EAAAA,EAAOQ,KAAK,aAAcD,EAAK,EAa/DE,eAXmB,SAACN,EAAII,GAAI,OAAKP,EAAAA,EAAOU,IAAI,cAADN,OAAeD,GAAMI,EAAK,EAYrEI,eAVmB,SAACR,GAAE,OAAKH,EAAAA,EAAOY,OAAO,cAADR,OAAeD,GAAK,EAW5DU,uBAT2B,SAACV,GAAE,OAAKH,EAAAA,EAAOC,IAAI,wBAADG,OAAyBD,GAAK,E,wECZ/E,aAAgBW,GACZ,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA0BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA8BT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAEpBG,EAAO,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,UAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACI,OAAhBb,GAAW,GAAKW,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAES3B,EAAO4B,WAAC,EAADN,GAAS,OAA/BD,EAAMI,EAAAI,KACZvB,EAAQe,EAAOhB,MAAKoB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEpBf,EAASe,EAAAK,IAAO,qBAAoB,QAEnB,OAFmBL,EAAAC,KAAA,GAEpCZ,GAAW,GAAMW,EAAAM,OAAA,6BAAAN,EAAAO,OAAA,GAAAZ,EAAA,wBAExB,kBAVY,OAAAJ,EAAAY,MAAA,KAAAL,UAAA,KAYb,MAAO,CACHlB,KAAAA,EACAI,MAAAA,EACAI,QAAAA,EACAE,QAAAA,EAEP,C,kFCtBYkB,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAe,SAAAlB,GAAA,IAAGoB,EAAKpB,EAALoB,MAAKC,EAAArB,EAAEsB,MAAAA,OAAK,IAAAD,EAAG,UAASA,EAAA,MAAQ,CAC1EC,MAAO,QACPC,gBAAiBH,EAAMI,QAAQF,GAAOG,KACtC,UAAW,CACPF,gBAAiBH,EAAMI,QAAQF,GAAOG,KACtCC,gBAAgB,uCAEvB,G,qJC2DD,IA7DoB,SAAH1B,GAA0C,IAApC2B,EAAI3B,EAAJ2B,KAAMC,EAAW5B,EAAX4B,YAAaC,EAAS7B,EAAT6B,UAChCC,EAAgBC,SAASC,eAAe,UAY9C/C,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CgD,EAAW9C,EAAA,GAAE+C,EAAc/C,EAAA,GAClCI,GAAsCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA3C4C,EAAW3C,EAAA,GAAE4C,EAAc5C,EAAA,GAE5B6C,EAAYV,GACdW,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CACHC,QAAS,SAACC,GACQ,UAAVA,EAAEC,KACFb,EAAUI,EAAaE,EAE/B,EACAQ,KAAMhB,EACNiB,WAAS,EACTC,SAAS,KACT,kBAAgB,qBAChB,mBAAiB,2BAA0BC,SAAA,EAE3CC,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CAACC,GAAI,CAAEC,SAAU,QAAU7E,GAAG,qBAAoByE,SACzDlB,EAAYuB,SAEjBb,EAAAA,EAAAA,MAACc,EAAAA,EAAa,CAAAN,SAAA,EACVC,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CAAAP,SAAC,cACZC,EAAAA,EAAAA,KAACO,EAAAA,EAAK,CACFC,WAjCM,CAClBC,MAAO,WACPC,KAAM,WACNC,KAAM,SACNC,YAAa,YA8BDC,SAAU,SAACC,GAAQ,OAAK3B,EAAe2B,EAAS,EAChDC,MAAO7B,EACP8B,YAAY,KAEhBhB,EAAAA,EAAAA,KAAA,OAAKiB,MAAO,CAAEC,UAAW,OACzBlB,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CAAAP,SAAC,cACZC,EAAAA,EAAAA,KAACO,EAAAA,EAAK,CAACC,WAlCG,CAClBC,MAAO,WACPC,KAAM,WACNC,KAAM,YA+BoCE,SAAU,SAACC,GAAQ,OAAKzB,EAAeyB,EAAS,EAAEC,MAAO3B,QAE/FY,EAAAA,EAAAA,KAACmB,EAAAA,EAAa,CAAApB,UACVC,EAAAA,EAAAA,KAAC9B,EAAAA,EAAY,CAACkD,QAAQ,YAAYC,QAAS,kBAAMvC,EAAUI,EAAaE,EAAY,EAACW,SAChFlB,EAAYyC,yBAIzB,KAEJ,OAAOC,EAAAA,EAAAA,cAAajC,EAAWP,EACnC,C,kKCnDayC,EAAiB,SAAHvE,GAAiG,IAA3F8D,EAAK9D,EAAL8D,MAAOH,EAAW3D,EAAX2D,YAAWa,EAAAxE,EAAEyE,SAAAA,OAAQ,IAAAD,GAAQA,EAAEd,EAAI1D,EAAJ0D,KAAMM,EAAKhE,EAALgE,MAAOU,EAAa1E,EAAb0E,cAAeC,EAAS3E,EAAT2E,UAAWC,EAAM5E,EAAN4E,OACpGxD,GAAQyD,EAAAA,EAAAA,KAEd,OACI9B,EAAAA,EAAAA,KAAC+B,IAAM,CACHL,SAAUA,EACVX,MAAOA,EACPH,YAAaA,EACboB,UAAW,SAACC,GAAI,OAAKD,EAAAA,EAAAA,WAAUC,EAAe,SAATtB,EAAkBuB,EAAAA,UAAUC,KAAOD,EAAAA,UAAUE,GAAG,EACrFC,QAAS,GACTV,cAAeA,EACfC,UAAWA,EACXC,OAAQA,EACRS,QAAS,EACTrB,OAAKsB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACEtB,GAAK,IACRuB,WAAYnE,EAAMI,QAAQgE,WAAW/D,OAEzCgE,kBAAkB,oBAG9B,C,kKCrBaC,EAAkB,SAAH1F,GAAiG,IAA3F8D,EAAK9D,EAAL8D,MAAOH,EAAW3D,EAAX2D,YAAWa,EAAAxE,EAAEyE,SAAAA,OAAQ,IAAAD,GAAQA,EAAEd,EAAI1D,EAAJ0D,KAAMM,EAAKhE,EAALgE,MAAOU,EAAa1E,EAAb0E,cAAeC,EAAS3E,EAAT2E,UAAWC,EAAM5E,EAAN4E,OACrGxD,GAAQyD,EAAAA,EAAAA,KAEd,OACI9B,EAAAA,EAAAA,KAAC+B,IAAM,CACHL,SAAUA,EACVX,MAAOA,EACPH,YAAaA,EACboB,UAAW,SAACC,GAAI,OAAKD,EAAAA,EAAAA,WAAUC,EAAe,SAATtB,EAAkBuB,EAAAA,UAAUC,KAAOD,EAAAA,UAAUE,GAAG,EACrFC,QAAS,GACTV,cAAeA,EACfC,UAAWA,EACXC,OAAQA,EACRS,QAAS,EACTrB,OAAKsB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACEtB,GAAK,IACRuB,WAAYnE,EAAMI,QAAQmE,KAAKlE,OAEnCgE,kBAAkB,oBAG9B,C,0QCgFA,EAjGyB,SAAHzF,GAAoD,IAA9C2B,EAAI3B,EAAJ2B,KAAMC,EAAW5B,EAAX4B,YAAagE,EAAQ5F,EAAR4F,SAAU/D,EAAS7B,EAAT6B,UAC/CC,EAAgBC,SAASC,eAAe,UAExCZ,GAAQyD,EAAAA,EAAAA,KACRgB,GAAWC,EAAAA,EAAAA,MACXC,GAAgBC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,aAAa,IAC1DG,EAAe,OAErBjH,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCkH,EAAUhH,EAAA,GAAEiH,EAAajH,EAAA,GAChCI,GAAoCL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA3CgE,EAAU/D,EAAA,GAAE6G,EAAa7G,EAAA,IAEhC8G,EAAAA,EAAAA,YAAU,WAIN,OAHI1E,EAAYkC,OAAOsC,EAAcxE,EAAYkC,OAC7ClC,EAAY2B,YAAY8C,EAAczE,EAAY2B,YAE/C,WACH6C,EAAc,IACdC,EAAc,KAClB,CACJ,GAAG,CAACzE,KAEJ0E,EAAAA,EAAAA,YAAU,WACIT,EAANlE,EAAe,CAAE+B,KAAM6C,EAAAA,IACb,CAAE7C,KAAM8C,EAAAA,IAC1B,GAAG,CAAC7E,EAAMkE,IAEV,IAAMxD,EAAYV,GACdW,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAACI,KAAMhB,EAAMiB,WAAS,EAACC,SAAS,KAAK,kBAAgB,qBAAqB,mBAAiB,2BAA0BC,SAAA,EACxHC,EAAAA,EAAAA,KAACK,EAAAA,EAAa,CAAAN,UACVC,EAAAA,EAAAA,KAAA,OAAKiB,MAAO,CAAEyC,QAAS,OAAQC,cAAe,OAAQ5D,SACjDS,GAAkC,WAApBA,EAAWG,OACtBpB,EAAAA,EAAAA,MAAA,OAAK0B,MAAO,CAAE2C,KAAM,IAAK7D,SAAA,EACrBC,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CAACJ,GAAI,CAAE2D,GAAI,EAAGC,GAAI,GAAK1C,QAAQ,KAAIrB,SACzCS,EAAWC,SAEhBT,EAAAA,EAAAA,KAAC+D,IAAgB,CACb9C,MAAO,CACH+C,OAAQ,YACRC,YAAa5F,EAAMI,QAAQyF,KAAK,KAChCC,aAAc,OACdC,OAAQ,OACRC,UAAW,sBACXC,UAAW,SACX9F,gBAAiB,SACnBuB,SAEDiD,EAAcuB,YACXvE,EAAAA,EAAAA,KAACwB,EAAAA,EAAc,CACXE,SAAU7C,EAAY6C,SACtBX,MAAOqC,EACPzB,cAAe,SAACM,GAAI,OAAKoB,EAAcpB,EAAK,EAC5CrB,YAAaJ,EAAWI,YACxBD,KAAMwC,EACNlC,MAAO,CACHd,SAAU,WACVqE,UAAW,sBACXC,MAAO,WAIfzE,EAAAA,EAAAA,KAAC2C,EAAAA,EAAe,CACZjB,SAAU7C,EAAY6C,SACtBX,MAAOqC,EACPzB,cAAe,SAACM,GAAI,OAAKoB,EAAcpB,EAAK,EAC5CrB,YAAaJ,EAAWI,YACxBD,KAAMwC,EACNlC,MAAO,CACHd,SAAU,WACVqE,UAAW,sBACXC,MAAO,oBASvClF,EAAAA,EAAAA,MAAC4B,EAAAA,EAAa,CAAApB,SAAA,EACVC,EAAAA,EAAAA,KAAC5B,EAAAA,EAAM,CAACiD,QAASwB,EAAS9C,SAAElB,EAAY6F,oBACxC1E,EAAAA,EAAAA,KAAC9B,EAAAA,EAAY,CAACwD,SAAU7C,EAAY6C,SAAUN,QAAQ,YAAYC,QAAS,kBAAMvC,EAAUsE,EAAY5C,EAAWE,KAAK,EAACX,SACnHlB,EAAYyC,0BAIzB,KAEJ,OAAOC,EAAAA,EAAAA,cAAajC,EAAWP,EACnC,ECjGawB,EAAQ,SAAHtD,GAAqH,IAAD0H,EAAAC,EAA9GpE,EAAUvD,EAAVuD,WAAYO,EAAK9D,EAAL8D,MAAOF,EAAQ5D,EAAR4D,SAAQY,EAAAxE,EAAEyE,SAAAA,OAAQ,IAAAD,GAAQA,EAAET,EAAU/D,EAAV+D,WAAYnC,EAAW5B,EAAX4B,YAAagG,EAAc5H,EAAd4H,eAAgBC,EAAe7H,EAAf6H,gBAC5G5I,GAA8BC,EAAAA,EAAAA,UAAc,OAAL4E,QAAK,IAALA,EAAAA,EAAS,IAAG3E,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5C6I,EAAO3I,EAAA,GAAE4I,EAAU5I,EAAA,GAe1B,OACImD,EAAAA,EAAAA,MAAA0F,EAAAA,SAAA,CAAAlF,SAAA,EACIC,EAAAA,EAAAA,KAACkF,EAAAA,EAAW,CAAChF,GAAI,CAAEiF,GAAI,EAAGV,MAAO,QAAUW,KAAK,QAAOrF,UACnDC,EAAAA,EAAAA,KAACqF,EAAAA,EAAa,CACV/J,GAAIkF,EAAWE,KACf0E,KAAK,QACL1D,SAAUA,EACVf,KApBK,SAACA,GAClB,OAAQA,GACJ,IAAK,SAML,QACI,MAAO,OALX,IAAK,WACD,MAAO,WACX,IAAK,SACD,MAAO,SAInB,CASsB2E,CAAa9E,EAAWG,MAC9BC,YAAaJ,EAAWI,YACxB2E,YAAa/E,EAAWgF,KACxBA,KAAqB,QAAjBb,EAAEnE,EAAWgF,YAAI,IAAAb,EAAAA,EAAI,EACzB5D,MAAOgE,EACPrE,KAAMF,EAAWE,KACjBG,SAAU,SAACnB,GACPsF,EAAWtF,EAAE+F,OAAO1E,OACpBF,EAASnB,EAAE+F,OAAO1E,MACtB,EACA2E,WAAY,CACRC,KAAqB,QAAjBf,EAAEpE,EAAWmF,YAAI,IAAAf,EAAAA,EAAI,GACzB3D,MAAO,CACHmD,OAAQ5D,EAAWgF,KAAO,OAAS,gBAKlDxE,IACGhB,EAAAA,EAAAA,KAAC4F,EAAgB,CACbhH,KAAMoC,EACNnC,YAAaA,EACbgE,SAAUgC,EACV/F,UAAW,SAACgC,EAAU+E,GAClBb,EAAWlE,GACXgE,EAAgBhE,EAAU+E,EAC9B,MAKpB,C,yOC8EA,UA3GkB,WACd,IAAMC,GAAWC,EAAAA,EAAAA,MACX1H,GAAQyD,EAAAA,EAAAA,KACRkB,GAAgBC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,aAAa,IAEhE9G,GAAgCC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvC8J,EAAS5J,EAAA,GAAEW,EAAUX,EAAA,GAC5BI,GAA4BL,EAAAA,EAAAA,UAAS,CAAC,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCyJ,EAAMxJ,EAAA,GAAEyJ,EAASzJ,EAAA,GACxBG,GAA8CT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAtDuJ,EAAetJ,EAAA,GAAEuJ,EAAkBvJ,EAAA,GAC1CwJ,GAAgDlK,EAAAA,EAAAA,UAAS,CAAC,GAAEmK,GAAAjK,EAAAA,EAAAA,GAAAgK,EAAA,GAArDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAEtCG,GAAqBC,EAAAA,EAAAA,GAAOC,EAAAA,EAAazL,iBA8D/C,OA9CAqI,EAAAA,EAAAA,YAAU,WACNkD,EAAmBzJ,SAGvB,GAAG,KAEHuG,EAAAA,EAAAA,YAAU,WACyB,IAADqD,EAAAC,EAA1BJ,EAAmB/J,QACgC,OAAvB,QAAxBkK,EAAAH,EAAmB/J,aAAK,IAAAkK,GAAU,QAAVC,EAAxBD,EAA0BE,gBAAQ,IAAAD,OAAV,EAAxBA,EAAoCE,UACpCP,EAAoB,CAChBpG,MAAO,QACPkB,kBAAmB,UAEvB8E,GAAmB,IAG/B,GAAG,CAACK,EAAmB/J,SAEvB6G,EAAAA,EAAAA,YAAU,WACNxG,EAAW0J,EAAmB3J,QAClC,GAAG,CAAC2J,EAAmB3J,WAEvByG,EAAAA,EAAAA,YAAU,WACN,GAAIkD,EAAmBnK,KACnB,IAGI,IAFA,IAAM0K,EAAYP,EAAmBnK,KAC/B2J,EAAS,CAAC,EACPgB,EAAI,EAAGA,EAAID,EAAUE,OAAQD,GAAK,EAAG,CAC1C,IAAME,EAAcH,EAAUC,GAAGG,SAE3BC,EADWC,KAAKC,MAAMJ,GACLE,OAAS,GAChCpB,EAAOe,EAAUC,GAAG3L,IAAM,GAC1B,IAAK,IAAIkM,EAAI,EAAGA,EAAIH,EAAMH,OAAQM,GAAK,EAAG,CACtC,IAAMC,EAAQ,GAAAlM,OAAMmM,EAAAA,GAAO,sBAAAnM,OAAqB8L,EAAMG,GAAGlL,KAAKoE,MACzDuF,EAAOe,EAAUC,GAAG3L,IAAIqM,SAASF,IAClCxB,EAAOe,EAAUC,GAAG3L,IAAIsM,KAAKH,EAErC,CACJ,CACAvB,EAAUD,EACd,CAAE,MAAOvG,GACLmI,QAAQnL,MAAMgD,EAClB,CAER,GAAG,CAAC+G,EAAmBnK,QAGnBiD,EAAAA,EAAAA,MAACuI,EAAAA,EAAQ,CAAC5H,GAAI,CAAEsC,WAAYQ,EAAcuB,WAAalG,EAAMI,QAAQsJ,OAAOC,MAAQ,IAAKjI,SAAA,EACrFR,EAAAA,EAAAA,MAAC0I,EAAAA,EAAK,CAACtE,cAAc,MAAK5D,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJR,EAAAA,EAAAA,MAAC2I,EAAAA,GAAI,CAAChI,GAAI,CAAE2D,GAAI,MAAQsE,WAAS,EAACC,UAAU,MAAKrI,SAAA,EAC7CC,EAAAA,EAAAA,KAACqI,EAAAA,EAAG,CAACnI,GAAI,CAAEoI,SAAU,MACrBtI,EAAAA,EAAAA,KAACkI,EAAAA,GAAI,CAACK,MAAI,EAAAxI,UACNC,EAAAA,EAAAA,KAAC9B,EAAAA,EAAY,CAACkD,QAAQ,YAAYlB,GAAI,CAAE3B,MAAO,SAAW8C,QA7D/D,WACXyE,EAAS,UACb,EA2D+F0C,WAAWxI,EAAAA,EAAAA,KAACyI,EAAAA,IAAQ,IAAI1I,SAAC,qBAMhHC,EAAAA,EAAAA,KAACkI,EAAAA,GAAI,CAACC,WAAS,EAACO,QAASC,EAAAA,GAAY5I,UAC/BiG,GACES,EAAmBnK,MACnBmK,EAAmBnK,KAAKsM,KAAI,SAACtM,EAAMuM,GAAK,OACpC7I,EAAAA,EAAAA,KAACkI,EAAAA,GAAI,CAAaK,MAAI,EAACO,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAGlJ,UAC/CC,EAAAA,EAAAA,KAACkJ,EAAAA,EAAQ,CAAC7H,QAAS,WAnEvCyE,EAAS,WAADvK,OAmEgDe,EAnEnBhB,IAmEwB,EAAEgB,KAAMA,EAAM2J,OAAQA,EAAO3J,EAAKhB,OADpEuN,EAEJ,OAGjB7C,KAAeS,EAAmBnK,MAA2C,IAAnCmK,EAAmBnK,KAAK4K,UAChE3H,EAAAA,EAAAA,MAAC0I,EAAAA,EAAK,CAAC/H,GAAI,CAAEiJ,WAAY,SAAUC,eAAgB,UAAYzF,cAAc,SAAQ5D,SAAA,EACjFC,EAAAA,EAAAA,KAACqI,EAAAA,EAAG,CAACnI,GAAI,CAAEmJ,EAAG,EAAGjF,OAAQ,QAASrE,UAC9BC,EAAAA,EAAAA,KAAA,OAAKiB,MAAO,CAAEqI,UAAW,QAASlF,OAAQ,OAAQK,MAAO,QAAU8E,IAAKC,EAAAA,EAAkBC,IAAI,wBAElGzJ,EAAAA,EAAAA,KAAA,OAAAD,SAAK,yBAGbC,EAAAA,EAAAA,KAAC0J,EAAAA,EAAW,CAAC9K,KAAMuH,EAAiBtH,YAAa0H,EAAkBzH,UA1FtD,SAAC6K,EAAUC,GAC5BC,aAAaC,QAAQ,WAAYH,GACjCE,aAAaC,QAAQ,WAAYF,GACjC9D,EAAS,EACb,MAyFJ,C,wIChIO,SAASiE,EAAQC,GACtB,OAAOC,OAAOD,GAAOE,MAAM,oBAAoB,IAAM,EACvD,CAGO,SAASC,EAAWjD,GACzB,OAAOkD,WAAWlD,EACpB,C,0DCZO,SAASmD,EAAwBC,GACtC,OAAOC,EAAAA,EAAAA,GAAqB,cAAeD,EAC7C,EACwBE,EAAAA,EAAAA,GAAuB,cAAe,CAAC,OAAQ,OAAQ,cAAe,UAAW,WAAY,QAAS,OAAQ,eAAgB,aAAc,eAApK,ICLaC,EAAAC,EAAAC,EAAAC,EAMXC,EACAC,EACAC,EACAC,E,WALIC,EAAY,CAAC,YAAa,YAAa,YAAa,SAAU,QAAS,UAAW,SA8BlFC,GAAgBC,EAAAA,EAAAA,IAAUN,IAAOA,EAAMJ,IAAAA,GAAAW,EAAAA,EAAAA,GAAA,8GAavCC,GAAeF,EAAAA,EAAAA,IAAUL,IAAQA,EAAOJ,IAAAA,GAAAU,EAAAA,EAAAA,GAAA,4MAcxCE,GAAenN,EAAAA,EAAAA,IAAO,OAAQ,CAClCuC,KAAM,cACN4J,KAAM,OACNiB,kBAAmB,SAACC,EAAOC,GACzB,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAOE,KAAMF,EAAOC,EAAWtK,UAAmC,IAAzBsK,EAAWE,WAAuBH,EAAOC,EAAWE,WAAYF,EAAWG,aAAeJ,EAAOK,aAAcJ,EAAWG,cAAgBH,EAAWjH,OAASgH,EAAOM,WAAYL,EAAWG,cAAgBH,EAAWtH,QAAUqH,EAAOO,WAC3R,GARmB7N,EASlB,SAAAlB,GAGG,IAFJoB,EAAKpB,EAALoB,MACAqN,EAAUzO,EAAVyO,WAEMO,EAAalC,EAAQ1L,EAAM6N,MAAM/H,eAAiB,KAClDgI,EAAchC,EAAW9L,EAAM6N,MAAM/H,cAC3C,OAAOiI,EAAAA,EAAAA,GAAS,CACd1I,QAAS,QAETlF,gBAAiBH,EAAMgO,KAAOhO,EAAMgO,KAAK5N,QAAQ6N,SAASC,IAAKC,EAAAA,EAAAA,IAAMnO,EAAMI,QAAQgO,KAAKC,QAAgC,UAAvBrO,EAAMI,QAAQkO,KAAmB,IAAO,KACzIvI,OAAQ,SACgB,SAAvBsH,EAAWtK,SAAsB,CAClCF,UAAW,EACX0L,aAAc,EACdxI,OAAQ,OACRyI,gBAAiB,QACjBC,UAAW,iBACX3I,aAAc,GAAF5I,OAAK4Q,GAAW5Q,OAAG0Q,EAAU,KAAA1Q,OAAIwR,KAAKC,MAAMb,EAAc,GAAM,IAAM,IAAE5Q,OAAG0Q,GACvF,iBAAkB,CAChBgB,QAAS,aAEa,aAAvBvB,EAAWtK,SAA0B,CACtC+C,aAAc,OACU,YAAvBuH,EAAWtK,SAAyB,CACrC+C,cAAe9F,EAAMgO,MAAQhO,GAAO6N,MAAM/H,cACzCuH,EAAWG,aAAe,CAC3B,QAAS,CACPqB,WAAY,WAEbxB,EAAWG,cAAgBH,EAAWjH,OAAS,CAChD3E,SAAU,eACT4L,EAAWG,cAAgBH,EAAWtH,QAAU,CACjDA,OAAQ,QAEZ,IAAG,SAAA+I,GACS,MACmB,UADnBA,EAAVzB,WACeE,YAAyBwB,EAAAA,EAAAA,IAAIrC,IAAQA,EAAOJ,IAAAA,GAAAS,EAAAA,EAAAA,GAAA,oEAErDF,EAAc,IAAE,SAAAmC,GAAA,IACtB3B,EAAU2B,EAAV3B,WACArN,EAAKgP,EAALhP,MAAK,MACwB,SAAzBqN,EAAWE,YAAwBwB,EAAAA,EAAAA,IAAIpC,IAAQA,EAAOJ,IAAAA,GAAAQ,EAAAA,EAAAA,GAAA,ynBAuBpDC,GAAehN,EAAMgO,MAAQhO,GAAOI,QAAQ6O,OAAOC,MAAM,IAuFjE,EAtF8BC,EAAAA,YAAiB,SAAkBC,EAASC,GACxE,IAAMlC,GAAQmC,EAAAA,EAAAA,GAAc,CAC1BnC,MAAOiC,EACP/M,KAAM,gBAERkN,EAQMpC,EAPFI,UAAAA,OAAS,IAAAgC,EAAG,QAAOA,EACnBC,EAMErC,EANFqC,UAASC,EAMPtC,EALFlM,UAAAA,OAAS,IAAAwO,EAAG,OAAMA,EAClB1J,EAIEoH,EAJFpH,OACAnD,EAGEuK,EAHFvK,MAAK8M,EAGHvC,EAFFpK,QAAAA,OAAO,IAAA2M,EAAG,OAAMA,EAChBtJ,EACE+G,EADF/G,MAEFuJ,GAAQC,EAAAA,EAAAA,GAA8BzC,EAAOP,GACzCS,GAAaU,EAAAA,EAAAA,GAAS,CAAC,EAAGZ,EAAO,CACrCI,UAAAA,EACAtM,UAAAA,EACA8B,QAAAA,EACAyK,YAAaqC,QAAQF,EAAMjO,YAEvBoO,EAxIkB,SAAAzC,GACxB,IACEyC,EAMEzC,EANFyC,QACA/M,EAKEsK,EALFtK,QACAwK,EAIEF,EAJFE,UACAC,EAGEH,EAHFG,YACApH,EAEEiH,EAFFjH,MACAL,EACEsH,EADFtH,OAEIgK,EAAQ,CACZzC,KAAM,CAAC,OAAQvK,EAASwK,EAAWC,GAAe,eAAgBA,IAAgBpH,GAAS,aAAcoH,IAAgBzH,GAAU,eAErI,OAAOiK,EAAAA,EAAAA,GAAeD,EAAO/D,EAAyB8D,EACxD,CA2HkBG,CAAkB5C,GAClC,OAAoB1L,EAAAA,EAAAA,KAAKsL,GAAcc,EAAAA,EAAAA,GAAS,CAC9CmC,GAAIjP,EACJoO,IAAKA,EACLG,WAAWW,EAAAA,EAAAA,GAAKL,EAAQxC,KAAMkC,GAC9BnC,WAAYA,GACXsC,EAAO,CACR/M,OAAOmL,EAAAA,EAAAA,GAAS,CACd3H,MAAAA,EACAL,OAAAA,GACCnD,KAEP,G,+NCtKMgK,EAAY,CAAC,YAAa,YAAa,UAAW,UAAW,WAAY,YAAa,cAYtFwD,GAAeC,EAAAA,EAAAA,KAEfC,GAA+BC,EAAAA,EAAAA,GAAa,MAAO,CACvDlO,KAAM,WACN4J,KAAM,OACNiB,kBAAmB,SAACC,EAAOC,GAAM,OAAKA,EAAOE,IAAI,IAEnD,SAASkD,EAAqBrD,GAC5B,OAAOsD,EAAAA,EAAAA,GAAoB,CACzBtD,MAAAA,EACA9K,KAAM,WACN+N,aAAAA,GAEJ,CASA,SAASM,EAAahP,EAAUiP,GAC9B,IAAMC,EAAgBzB,EAAAA,SAAe0B,QAAQnP,GAAUoP,OAAOjB,SAC9D,OAAOe,EAAcG,QAAO,SAACC,EAAQC,EAAOzG,GAO1C,OANAwG,EAAOzH,KAAK0H,GACRzG,EAAQoG,EAAc/H,OAAS,GACjCmI,EAAOzH,KAAmB4F,EAAAA,aAAmBwB,EAAW,CACtDrP,IAAK,aAAFpE,OAAesN,MAGfwG,CACT,GAAG,GACL,CACA,IAQapO,EAAQ,SAAHhE,GAGZ,IAFJyO,EAAUzO,EAAVyO,WACArN,EAAKpB,EAALoB,MAEIoN,GAASW,EAAAA,EAAAA,GAAS,CACpB1I,QAAS,OACTC,cAAe,WACd4L,EAAAA,EAAAA,IAAkB,CACnBlR,MAAAA,IACCmR,EAAAA,EAAAA,IAAwB,CACzBC,OAAQ/D,EAAWtD,UACnBsH,YAAarR,EAAMqR,YAAYD,UAC7B,SAAAE,GAAS,MAAK,CAChBhM,cAAegM,EAChB,KACD,GAAIjE,EAAWhD,QAAS,CACtB,IAAMkH,GAAcC,EAAAA,EAAAA,IAAmBxR,GACjCyR,EAAOC,OAAOC,KAAK3R,EAAMqR,YAAYD,QAAQL,QAAO,SAACa,EAAKC,GAI9D,OAHkC,kBAAvBxE,EAAWhD,SAA0D,MAAlCgD,EAAWhD,QAAQwH,IAAuD,kBAAzBxE,EAAWtD,WAA8D,MAApCsD,EAAWtD,UAAU8H,MACvJD,EAAIC,IAAc,GAEbD,CACT,GAAG,CAAC,GACEE,GAAkBX,EAAAA,EAAAA,IAAwB,CAC9CC,OAAQ/D,EAAWtD,UACnB0H,KAAAA,IAEIM,GAAgBZ,EAAAA,EAAAA,IAAwB,CAC5CC,OAAQ/D,EAAWhD,QACnBoH,KAAAA,IAE6B,kBAApBK,GACTJ,OAAOC,KAAKG,GAAiBE,SAAQ,SAACH,EAAYrH,EAAO6G,GAEvD,IADuBS,EAAgBD,GAClB,CACnB,IAAMI,EAAyBzH,EAAQ,EAAIsH,EAAgBT,EAAY7G,EAAQ,IAAM,SACrFsH,EAAgBD,GAAcI,CAChC,CACF,IAeF7E,GAAS8E,EAAAA,EAAAA,GAAU9E,GAAQ8D,EAAAA,EAAAA,IAAkB,CAC3ClR,MAAAA,GACC+R,GAfwB,SAACT,EAAWO,GACrC,OAAIxE,EAAW8E,WACN,CACLC,KAAKC,EAAAA,EAAAA,IAASd,EAAaD,IAGxB,CACL,iCAA+BgB,EAAAA,EAAAA,GAAA,CAC7BC,OAAQ,GAAC,SAAArV,QAxDU6M,EAyDY8H,EAAaC,EAAgBD,GAAcxE,EAAWtD,UAxDtF,CACLyI,IAAK,OACL,cAAe,QACfC,OAAQ,MACR,iBAAkB,UAClB1I,MAmD0GsI,EAAAA,EAAAA,IAASd,EAAaD,KAzDvG,IAAAvH,CA4DzB,IAIF,CAEA,OADAqD,GAASsF,EAAAA,EAAAA,IAAwB1S,EAAMqR,YAAajE,EAEtD,E,0BC7GMxD,ED8GS,WAAmC,IAAd+I,EAAOxT,UAAA0J,OAAA,QAAA+J,IAAAzT,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC7C0T,EAKIF,EAHFG,sBAAAA,OAAqB,IAAAD,EAAGvC,EAA4BuC,EAAAE,EAGlDJ,EAFFrD,cAAAA,OAAa,IAAAyD,EAAGvC,EAAoBuC,EAAAC,EAElCL,EADFM,cAAAA,OAAa,IAAAD,EAAG,WAAUA,EAQtBE,EAAYJ,EAAsBlQ,GAClCgH,EAAqBuF,EAAAA,YAAiB,SAAcC,EAASC,GACjE,IAAM8D,EAAa7D,EAAcF,GAC3BjC,GAAQiG,EAAAA,EAAAA,GAAaD,GAC3B1D,EAQMtC,EAPFlM,UAAAA,OAAS,IAAAwO,EAAG,MAAKA,EAAA4D,EAOflG,EANFpD,UAAAA,OAAS,IAAAsJ,EAAG,SAAQA,EAAAC,EAMlBnG,EALF9C,QAAAA,OAAO,IAAAiJ,EAAG,EAACA,EACXC,EAIEpG,EAJFoG,QACA7R,EAGEyL,EAHFzL,SACA8N,EAEErC,EAFFqC,UAASgE,EAEPrG,EADFgF,WAAAA,OAAU,IAAAqB,GAAQA,EAEpB7D,GAAQC,EAAAA,EAAAA,GAA8BzC,EAAOP,GACzCS,EAAa,CACjBtD,UAAAA,EACAM,QAAAA,EACA8H,WAAAA,GAEIrC,GArBCE,EAAAA,EAAAA,GAHO,CACZ1C,KAAM,CAAC,UAEoB,SAAArB,GAAI,OAAIC,EAAAA,EAAAA,GAAqB+G,EAAehH,EAAK,GAAE,CAAC,GAsBjF,OAAoBtK,EAAAA,EAAAA,KAAKuR,GAAWnF,EAAAA,EAAAA,GAAS,CAC3CmC,GAAIjP,EACJoM,WAAYA,EACZgC,IAAKA,EACLG,WAAWW,EAAAA,EAAAA,GAAKL,EAAQxC,KAAMkC,IAC7BG,EAAO,CACRjO,SAAU6R,EAAU7C,EAAahP,EAAU6R,GAAW7R,IAE1D,IAQA,OAAOkI,CACT,CChKc6J,CAAY,CACxBX,uBAAuBhT,EAAAA,EAAAA,IAAO,MAAO,CACnCuC,KAAM,WACN4J,KAAM,OACNiB,kBAAmB,SAACC,EAAOC,GAAM,OAAKA,EAAOE,IAAI,IAEnDgC,cAAe,SAAAF,GAAO,OAAIE,EAAAA,EAAAA,GAAc,CACtCnC,MAAOiC,EACP/M,KAAM,YACN,IA8CJ,G,4BC5DMvC,GAAS4T,E,SAAAA,MACf,K","sources":["api/chatflows.js","hooks/useApi.js","ui-component/button/StyledButton.js","ui-component/dialog/LoginDialog.js","ui-component/editor/DarkCodeEditor.js","ui-component/editor/LightCodeEditor.js","ui-component/dialog/ExpandTextDialog.js","ui-component/input/Input.js","views/chatflows/index.js","../../../node_modules/@mui/material/styles/cssUtils.js","../../../node_modules/@mui/material/Skeleton/skeletonClasses.js","../../../node_modules/@mui/material/Skeleton/Skeleton.js","../../../node_modules/@mui/system/esm/Stack/createStack.js","../../../node_modules/@mui/material/Stack/Stack.js","../../../node_modules/@mui/system/esm/styled.js"],"sourcesContent":["import client from './client'\n\nconst getAllChatflows = () => client.get('/chatflows')\n\nconst getSpecificChatflow = (id) => client.get(`/chatflows/${id}`)\n\nconst getSpecificChatflowFromPublicEndpoint = (id) => client.get(`/public-chatflows/${id}`)\n\nconst createNewChatflow = (body) => client.post(`/chatflows`, body)\n\nconst updateChatflow = (id, body) => client.put(`/chatflows/${id}`, body)\n\nconst deleteChatflow = (id) => client.delete(`/chatflows/${id}`)\n\nconst getIsChatflowStreaming = (id) => client.get(`/chatflows-streaming/${id}`)\n\nexport default {\n    getAllChatflows,\n    getSpecificChatflow,\n    getSpecificChatflowFromPublicEndpoint,\n    createNewChatflow,\n    updateChatflow,\n    deleteChatflow,\n    getIsChatflowStreaming\n}\n","import { useState } from 'react'\n\nexport default (apiFunc) => {\n    const [data, setData] = useState(null)\n    const [error, setError] = useState(null)\n    const [loading, setLoading] = useState(false)\n\n    const request = async (...args) => {\n        setLoading(true)\n        try {\n            const result = await apiFunc(...args)\n            setData(result.data)\n        } catch (err) {\n            setError(err || 'Unexpected Error!')\n        } finally {\n            setLoading(false)\n        }\n    }\n\n    return {\n        data,\n        error,\n        loading,\n        request\n    }\n}\n","import { styled } from '@mui/material/styles'\nimport { Button } from '@mui/material'\n\nexport const StyledButton = styled(Button)(({ theme, color = 'primary' }) => ({\n    color: 'white',\n    backgroundColor: theme.palette[color].main,\n    '&:hover': {\n        backgroundColor: theme.palette[color].main,\n        backgroundImage: `linear-gradient(rgb(0 0 0/10%) 0 0)`\n    }\n}))\n","import { createPortal } from 'react-dom'\nimport { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Dialog, DialogActions, DialogContent, Typography, DialogTitle } from '@mui/material'\nimport { StyledButton } from 'ui-component/button/StyledButton'\nimport { Input } from 'ui-component/input/Input'\n\nconst LoginDialog = ({ show, dialogProps, onConfirm }) => {\n    const portalElement = document.getElementById('portal')\n    const usernameInput = {\n        label: 'Username',\n        name: 'username',\n        type: 'string',\n        placeholder: 'john doe'\n    }\n    const passwordInput = {\n        label: 'Password',\n        name: 'password',\n        type: 'password'\n    }\n    const [usernameVal, setUsernameVal] = useState('')\n    const [passwordVal, setPasswordVal] = useState('')\n\n    const component = show ? (\n        <Dialog\n            onKeyUp={(e) => {\n                if (e.key === 'Enter') {\n                    onConfirm(usernameVal, passwordVal)\n                }\n            }}\n            open={show}\n            fullWidth\n            maxWidth='xs'\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n        >\n            <DialogTitle sx={{ fontSize: '1rem' }} id='alert-dialog-title'>\n                {dialogProps.title}\n            </DialogTitle>\n            <DialogContent>\n                <Typography>Username</Typography>\n                <Input\n                    inputParam={usernameInput}\n                    onChange={(newValue) => setUsernameVal(newValue)}\n                    value={usernameVal}\n                    showDialog={false}\n                />\n                <div style={{ marginTop: 20 }}></div>\n                <Typography>Password</Typography>\n                <Input inputParam={passwordInput} onChange={(newValue) => setPasswordVal(newValue)} value={passwordVal} />\n            </DialogContent>\n            <DialogActions>\n                <StyledButton variant='contained' onClick={() => onConfirm(usernameVal, passwordVal)}>\n                    {dialogProps.confirmButtonName}\n                </StyledButton>\n            </DialogActions>\n        </Dialog>\n    ) : null\n\n    return createPortal(component, portalElement)\n}\n\nLoginDialog.propTypes = {\n    show: PropTypes.bool,\n    dialogProps: PropTypes.object,\n    onConfirm: PropTypes.func\n}\n\nexport default LoginDialog\n","import Editor from 'react-simple-code-editor'\nimport { highlight, languages } from 'prismjs/components/prism-core'\nimport 'prismjs/components/prism-clike'\nimport 'prismjs/components/prism-javascript'\nimport 'prismjs/components/prism-json'\nimport 'prismjs/components/prism-markup'\nimport './prism-dark.css'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '@mui/material/styles'\n\nexport const DarkCodeEditor = ({ value, placeholder, disabled = false, type, style, onValueChange, onMouseUp, onBlur }) => {\n    const theme = useTheme()\n\n    return (\n        <Editor\n            disabled={disabled}\n            value={value}\n            placeholder={placeholder}\n            highlight={(code) => highlight(code, type === 'json' ? languages.json : languages.js)}\n            padding={10}\n            onValueChange={onValueChange}\n            onMouseUp={onMouseUp}\n            onBlur={onBlur}\n            tabSize={4}\n            style={{\n                ...style,\n                background: theme.palette.codeEditor.main\n            }}\n            textareaClassName='editor__textarea'\n        />\n    )\n}\n\nDarkCodeEditor.propTypes = {\n    value: PropTypes.string,\n    placeholder: PropTypes.string,\n    disabled: PropTypes.bool,\n    type: PropTypes.string,\n    style: PropTypes.object,\n    onValueChange: PropTypes.func,\n    onMouseUp: PropTypes.func,\n    onBlur: PropTypes.func\n}\n","import Editor from 'react-simple-code-editor'\nimport { highlight, languages } from 'prismjs/components/prism-core'\nimport 'prismjs/components/prism-clike'\nimport 'prismjs/components/prism-javascript'\nimport 'prismjs/components/prism-json'\nimport 'prismjs/components/prism-markup'\nimport './prism-light.css'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '@mui/material/styles'\n\nexport const LightCodeEditor = ({ value, placeholder, disabled = false, type, style, onValueChange, onMouseUp, onBlur }) => {\n    const theme = useTheme()\n\n    return (\n        <Editor\n            disabled={disabled}\n            value={value}\n            placeholder={placeholder}\n            highlight={(code) => highlight(code, type === 'json' ? languages.json : languages.js)}\n            padding={10}\n            onValueChange={onValueChange}\n            onMouseUp={onMouseUp}\n            onBlur={onBlur}\n            tabSize={4}\n            style={{\n                ...style,\n                background: theme.palette.card.main\n            }}\n            textareaClassName='editor__textarea'\n        />\n    )\n}\n\nLightCodeEditor.propTypes = {\n    value: PropTypes.string,\n    placeholder: PropTypes.string,\n    disabled: PropTypes.bool,\n    type: PropTypes.string,\n    style: PropTypes.object,\n    onValueChange: PropTypes.func,\n    onMouseUp: PropTypes.func,\n    onBlur: PropTypes.func\n}\n","import { createPortal } from 'react-dom'\nimport { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { Button, Dialog, DialogActions, DialogContent, Typography } from '@mui/material'\nimport { useTheme } from '@mui/material/styles'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { StyledButton } from 'ui-component/button/StyledButton'\nimport { DarkCodeEditor } from 'ui-component/editor/DarkCodeEditor'\nimport { LightCodeEditor } from 'ui-component/editor/LightCodeEditor'\nimport { HIDE_CANVAS_DIALOG, SHOW_CANVAS_DIALOG } from 'store/actions'\n\nimport './ExpandTextDialog.css'\n\nconst ExpandTextDialog = ({ show, dialogProps, onCancel, onConfirm }) => {\n    const portalElement = document.getElementById('portal')\n\n    const theme = useTheme()\n    const dispatch = useDispatch()\n    const customization = useSelector((state) => state.customization)\n    const languageType = 'json'\n\n    const [inputValue, setInputValue] = useState('')\n    const [inputParam, setInputParam] = useState(null)\n\n    useEffect(() => {\n        if (dialogProps.value) setInputValue(dialogProps.value)\n        if (dialogProps.inputParam) setInputParam(dialogProps.inputParam)\n\n        return () => {\n            setInputValue('')\n            setInputParam(null)\n        }\n    }, [dialogProps])\n\n    useEffect(() => {\n        if (show) dispatch({ type: SHOW_CANVAS_DIALOG })\n        else dispatch({ type: HIDE_CANVAS_DIALOG })\n    }, [show, dispatch])\n\n    const component = show ? (\n        <Dialog open={show} fullWidth maxWidth='md' aria-labelledby='alert-dialog-title' aria-describedby='alert-dialog-description'>\n            <DialogContent>\n                <div style={{ display: 'flex', flexDirection: 'row' }}>\n                    {inputParam && inputParam.type === 'string' && (\n                        <div style={{ flex: 70 }}>\n                            <Typography sx={{ mb: 2, ml: 1 }} variant='h4'>\n                                {inputParam.label}\n                            </Typography>\n                            <PerfectScrollbar\n                                style={{\n                                    border: '1px solid',\n                                    borderColor: theme.palette.grey['500'],\n                                    borderRadius: '12px',\n                                    height: '100%',\n                                    maxHeight: 'calc(100vh - 220px)',\n                                    overflowX: 'hidden',\n                                    backgroundColor: 'white'\n                                }}\n                            >\n                                {customization.isDarkMode ? (\n                                    <DarkCodeEditor\n                                        disabled={dialogProps.disabled}\n                                        value={inputValue}\n                                        onValueChange={(code) => setInputValue(code)}\n                                        placeholder={inputParam.placeholder}\n                                        type={languageType}\n                                        style={{\n                                            fontSize: '0.875rem',\n                                            minHeight: 'calc(100vh - 220px)',\n                                            width: '100%'\n                                        }}\n                                    />\n                                ) : (\n                                    <LightCodeEditor\n                                        disabled={dialogProps.disabled}\n                                        value={inputValue}\n                                        onValueChange={(code) => setInputValue(code)}\n                                        placeholder={inputParam.placeholder}\n                                        type={languageType}\n                                        style={{\n                                            fontSize: '0.875rem',\n                                            minHeight: 'calc(100vh - 220px)',\n                                            width: '100%'\n                                        }}\n                                    />\n                                )}\n                            </PerfectScrollbar>\n                        </div>\n                    )}\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onCancel}>{dialogProps.cancelButtonName}</Button>\n                <StyledButton disabled={dialogProps.disabled} variant='contained' onClick={() => onConfirm(inputValue, inputParam.name)}>\n                    {dialogProps.confirmButtonName}\n                </StyledButton>\n            </DialogActions>\n        </Dialog>\n    ) : null\n\n    return createPortal(component, portalElement)\n}\n\nExpandTextDialog.propTypes = {\n    show: PropTypes.bool,\n    dialogProps: PropTypes.object,\n    onCancel: PropTypes.func,\n    onConfirm: PropTypes.func\n}\n\nexport default ExpandTextDialog\n","import { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { FormControl, OutlinedInput } from '@mui/material'\nimport ExpandTextDialog from 'ui-component/dialog/ExpandTextDialog'\n\nexport const Input = ({ inputParam, value, onChange, disabled = false, showDialog, dialogProps, onDialogCancel, onDialogConfirm }) => {\n    const [myValue, setMyValue] = useState(value ?? '')\n\n    const getInputType = (type) => {\n        switch (type) {\n            case 'string':\n                return 'text'\n            case 'password':\n                return 'password'\n            case 'number':\n                return 'number'\n            default:\n                return 'text'\n        }\n    }\n\n    return (\n        <>\n            <FormControl sx={{ mt: 1, width: '100%' }} size='small'>\n                <OutlinedInput\n                    id={inputParam.name}\n                    size='small'\n                    disabled={disabled}\n                    type={getInputType(inputParam.type)}\n                    placeholder={inputParam.placeholder}\n                    multiline={!!inputParam.rows}\n                    rows={inputParam.rows ?? 1}\n                    value={myValue}\n                    name={inputParam.name}\n                    onChange={(e) => {\n                        setMyValue(e.target.value)\n                        onChange(e.target.value)\n                    }}\n                    inputProps={{\n                        step: inputParam.step ?? 0.1,\n                        style: {\n                            height: inputParam.rows ? '90px' : 'inherit'\n                        }\n                    }}\n                />\n            </FormControl>\n            {showDialog && (\n                <ExpandTextDialog\n                    show={showDialog}\n                    dialogProps={dialogProps}\n                    onCancel={onDialogCancel}\n                    onConfirm={(newValue, inputParamName) => {\n                        setMyValue(newValue)\n                        onDialogConfirm(newValue, inputParamName)\n                    }}\n                ></ExpandTextDialog>\n            )}\n        </>\n    )\n}\n\nInput.propTypes = {\n    inputParam: PropTypes.object,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    onChange: PropTypes.func,\n    disabled: PropTypes.bool,\n    showDialog: PropTypes.bool,\n    dialogProps: PropTypes.object,\n    onDialogCancel: PropTypes.func,\n    onDialogConfirm: PropTypes.func\n}\n","import { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\n// material-ui\nimport { Grid, Box, Stack } from '@mui/material'\nimport { useTheme } from '@mui/material/styles'\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard'\nimport ItemCard from 'ui-component/cards/ItemCard'\nimport { gridSpacing } from 'store/constant'\nimport WorkflowEmptySVG from 'assets/images/workflow_empty.svg'\nimport { StyledButton } from 'ui-component/button/StyledButton'\nimport LoginDialog from 'ui-component/dialog/LoginDialog'\n\n// API\nimport chatflowsApi from 'api/chatflows'\n\n// Hooks\nimport useApi from 'hooks/useApi'\n\n// const\nimport { baseURL } from 'store/constant'\n\n// icons\nimport { IconPlus } from '@tabler/icons'\n\n// ==============================|| CHATFLOWS ||============================== //\n\nconst Chatflows = () => {\n    const navigate = useNavigate()\n    const theme = useTheme()\n    const customization = useSelector((state) => state.customization)\n\n    const [isLoading, setLoading] = useState(true)\n    const [images, setImages] = useState({})\n    const [loginDialogOpen, setLoginDialogOpen] = useState(false)\n    const [loginDialogProps, setLoginDialogProps] = useState({})\n\n    const getAllChatflowsApi = useApi(chatflowsApi.getAllChatflows)\n\n    const onLoginClick = (username, password) => {\n        localStorage.setItem('username', username)\n        localStorage.setItem('password', password)\n        navigate(0)\n    }\n\n    const addNew = () => {\n        navigate('/canvas')\n    }\n\n    const goToCanvas = (selectedChatflow) => {\n        navigate(`/canvas/${selectedChatflow.id}`)\n    }\n\n    useEffect(() => {\n        getAllChatflowsApi.request()\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        if (getAllChatflowsApi.error) {\n            if (getAllChatflowsApi.error?.response?.status === 401) {\n                setLoginDialogProps({\n                    title: 'Login',\n                    confirmButtonName: 'Login'\n                })\n                setLoginDialogOpen(true)\n            }\n        }\n    }, [getAllChatflowsApi.error])\n\n    useEffect(() => {\n        setLoading(getAllChatflowsApi.loading)\n    }, [getAllChatflowsApi.loading])\n\n    useEffect(() => {\n        if (getAllChatflowsApi.data) {\n            try {\n                const chatflows = getAllChatflowsApi.data\n                const images = {}\n                for (let i = 0; i < chatflows.length; i += 1) {\n                    const flowDataStr = chatflows[i].flowData\n                    const flowData = JSON.parse(flowDataStr)\n                    const nodes = flowData.nodes || []\n                    images[chatflows[i].id] = []\n                    for (let j = 0; j < nodes.length; j += 1) {\n                        const imageSrc = `${baseURL}/api/v1/node-icon/${nodes[j].data.name}`\n                        if (!images[chatflows[i].id].includes(imageSrc)) {\n                            images[chatflows[i].id].push(imageSrc)\n                        }\n                    }\n                }\n                setImages(images)\n            } catch (e) {\n                console.error(e)\n            }\n        }\n    }, [getAllChatflowsApi.data])\n\n    return (\n        <MainCard sx={{ background: customization.isDarkMode ? theme.palette.common.black : '' }}>\n            <Stack flexDirection='row'>\n                <h1>Chatflows</h1>\n                <Grid sx={{ mb: 1.25 }} container direction='row'>\n                    <Box sx={{ flexGrow: 1 }} />\n                    <Grid item>\n                        <StyledButton variant='contained' sx={{ color: 'white' }} onClick={addNew} startIcon={<IconPlus />}>\n                            Add New\n                        </StyledButton>\n                    </Grid>\n                </Grid>\n            </Stack>\n            <Grid container spacing={gridSpacing}>\n                {!isLoading &&\n                    getAllChatflowsApi.data &&\n                    getAllChatflowsApi.data.map((data, index) => (\n                        <Grid key={index} item lg={3} md={4} sm={6} xs={12}>\n                            <ItemCard onClick={() => goToCanvas(data)} data={data} images={images[data.id]} />\n                        </Grid>\n                    ))}\n            </Grid>\n            {!isLoading && (!getAllChatflowsApi.data || getAllChatflowsApi.data.length === 0) && (\n                <Stack sx={{ alignItems: 'center', justifyContent: 'center' }} flexDirection='column'>\n                    <Box sx={{ p: 2, height: 'auto' }}>\n                        <img style={{ objectFit: 'cover', height: '30vh', width: 'auto' }} src={WorkflowEmptySVG} alt='WorkflowEmptySVG' />\n                    </Box>\n                    <div>No Chatflows Yet</div>\n                </Stack>\n            )}\n            <LoginDialog show={loginDialogOpen} dialogProps={loginDialogProps} onConfirm={onLoginClick} />\n        </MainCard>\n    )\n}\n\nexport default Chatflows\n","export function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n}\n\n// Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n}\n\n// Emulate the sass function \"unitless\"\nexport function toUnitless(length) {\n  return parseFloat(length);\n}\n\n// Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\nexport function convertLength(baseFontSize) {\n  return (length, toUnit) => {\n    const fromUnit = getUnit(length);\n\n    // Optimize for cases where `from` and `to` units are accidentally the same.\n    if (fromUnit === toUnit) {\n      return length;\n    }\n\n    // Convert input length to pixels.\n    let pxLength = toUnitless(length);\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      }\n    }\n\n    // Convert length in pixels to the output unit\n    let outputLength = pxLength;\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty({\n  size,\n  grid\n}) {\n  const sizeBelow = size - size % grid;\n  const sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n}\n\n// fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\nexport function fontGrid({\n  lineHeight,\n  pixels,\n  htmlFontSize\n}) {\n  return pixels / (lineHeight * htmlFontSize);\n}\n\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\nexport function responsiveProperty({\n  cssProperty,\n  min,\n  max,\n  unit = 'rem',\n  breakpoints = [600, 900, 1200],\n  transform = null\n}) {\n  const output = {\n    [cssProperty]: `${min}${unit}`\n  };\n  const factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(breakpoint => {\n    let value = min + factor * breakpoint;\n    if (transform !== null) {\n      value = transform(value);\n    }\n    output[`@media (min-width:${breakpoint}px)`] = {\n      [cssProperty]: `${Math.round(value * 10000) / 10000}${unit}`\n    };\n  });\n  return output;\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.variant === 'rounded' && {\n    borderRadius: (theme.vars || theme).shape.borderRadius\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.5s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 1.6s linear 0.5s infinite;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${0},\n          transparent\n        );\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, (theme.vars || theme).palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n      animation = 'pulse',\n      className,\n      component = 'span',\n      height,\n      style,\n      variant = 'text',\n      width\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\", \"className\", \"useFlexGap\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport systemStyled from '../styled';\nimport useThemePropsSystem from '../useThemeProps';\nimport { extendSxProp } from '../styleFunctionSx';\nimport createTheme from '../createTheme';\nimport { handleBreakpoints, mergeBreakpointsInOrder, resolveBreakpointValues } from '../breakpoints';\nimport { createUnarySpacing, getValue } from '../spacing';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\n// widening Theme to any so that the consumer can own the theme structure.\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n});\nfunction useThemePropsDefault(props) {\n  return useThemePropsSystem({\n    props,\n    name: 'MuiStack',\n    defaultTheme\n  });\n}\n\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n    return output;\n  }, []);\n}\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex',\n    flexDirection: 'column'\n  }, handleBreakpoints({\n    theme\n  }, resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), propValue => ({\n    flexDirection: propValue\n  })));\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n    const styleFromPropValue = (propValue, breakpoint) => {\n      if (ownerState.useFlexGap) {\n        return {\n          gap: getValue(transformer, propValue)\n        };\n      }\n      return {\n        '& > :not(style) ~ :not(style)': {\n          margin: 0,\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nexport default function createStack(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiStack'\n  } = options;\n  const useUtilityClasses = () => {\n    const slots = {\n      root: ['root']\n    };\n    return composeClasses(slots, slot => generateUtilityClass(componentName, slot), {});\n  };\n  const StackRoot = createStyledComponent(style);\n  const Stack = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n    const themeProps = useThemeProps(inProps);\n    const props = extendSxProp(themeProps); // `color` type conflicts with html color attribute.\n    const {\n        component = 'div',\n        direction = 'column',\n        spacing = 0,\n        divider,\n        children,\n        className,\n        useFlexGap = false\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = {\n      direction,\n      spacing,\n      useFlexGap\n    };\n    const classes = useUtilityClasses();\n    return /*#__PURE__*/_jsx(StackRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      ref: ref,\n      className: clsx(classes.root, className)\n    }, other, {\n      children: divider ? joinChildren(children, divider) : children\n    }));\n  });\n  process.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n    divider: PropTypes.node,\n    spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Stack;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createStack } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Stack = createStack({\n  createStyledComponent: styled('div', {\n    name: 'MuiStack',\n    slot: 'Root',\n    overridesResolver: (props, styles) => styles.root\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.\n   *\n   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),\n   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.\n   *\n   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.\n   * @default false\n   */\n  useFlexGap: PropTypes.bool\n} : void 0;\nexport default Stack;","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;"],"names":["getAllChatflows","client","get","getSpecificChatflow","id","concat","getSpecificChatflowFromPublicEndpoint","createNewChatflow","body","post","updateChatflow","put","deleteChatflow","delete","getIsChatflowStreaming","apiFunc","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","request","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","_args","arguments","wrap","_context","prev","next","apply","sent","t0","finish","stop","StyledButton","styled","Button","theme","_ref$color","color","backgroundColor","palette","main","backgroundImage","show","dialogProps","onConfirm","portalElement","document","getElementById","usernameVal","setUsernameVal","passwordVal","setPasswordVal","component","_jsxs","Dialog","onKeyUp","e","key","open","fullWidth","maxWidth","children","_jsx","DialogTitle","sx","fontSize","title","DialogContent","Typography","Input","inputParam","label","name","type","placeholder","onChange","newValue","value","showDialog","style","marginTop","DialogActions","variant","onClick","confirmButtonName","createPortal","DarkCodeEditor","_ref$disabled","disabled","onValueChange","onMouseUp","onBlur","useTheme","Editor","highlight","code","languages","json","js","padding","tabSize","_objectSpread","background","codeEditor","textareaClassName","LightCodeEditor","card","onCancel","dispatch","useDispatch","customization","useSelector","state","languageType","inputValue","setInputValue","setInputParam","useEffect","SHOW_CANVAS_DIALOG","HIDE_CANVAS_DIALOG","display","flexDirection","flex","mb","ml","PerfectScrollbar","border","borderColor","grey","borderRadius","height","maxHeight","overflowX","isDarkMode","minHeight","width","cancelButtonName","_inputParam$rows","_inputParam$step","onDialogCancel","onDialogConfirm","myValue","setMyValue","_Fragment","FormControl","mt","size","OutlinedInput","getInputType","multiline","rows","target","inputProps","step","ExpandTextDialog","inputParamName","navigate","useNavigate","isLoading","images","setImages","loginDialogOpen","setLoginDialogOpen","_useState7","_useState8","loginDialogProps","setLoginDialogProps","getAllChatflowsApi","useApi","chatflowsApi","_getAllChatflowsApi$e","_getAllChatflowsApi$e2","response","status","chatflows","i","length","flowDataStr","flowData","nodes","JSON","parse","j","imageSrc","baseURL","includes","push","console","MainCard","common","black","Stack","Grid","container","direction","Box","flexGrow","item","startIcon","IconPlus","spacing","gridSpacing","map","index","lg","md","sm","xs","ItemCard","alignItems","justifyContent","p","objectFit","src","WorkflowEmptySVG","alt","LoginDialog","username","password","localStorage","setItem","getUnit","input","String","match","toUnitless","parseFloat","getSkeletonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_templateObject","_templateObject2","_templateObject3","_templateObject4","_t","_t2","_t3","_t4","_excluded","pulseKeyframe","keyframes","_taggedTemplateLiteral","waveKeyframe","SkeletonRoot","overridesResolver","props","styles","ownerState","root","animation","hasChildren","withChildren","fitContent","heightAuto","radiusUnit","shape","radiusValue","_extends","vars","Skeleton","bg","alpha","text","primary","mode","marginBottom","transformOrigin","transform","Math","round","content","visibility","_ref2","css","_ref3","action","hover","React","inProps","ref","useThemeProps","_props$animation","className","_props$component","_props$variant","other","_objectWithoutPropertiesLoose","Boolean","classes","slots","composeClasses","useUtilityClasses","as","clsx","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","useThemePropsDefault","useThemePropsSystem","joinChildren","separator","childrenArray","toArray","filter","reduce","output","child","handleBreakpoints","resolveBreakpointValues","values","breakpoints","propValue","transformer","createUnarySpacing","base","Object","keys","acc","breakpoint","directionValues","spacingValues","forEach","previousDirectionValue","deepmerge","useFlexGap","gap","getValue","_defineProperty","margin","row","column","mergeBreakpointsInOrder","options","undefined","_options$createStyled","createStyledComponent","_options$useThemeProp","_options$componentNam","componentName","StackRoot","themeProps","extendSxProp","_props$direction","_props$spacing","divider","_props$useFlexGap","createStack","createStyled"],"sourceRoot":""}