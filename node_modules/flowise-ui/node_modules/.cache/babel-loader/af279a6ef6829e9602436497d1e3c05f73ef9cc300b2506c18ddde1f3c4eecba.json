{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _slicedToArray from\"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"children\",\"value\",\"index\"];import{createPortal}from'react-dom';import{useNavigate}from'react-router-dom';import{useState,useEffect}from'react';import{useDispatch}from'react-redux';import{Tabs,Tab,Dialog,DialogContent,DialogTitle,Box}from'@mui/material';import{CopyBlock,atomOneDark}from'react-code-blocks';// Project import\nimport{Dropdown}from'ui-component/dropdown/Dropdown';import ShareChatbot from'./ShareChatbot';import EmbedChat from'./EmbedChat';// Const\nimport{baseURL}from'store/constant';import{SET_CHATFLOW}from'store/actions';// Images\nimport pythonSVG from'assets/images/python.svg';import javascriptSVG from'assets/images/javascript.svg';import cURLSVG from'assets/images/cURL.svg';import EmbedSVG from'assets/images/embed.svg';import ShareChatbotSVG from'assets/images/sharing.png';// API\nimport apiKeyApi from'api/apikey';import chatflowsApi from'api/chatflows';import configApi from'api/config';// Hooks\nimport useApi from'hooks/useApi';import{CheckboxInput}from'ui-component/checkbox/Checkbox';import{TableViewOnly}from'ui-component/table/Table';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function TabPanel(props){var children=props.children,value=props.value,index=props.index,other=_objectWithoutProperties(props,_excluded);return/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread({role:\"tabpanel\",hidden:value!==index,id:\"attachment-tabpanel-\".concat(index),\"aria-labelledby\":\"attachment-tab-\".concat(index)},other),{},{children:value===index&&/*#__PURE__*/_jsx(Box,{sx:{p:1},children:children})}));}function a11yProps(index){return{id:\"attachment-tab-\".concat(index),'aria-controls':\"attachment-tabpanel-\".concat(index)};}var unshiftFiles=function unshiftFiles(configData){var filesConfig=configData.find(function(config){return config.name==='files';});if(filesConfig){configData=configData.filter(function(config){return config.name!=='files';});configData.unshift(filesConfig);}return configData;};var getConfigExamplesForJS=function getConfigExamplesForJS(configData,bodyType){var finalStr='';configData=unshiftFiles(configData);var loop=Math.min(configData.length,4);for(var i=0;i<loop;i+=1){var config=configData[i];var exampleVal=\"\\\"example\\\"\";if(config.type==='string')exampleVal=\"\\\"example\\\"\";else if(config.type==='boolean')exampleVal=\"true\";else if(config.type==='number')exampleVal=\"1\";else if(config.name==='files')exampleVal=\"input.files[0]\";finalStr+=bodyType==='json'?\"\\n      \\\"\".concat(config.name,\"\\\": \").concat(exampleVal,\",\"):\"formData.append(\\\"\".concat(config.name,\"\\\", \").concat(exampleVal,\")\\n\");if(i===loop-1&&bodyType!=='json')\"formData.append(\\\"question\\\", \\\"Hey, how are you?\\\")\\n\";}return finalStr;};var getConfigExamplesForPython=function getConfigExamplesForPython(configData,bodyType){var finalStr='';configData=unshiftFiles(configData);var loop=Math.min(configData.length,4);for(var i=0;i<loop;i+=1){var config=configData[i];var exampleVal=\"\\\"example\\\"\";if(config.type==='string')exampleVal=\"\\\"example\\\"\";else if(config.type==='boolean')exampleVal=\"true\";else if(config.type==='number')exampleVal=\"1\";else if(config.name==='files')exampleVal=\"('example\".concat(config.type,\"', open('example\").concat(config.type,\"', 'rb'))\");finalStr+=bodyType==='json'?\"\\n        \\\"\".concat(config.name,\"\\\": \").concat(exampleVal,\",\"):\"\\n    \\\"\".concat(config.name,\"\\\": \").concat(exampleVal,\",\");if(i===loop-1&&bodyType!=='json')finalStr+=\"\\n    \\\"question\\\": \\\"Hey, how are you?\\\"\\n\";}return finalStr;};var getConfigExamplesForCurl=function getConfigExamplesForCurl(configData,bodyType){var finalStr='';configData=unshiftFiles(configData);var loop=Math.min(configData.length,4);for(var i=0;i<loop;i+=1){var config=configData[i];var exampleVal=\"example\";if(config.type==='string')exampleVal=bodyType==='json'?\"\\\"example\\\"\":\"example\";else if(config.type==='boolean')exampleVal=\"true\";else if(config.type==='number')exampleVal=\"1\";else if(config.name==='files')exampleVal=\"@/home/user1/Desktop/example\".concat(config.type);finalStr+=bodyType==='json'?\"\\\"\".concat(config.name,\"\\\": \").concat(exampleVal):\"\\n     -F \\\"\".concat(config.name,\"=\").concat(exampleVal,\"\\\"\");if(i===loop-1)finalStr+=bodyType==='json'?\" }\":\" \\\\\\n     -F \\\"question=Hey, how are you?\\\"\";else finalStr+=bodyType==='json'?\", \":\" \\\\\";}return finalStr;};var APICodeDialog=function APICodeDialog(_ref){var _ref2,_dialogProps$chatflow;var show=_ref.show,dialogProps=_ref.dialogProps,onCancel=_ref.onCancel;var portalElement=document.getElementById('portal');var navigate=useNavigate();var dispatch=useDispatch();var codes=['Embed','Python','JavaScript','cURL','Share Chatbot'];var _useState=useState(0),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),keyOptions=_useState4[0],setKeyOptions=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),apiKeys=_useState6[0],setAPIKeys=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),chatflowApiKeyId=_useState8[0],setChatflowApiKeyId=_useState8[1];var _useState9=useState({}),_useState10=_slicedToArray(_useState9,2),selectedApiKey=_useState10[0],setSelectedApiKey=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),checkboxVal=_useState12[0],setCheckbox=_useState12[1];var getAllAPIKeysApi=useApi(apiKeyApi.getAllAPIKeys);var updateChatflowApi=useApi(chatflowsApi.updateChatflow);var getIsChatflowStreamingApi=useApi(chatflowsApi.getIsChatflowStreaming);var getConfigApi=useApi(configApi.getConfig);var onCheckBoxChanged=function onCheckBoxChanged(newVal){setCheckbox(newVal);if(newVal){getConfigApi.request(dialogProps.chatflowid);}};var onApiKeySelected=function onApiKeySelected(keyValue){if(keyValue==='addnewkey'){navigate('/apikey');return;}setChatflowApiKeyId(keyValue);setSelectedApiKey(apiKeys.find(function(key){return key.id===keyValue;}));var updateBody={apikeyid:keyValue};updateChatflowApi.request(dialogProps.chatflowid,updateBody);};useEffect(function(){if(updateChatflowApi.data){dispatch({type:SET_CHATFLOW,chatflow:updateChatflowApi.data});}},[updateChatflowApi.data,dispatch]);var handleChange=function handleChange(event,newValue){setValue(newValue);};var getCode=function getCode(codeLang){if(codeLang==='Python'){return\"import requests\\n\\nAPI_URL = \\\"\".concat(baseURL,\"/api/v1/prediction/\").concat(dialogProps.chatflowid,\"\\\"\\n\\ndef query(payload):\\n    response = requests.post(API_URL, json=payload)\\n    return response.json()\\n    \\noutput = query({\\n    \\\"question\\\": \\\"Hey, how are you?\\\",\\n})\\n\");}else if(codeLang==='JavaScript'){return\"async function query(data) {\\n    const response = await fetch(\\n        \\\"\".concat(baseURL,\"/api/v1/prediction/\").concat(dialogProps.chatflowid,\"\\\",\\n        {\\n            method: \\\"POST\\\",\\n            headers: {\\n                \\\"Content-Type\\\": \\\"application/json\\\"\\n            },\\n            body: JSON.stringify(data)\\n        }\\n    );\\n    const result = await response.json();\\n    return result;\\n}\\n\\nquery({\\\"question\\\": \\\"Hey, how are you?\\\"}).then((response) => {\\n    console.log(response);\\n});\\n\");}else if(codeLang==='cURL'){return\"curl \".concat(baseURL,\"/api/v1/prediction/\").concat(dialogProps.chatflowid,\" \\\\\\n     -X POST \\\\\\n     -d '{\\\"question\\\": \\\"Hey, how are you?\\\"}' \\\\\\n     -H \\\"Content-Type: application/json\\\"\");}return'';};var getCodeWithAuthorization=function getCodeWithAuthorization(codeLang){if(codeLang==='Python'){return\"import requests\\n\\nAPI_URL = \\\"\".concat(baseURL,\"/api/v1/prediction/\").concat(dialogProps.chatflowid,\"\\\"\\nheaders = {\\\"Authorization\\\": \\\"Bearer \").concat(selectedApiKey===null||selectedApiKey===void 0?void 0:selectedApiKey.apiKey,\"\\\"}\\n\\ndef query(payload):\\n    response = requests.post(API_URL, headers=headers, json=payload)\\n    return response.json()\\n    \\noutput = query({\\n    \\\"question\\\": \\\"Hey, how are you?\\\",\\n})\\n\");}else if(codeLang==='JavaScript'){return\"async function query(data) {\\n    const response = await fetch(\\n        \\\"\".concat(baseURL,\"/api/v1/prediction/\").concat(dialogProps.chatflowid,\"\\\",\\n        {\\n            headers: {\\n                Authorization: \\\"Bearer \").concat(selectedApiKey===null||selectedApiKey===void 0?void 0:selectedApiKey.apiKey,\"\\\",\\n                \\\"Content-Type\\\": \\\"application/json\\\"\\n            },\\n            method: \\\"POST\\\",\\n            body: JSON.stringify(data)\\n        }\\n    );\\n    const result = await response.json();\\n    return result;\\n}\\n\\nquery({\\\"question\\\": \\\"Hey, how are you?\\\"}).then((response) => {\\n    console.log(response);\\n});\\n\");}else if(codeLang==='cURL'){return\"curl \".concat(baseURL,\"/api/v1/prediction/\").concat(dialogProps.chatflowid,\" \\\\\\n     -X POST \\\\\\n     -d '{\\\"question\\\": \\\"Hey, how are you?\\\"}' \\\\\\n     -H \\\"Content-Type: application/json\\\" \\\\\\n     -H \\\"Authorization: Bearer \").concat(selectedApiKey===null||selectedApiKey===void 0?void 0:selectedApiKey.apiKey,\"\\\"\");}return'';};var getLang=function getLang(codeLang){if(codeLang==='Python'){return'python';}else if(codeLang==='JavaScript'){return'javascript';}else if(codeLang==='cURL'){return'bash';}return'python';};var getSVG=function getSVG(codeLang){if(codeLang==='Python'){return pythonSVG;}else if(codeLang==='JavaScript'){return javascriptSVG;}else if(codeLang==='Embed'){return EmbedSVG;}else if(codeLang==='cURL'){return cURLSVG;}else if(codeLang==='Share Chatbot'){return ShareChatbotSVG;}return pythonSVG;};// ----------------------------CONFIG FORM DATA --------------------------//\nvar getConfigCodeWithFormData=function getConfigCodeWithFormData(codeLang,configData){if(codeLang==='Python'){return\"import requests\\n\\nAPI_URL = \\\"\".concat(baseURL,\"/api/v1/prediction/\").concat(dialogProps.chatflowid,\"\\\"\\n\\n# use form data to upload files\\nform_data = {\").concat(getConfigExamplesForPython(configData,'formData'),\"}\\n\\ndef query(form_data):\\n    response = requests.post(API_URL, files=form_data)\\n    return response.json()\\n\\noutput = query(form_data)\\n\");}else if(codeLang==='JavaScript'){return\"// use FormData to upload files\\nlet formData = new FormData();\\n\".concat(getConfigExamplesForJS(configData,'formData'),\"\\nasync function query(formData) {\\n    const response = await fetch(\\n        \\\"\").concat(baseURL,\"/api/v1/prediction/\").concat(dialogProps.chatflowid,\"\\\",\\n        {\\n            method: \\\"POST\\\",\\n            body: formData\\n        }\\n    );\\n    const result = await response.json();\\n    return result;\\n}\\n\\nquery(formData).then((response) => {\\n    console.log(response);\\n});\\n\");}else if(codeLang==='cURL'){return\"curl \".concat(baseURL,\"/api/v1/prediction/\").concat(dialogProps.chatflowid,\" \\\\\\n     -X POST \\\\\").concat(getConfigExamplesForCurl(configData,'formData'),\" \\\\\\n     -H \\\"Content-Type: multipart/form-data\\\"\");}return'';};// ----------------------------CONFIG FORM DATA with AUTH--------------------------//\nvar getConfigCodeWithFormDataWithAuth=function getConfigCodeWithFormDataWithAuth(codeLang,configData){if(codeLang==='Python'){return\"import requests\\n\\nAPI_URL = \\\"\".concat(baseURL,\"/api/v1/prediction/\").concat(dialogProps.chatflowid,\"\\\"\\nheaders = {\\\"Authorization\\\": \\\"Bearer \").concat(selectedApiKey===null||selectedApiKey===void 0?void 0:selectedApiKey.apiKey,\"\\\"}\\n\\n# use form data to upload files\\nform_data = {\").concat(getConfigExamplesForPython(configData,'formData'),\"}\\n\\ndef query(form_data):\\n    response = requests.post(API_URL, headers=headers, files=form_data)\\n    return response.json()\\n\\noutput = query(form_data)\\n\");}else if(codeLang==='JavaScript'){return\"// use FormData to upload files\\nlet formData = new FormData();\\n\".concat(getConfigExamplesForJS(configData,'formData'),\"\\nasync function query(formData) {\\n    const response = await fetch(\\n        \\\"\").concat(baseURL,\"/api/v1/prediction/\").concat(dialogProps.chatflowid,\"\\\",\\n        {\\n            headers: { Authorization: \\\"Bearer \").concat(selectedApiKey===null||selectedApiKey===void 0?void 0:selectedApiKey.apiKey,\"\\\" },\\n            method: \\\"POST\\\",\\n            body: formData\\n        }\\n    );\\n    const result = await response.json();\\n    return result;\\n}\\n\\nquery(formData).then((response) => {\\n    console.log(response);\\n});\\n\");}else if(codeLang==='cURL'){return\"curl \".concat(baseURL,\"/api/v1/prediction/\").concat(dialogProps.chatflowid,\" \\\\\\n     -X POST \\\\\").concat(getConfigExamplesForCurl(configData,'formData'),\" \\\\\\n     -H \\\"Content-Type: multipart/form-data\\\" \\\\\\n     -H \\\"Authorization: Bearer \").concat(selectedApiKey===null||selectedApiKey===void 0?void 0:selectedApiKey.apiKey,\"\\\"\");}return'';};// ----------------------------CONFIG JSON--------------------------//\nvar getConfigCode=function getConfigCode(codeLang,configData){if(codeLang==='Python'){return\"import requests\\n\\nAPI_URL = \\\"\".concat(baseURL,\"/api/v1/prediction/\").concat(dialogProps.chatflowid,\"\\\"\\n\\ndef query(payload):\\n    response = requests.post(API_URL, json=payload)\\n    return response.json()\\n\\noutput = query({\\n    \\\"question\\\": \\\"Hey, how are you?\\\",\\n    \\\"overrideConfig\\\": {\").concat(getConfigExamplesForPython(configData,'json'),\"\\n    }\\n})\\n\");}else if(codeLang==='JavaScript'){return\"async function query(data) {\\n    const response = await fetch(\\n        \\\"\".concat(baseURL,\"/api/v1/prediction/\").concat(dialogProps.chatflowid,\"\\\",\\n        {\\n            method: \\\"POST\\\",\\n            headers: {\\n                \\\"Content-Type\\\": \\\"application/json\\\"\\n            },\\n            body: JSON.stringify(data)\\n        }\\n    );\\n    const result = await response.json();\\n    return result;\\n}\\n\\nquery({\\n  \\\"question\\\": \\\"Hey, how are you?\\\",\\n  \\\"overrideConfig\\\": {\").concat(getConfigExamplesForJS(configData,'json'),\"\\n  }\\n}).then((response) => {\\n    console.log(response);\\n});\\n\");}else if(codeLang==='cURL'){return\"curl \".concat(baseURL,\"/api/v1/prediction/\").concat(dialogProps.chatflowid,\" \\\\\\n     -X POST \\\\\\n     -d '{\\\"question\\\": \\\"Hey, how are you?\\\", \\\"overrideConfig\\\": {\").concat(getConfigExamplesForCurl(configData,'json'),\"}' \\\\\\n     -H \\\"Content-Type: application/json\\\"\");}return'';};// ----------------------------CONFIG JSON with AUTH--------------------------//\nvar getConfigCodeWithAuthorization=function getConfigCodeWithAuthorization(codeLang,configData){if(codeLang==='Python'){return\"import requests\\n\\nAPI_URL = \\\"\".concat(baseURL,\"/api/v1/prediction/\").concat(dialogProps.chatflowid,\"\\\"\\nheaders = {\\\"Authorization\\\": \\\"Bearer \").concat(selectedApiKey===null||selectedApiKey===void 0?void 0:selectedApiKey.apiKey,\"\\\"}\\n\\ndef query(payload):\\n    response = requests.post(API_URL, headers=headers, json=payload)\\n    return response.json()\\n\\noutput = query({\\n    \\\"question\\\": \\\"Hey, how are you?\\\",\\n    \\\"overrideConfig\\\": {\").concat(getConfigExamplesForPython(configData,'json'),\"\\n    }\\n})\\n\");}else if(codeLang==='JavaScript'){return\"async function query(data) {\\n    const response = await fetch(\\n        \\\"\".concat(baseURL,\"/api/v1/prediction/\").concat(dialogProps.chatflowid,\"\\\",\\n        {\\n            headers: {\\n                Authorization: \\\"Bearer \").concat(selectedApiKey===null||selectedApiKey===void 0?void 0:selectedApiKey.apiKey,\"\\\",\\n                \\\"Content-Type\\\": \\\"application/json\\\"\\n            },\\n            method: \\\"POST\\\",\\n            body: JSON.stringify(data)\\n        }\\n    );\\n    const result = await response.json();\\n    return result;\\n}\\n\\nquery({\\n  \\\"question\\\": \\\"Hey, how are you?\\\",\\n  \\\"overrideConfig\\\": {\").concat(getConfigExamplesForJS(configData,'json'),\"\\n  }\\n}).then((response) => {\\n    console.log(response);\\n});\\n\");}else if(codeLang==='cURL'){return\"curl \".concat(baseURL,\"/api/v1/prediction/\").concat(dialogProps.chatflowid,\" \\\\\\n     -X POST \\\\\\n     -d '{\\\"question\\\": \\\"Hey, how are you?\\\", \\\"overrideConfig\\\": {\").concat(getConfigExamplesForCurl(configData,'json'),\"}' \\\\\\n     -H \\\"Content-Type: application/json\\\" \\\\\\n     -H \\\"Authorization: Bearer \").concat(selectedApiKey===null||selectedApiKey===void 0?void 0:selectedApiKey.apiKey,\"\\\"\");}return'';};useEffect(function(){if(getAllAPIKeysApi.data){var options=[{label:'No Authorization',name:''}];var _iterator=_createForOfIteratorHelper(getAllAPIKeysApi.data),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var key=_step.value;options.push({label:key.keyName,name:key.id});}}catch(err){_iterator.e(err);}finally{_iterator.f();}options.push({label:'- Add New Key -',name:'addnewkey'});setKeyOptions(options);setAPIKeys(getAllAPIKeysApi.data);if(dialogProps.chatflowApiKeyId){setChatflowApiKeyId(dialogProps.chatflowApiKeyId);setSelectedApiKey(getAllAPIKeysApi.data.find(function(key){return key.id===dialogProps.chatflowApiKeyId;}));}}},[dialogProps,getAllAPIKeysApi.data]);useEffect(function(){if(show){getAllAPIKeysApi.request();getIsChatflowStreamingApi.request(dialogProps.chatflowid);}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[show]);var component=show?/*#__PURE__*/_jsxs(Dialog,{open:show,fullWidth:true,maxWidth:\"md\",onClose:onCancel,\"aria-labelledby\":\"alert-dialog-title\",\"aria-describedby\":\"alert-dialog-description\",children:[/*#__PURE__*/_jsx(DialogTitle,{sx:{fontSize:'1rem'},id:\"alert-dialog-title\",children:dialogProps.title}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'row',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"div\",{style:{flex:80},children:/*#__PURE__*/_jsx(Tabs,{value:value,onChange:handleChange,\"aria-label\":\"tabs\",children:codes.map(function(codeLang,index){return/*#__PURE__*/_jsx(Tab,_objectSpread({icon:/*#__PURE__*/_jsx(\"img\",{style:{objectFit:'cover',height:15,width:'auto'},src:getSVG(codeLang),alt:\"code\"}),iconPosition:\"start\",label:codeLang},a11yProps(index)),index);})})}),/*#__PURE__*/_jsx(\"div\",{style:{flex:20},children:/*#__PURE__*/_jsx(Dropdown,{name:\"SelectKey\",disableClearable:true,options:keyOptions,onSelect:function onSelect(newValue){return onApiKeySelected(newValue);},value:(_ref2=(_dialogProps$chatflow=dialogProps.chatflowApiKeyId)!==null&&_dialogProps$chatflow!==void 0?_dialogProps$chatflow:chatflowApiKeyId)!==null&&_ref2!==void 0?_ref2:'Choose an API key'})})]}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:10}}),codes.map(function(codeLang,index){var _getIsChatflowStreami;return/*#__PURE__*/_jsxs(TabPanel,{value:value,index:index,children:[(codeLang==='Embed'||codeLang==='Share Chatbot')&&chatflowApiKeyId&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:\"You cannot use API key while embedding/sharing chatbot.\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Please select \",/*#__PURE__*/_jsx(\"b\",{children:\"\\\"No Authorization\\\"\"}),\" from the dropdown at the top right corner.\"]})]}),codeLang==='Embed'&&!chatflowApiKeyId&&/*#__PURE__*/_jsx(EmbedChat,{chatflowid:dialogProps.chatflowid}),codeLang!=='Embed'&&codeLang!=='Share Chatbot'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CopyBlock,{theme:atomOneDark,text:chatflowApiKeyId?getCodeWithAuthorization(codeLang):getCode(codeLang),language:getLang(codeLang),showLineNumbers:false,wrapLines:true}),/*#__PURE__*/_jsx(CheckboxInput,{label:\"Show Input Config\",value:checkboxVal,onChange:onCheckBoxChanged}),checkboxVal&&getConfigApi.data&&getConfigApi.data.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(TableViewOnly,{rows:getConfigApi.data,columns:Object.keys(getConfigApi.data[0])}),/*#__PURE__*/_jsx(CopyBlock,{theme:atomOneDark,text:chatflowApiKeyId?dialogProps.isFormDataRequired?getConfigCodeWithFormDataWithAuth(codeLang,getConfigApi.data):getConfigCodeWithAuthorization(codeLang,getConfigApi.data):dialogProps.isFormDataRequired?getConfigCodeWithFormData(codeLang,getConfigApi.data):getConfigCode(codeLang,getConfigApi.data),language:getLang(codeLang),showLineNumbers:false,wrapLines:true})]}),((_getIsChatflowStreami=getIsChatflowStreamingApi.data)===null||_getIsChatflowStreami===void 0?void 0:_getIsChatflowStreami.isStreaming)&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Read\\xA0\",/*#__PURE__*/_jsx(\"a\",{rel:\"noreferrer\",target:\"_blank\",href:\"https://docs.flowiseai.com/how-to-use#streaming\",children:\"here\"}),\"\\xA0on how to stream response back to application\"]})]}),codeLang==='Share Chatbot'&&!chatflowApiKeyId&&/*#__PURE__*/_jsx(ShareChatbot,{isSessionMemory:dialogProps.isSessionMemory})]},index);})]})]}):null;return/*#__PURE__*/createPortal(component,portalElement);};export default APICodeDialog;","map":{"version":3,"names":["createPortal","useNavigate","useState","useEffect","useDispatch","Tabs","Tab","Dialog","DialogContent","DialogTitle","Box","CopyBlock","atomOneDark","Dropdown","ShareChatbot","EmbedChat","baseURL","SET_CHATFLOW","pythonSVG","javascriptSVG","cURLSVG","EmbedSVG","ShareChatbotSVG","apiKeyApi","chatflowsApi","configApi","useApi","CheckboxInput","TableViewOnly","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TabPanel","props","children","value","index","other","_objectWithoutProperties","_excluded","_objectSpread","role","hidden","id","concat","sx","p","a11yProps","unshiftFiles","configData","filesConfig","find","config","name","filter","unshift","getConfigExamplesForJS","bodyType","finalStr","loop","Math","min","length","i","exampleVal","type","getConfigExamplesForPython","getConfigExamplesForCurl","APICodeDialog","_ref","_ref2","_dialogProps$chatflow","show","dialogProps","onCancel","portalElement","document","getElementById","navigate","dispatch","codes","_useState","_useState2","_slicedToArray","setValue","_useState3","_useState4","keyOptions","setKeyOptions","_useState5","_useState6","apiKeys","setAPIKeys","_useState7","_useState8","chatflowApiKeyId","setChatflowApiKeyId","_useState9","_useState10","selectedApiKey","setSelectedApiKey","_useState11","_useState12","checkboxVal","setCheckbox","getAllAPIKeysApi","getAllAPIKeys","updateChatflowApi","updateChatflow","getIsChatflowStreamingApi","getIsChatflowStreaming","getConfigApi","getConfig","onCheckBoxChanged","newVal","request","chatflowid","onApiKeySelected","keyValue","key","updateBody","apikeyid","data","chatflow","handleChange","event","newValue","getCode","codeLang","getCodeWithAuthorization","apiKey","getLang","getSVG","getConfigCodeWithFormData","getConfigCodeWithFormDataWithAuth","getConfigCode","getConfigCodeWithAuthorization","options","label","_iterator","_createForOfIteratorHelper","_step","s","n","done","push","keyName","err","e","f","component","open","fullWidth","maxWidth","onClose","fontSize","title","style","display","flexDirection","alignItems","flex","onChange","map","icon","objectFit","height","width","src","alt","iconPosition","disableClearable","onSelect","marginTop","_getIsChatflowStreami","theme","text","language","showLineNumbers","wrapLines","rows","columns","Object","keys","isFormDataRequired","isStreaming","rel","target","href","isSessionMemory"],"sources":["/Users/zorro/Downloads/Flowise/packages/ui/src/views/chatflows/APICodeDialog.js"],"sourcesContent":["import { createPortal } from 'react-dom'\nimport { useNavigate } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport { Tabs, Tab, Dialog, DialogContent, DialogTitle, Box } from '@mui/material'\nimport { CopyBlock, atomOneDark } from 'react-code-blocks'\n\n// Project import\nimport { Dropdown } from 'ui-component/dropdown/Dropdown'\nimport ShareChatbot from './ShareChatbot'\nimport EmbedChat from './EmbedChat'\n\n// Const\nimport { baseURL } from 'store/constant'\nimport { SET_CHATFLOW } from 'store/actions'\n\n// Images\nimport pythonSVG from 'assets/images/python.svg'\nimport javascriptSVG from 'assets/images/javascript.svg'\nimport cURLSVG from 'assets/images/cURL.svg'\nimport EmbedSVG from 'assets/images/embed.svg'\nimport ShareChatbotSVG from 'assets/images/sharing.png'\n\n// API\nimport apiKeyApi from 'api/apikey'\nimport chatflowsApi from 'api/chatflows'\nimport configApi from 'api/config'\n\n// Hooks\nimport useApi from 'hooks/useApi'\nimport { CheckboxInput } from 'ui-component/checkbox/Checkbox'\nimport { TableViewOnly } from 'ui-component/table/Table'\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props\n    return (\n        <div\n            role='tabpanel'\n            hidden={value !== index}\n            id={`attachment-tabpanel-${index}`}\n            aria-labelledby={`attachment-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box sx={{ p: 1 }}>{children}</Box>}\n        </div>\n    )\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `attachment-tab-${index}`,\n        'aria-controls': `attachment-tabpanel-${index}`\n    }\n}\n\nconst unshiftFiles = (configData) => {\n    const filesConfig = configData.find((config) => config.name === 'files')\n    if (filesConfig) {\n        configData = configData.filter((config) => config.name !== 'files')\n        configData.unshift(filesConfig)\n    }\n    return configData\n}\n\nconst getConfigExamplesForJS = (configData, bodyType) => {\n    let finalStr = ''\n    configData = unshiftFiles(configData)\n    const loop = Math.min(configData.length, 4)\n    for (let i = 0; i < loop; i += 1) {\n        const config = configData[i]\n        let exampleVal = `\"example\"`\n        if (config.type === 'string') exampleVal = `\"example\"`\n        else if (config.type === 'boolean') exampleVal = `true`\n        else if (config.type === 'number') exampleVal = `1`\n        else if (config.name === 'files') exampleVal = `input.files[0]`\n        finalStr += bodyType === 'json' ? `\\n      \"${config.name}\": ${exampleVal},` : `formData.append(\"${config.name}\", ${exampleVal})\\n`\n        if (i === loop - 1 && bodyType !== 'json') `formData.append(\"question\", \"Hey, how are you?\")\\n`\n    }\n    return finalStr\n}\n\nconst getConfigExamplesForPython = (configData, bodyType) => {\n    let finalStr = ''\n    configData = unshiftFiles(configData)\n    const loop = Math.min(configData.length, 4)\n    for (let i = 0; i < loop; i += 1) {\n        const config = configData[i]\n        let exampleVal = `\"example\"`\n        if (config.type === 'string') exampleVal = `\"example\"`\n        else if (config.type === 'boolean') exampleVal = `true`\n        else if (config.type === 'number') exampleVal = `1`\n        else if (config.name === 'files') exampleVal = `('example${config.type}', open('example${config.type}', 'rb'))`\n        finalStr += bodyType === 'json' ? `\\n        \"${config.name}\": ${exampleVal},` : `\\n    \"${config.name}\": ${exampleVal},`\n        if (i === loop - 1 && bodyType !== 'json') finalStr += `\\n    \"question\": \"Hey, how are you?\"\\n`\n    }\n    return finalStr\n}\n\nconst getConfigExamplesForCurl = (configData, bodyType) => {\n    let finalStr = ''\n    configData = unshiftFiles(configData)\n    const loop = Math.min(configData.length, 4)\n    for (let i = 0; i < loop; i += 1) {\n        const config = configData[i]\n        let exampleVal = `example`\n        if (config.type === 'string') exampleVal = bodyType === 'json' ? `\"example\"` : `example`\n        else if (config.type === 'boolean') exampleVal = `true`\n        else if (config.type === 'number') exampleVal = `1`\n        else if (config.name === 'files') exampleVal = `@/home/user1/Desktop/example${config.type}`\n        finalStr += bodyType === 'json' ? `\"${config.name}\": ${exampleVal}` : `\\n     -F \"${config.name}=${exampleVal}\"`\n        if (i === loop - 1) finalStr += bodyType === 'json' ? ` }` : ` \\\\\\n     -F \"question=Hey, how are you?\"`\n        else finalStr += bodyType === 'json' ? `, ` : ` \\\\`\n    }\n    return finalStr\n}\n\nconst APICodeDialog = ({ show, dialogProps, onCancel }) => {\n    const portalElement = document.getElementById('portal')\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n\n    const codes = ['Embed', 'Python', 'JavaScript', 'cURL', 'Share Chatbot']\n    const [value, setValue] = useState(0)\n    const [keyOptions, setKeyOptions] = useState([])\n    const [apiKeys, setAPIKeys] = useState([])\n    const [chatflowApiKeyId, setChatflowApiKeyId] = useState('')\n    const [selectedApiKey, setSelectedApiKey] = useState({})\n    const [checkboxVal, setCheckbox] = useState(false)\n\n    const getAllAPIKeysApi = useApi(apiKeyApi.getAllAPIKeys)\n    const updateChatflowApi = useApi(chatflowsApi.updateChatflow)\n    const getIsChatflowStreamingApi = useApi(chatflowsApi.getIsChatflowStreaming)\n    const getConfigApi = useApi(configApi.getConfig)\n\n    const onCheckBoxChanged = (newVal) => {\n        setCheckbox(newVal)\n        if (newVal) {\n            getConfigApi.request(dialogProps.chatflowid)\n        }\n    }\n\n    const onApiKeySelected = (keyValue) => {\n        if (keyValue === 'addnewkey') {\n            navigate('/apikey')\n            return\n        }\n        setChatflowApiKeyId(keyValue)\n        setSelectedApiKey(apiKeys.find((key) => key.id === keyValue))\n        const updateBody = {\n            apikeyid: keyValue\n        }\n        updateChatflowApi.request(dialogProps.chatflowid, updateBody)\n    }\n\n    useEffect(() => {\n        if (updateChatflowApi.data) {\n            dispatch({ type: SET_CHATFLOW, chatflow: updateChatflowApi.data })\n        }\n    }, [updateChatflowApi.data, dispatch])\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue)\n    }\n\n    const getCode = (codeLang) => {\n        if (codeLang === 'Python') {\n            return `import requests\n\nAPI_URL = \"${baseURL}/api/v1/prediction/${dialogProps.chatflowid}\"\n\ndef query(payload):\n    response = requests.post(API_URL, json=payload)\n    return response.json()\n    \noutput = query({\n    \"question\": \"Hey, how are you?\",\n})\n`\n        } else if (codeLang === 'JavaScript') {\n            return `async function query(data) {\n    const response = await fetch(\n        \"${baseURL}/api/v1/prediction/${dialogProps.chatflowid}\",\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        }\n    );\n    const result = await response.json();\n    return result;\n}\n\nquery({\"question\": \"Hey, how are you?\"}).then((response) => {\n    console.log(response);\n});\n`\n        } else if (codeLang === 'cURL') {\n            return `curl ${baseURL}/api/v1/prediction/${dialogProps.chatflowid} \\\\\n     -X POST \\\\\n     -d '{\"question\": \"Hey, how are you?\"}' \\\\\n     -H \"Content-Type: application/json\"`\n        }\n        return ''\n    }\n\n    const getCodeWithAuthorization = (codeLang) => {\n        if (codeLang === 'Python') {\n            return `import requests\n\nAPI_URL = \"${baseURL}/api/v1/prediction/${dialogProps.chatflowid}\"\nheaders = {\"Authorization\": \"Bearer ${selectedApiKey?.apiKey}\"}\n\ndef query(payload):\n    response = requests.post(API_URL, headers=headers, json=payload)\n    return response.json()\n    \noutput = query({\n    \"question\": \"Hey, how are you?\",\n})\n`\n        } else if (codeLang === 'JavaScript') {\n            return `async function query(data) {\n    const response = await fetch(\n        \"${baseURL}/api/v1/prediction/${dialogProps.chatflowid}\",\n        {\n            headers: {\n                Authorization: \"Bearer ${selectedApiKey?.apiKey}\",\n                \"Content-Type\": \"application/json\"\n            },\n            method: \"POST\",\n            body: JSON.stringify(data)\n        }\n    );\n    const result = await response.json();\n    return result;\n}\n\nquery({\"question\": \"Hey, how are you?\"}).then((response) => {\n    console.log(response);\n});\n`\n        } else if (codeLang === 'cURL') {\n            return `curl ${baseURL}/api/v1/prediction/${dialogProps.chatflowid} \\\\\n     -X POST \\\\\n     -d '{\"question\": \"Hey, how are you?\"}' \\\\\n     -H \"Content-Type: application/json\" \\\\\n     -H \"Authorization: Bearer ${selectedApiKey?.apiKey}\"`\n        }\n        return ''\n    }\n\n    const getLang = (codeLang) => {\n        if (codeLang === 'Python') {\n            return 'python'\n        } else if (codeLang === 'JavaScript') {\n            return 'javascript'\n        } else if (codeLang === 'cURL') {\n            return 'bash'\n        }\n        return 'python'\n    }\n\n    const getSVG = (codeLang) => {\n        if (codeLang === 'Python') {\n            return pythonSVG\n        } else if (codeLang === 'JavaScript') {\n            return javascriptSVG\n        } else if (codeLang === 'Embed') {\n            return EmbedSVG\n        } else if (codeLang === 'cURL') {\n            return cURLSVG\n        } else if (codeLang === 'Share Chatbot') {\n            return ShareChatbotSVG\n        }\n        return pythonSVG\n    }\n\n    // ----------------------------CONFIG FORM DATA --------------------------//\n\n    const getConfigCodeWithFormData = (codeLang, configData) => {\n        if (codeLang === 'Python') {\n            return `import requests\n\nAPI_URL = \"${baseURL}/api/v1/prediction/${dialogProps.chatflowid}\"\n\n# use form data to upload files\nform_data = {${getConfigExamplesForPython(configData, 'formData')}}\n\ndef query(form_data):\n    response = requests.post(API_URL, files=form_data)\n    return response.json()\n\noutput = query(form_data)\n`\n        } else if (codeLang === 'JavaScript') {\n            return `// use FormData to upload files\nlet formData = new FormData();\n${getConfigExamplesForJS(configData, 'formData')}\nasync function query(formData) {\n    const response = await fetch(\n        \"${baseURL}/api/v1/prediction/${dialogProps.chatflowid}\",\n        {\n            method: \"POST\",\n            body: formData\n        }\n    );\n    const result = await response.json();\n    return result;\n}\n\nquery(formData).then((response) => {\n    console.log(response);\n});\n`\n        } else if (codeLang === 'cURL') {\n            return `curl ${baseURL}/api/v1/prediction/${dialogProps.chatflowid} \\\\\n     -X POST \\\\${getConfigExamplesForCurl(configData, 'formData')} \\\\\n     -H \"Content-Type: multipart/form-data\"`\n        }\n        return ''\n    }\n\n    // ----------------------------CONFIG FORM DATA with AUTH--------------------------//\n\n    const getConfigCodeWithFormDataWithAuth = (codeLang, configData) => {\n        if (codeLang === 'Python') {\n            return `import requests\n\nAPI_URL = \"${baseURL}/api/v1/prediction/${dialogProps.chatflowid}\"\nheaders = {\"Authorization\": \"Bearer ${selectedApiKey?.apiKey}\"}\n\n# use form data to upload files\nform_data = {${getConfigExamplesForPython(configData, 'formData')}}\n\ndef query(form_data):\n    response = requests.post(API_URL, headers=headers, files=form_data)\n    return response.json()\n\noutput = query(form_data)\n`\n        } else if (codeLang === 'JavaScript') {\n            return `// use FormData to upload files\nlet formData = new FormData();\n${getConfigExamplesForJS(configData, 'formData')}\nasync function query(formData) {\n    const response = await fetch(\n        \"${baseURL}/api/v1/prediction/${dialogProps.chatflowid}\",\n        {\n            headers: { Authorization: \"Bearer ${selectedApiKey?.apiKey}\" },\n            method: \"POST\",\n            body: formData\n        }\n    );\n    const result = await response.json();\n    return result;\n}\n\nquery(formData).then((response) => {\n    console.log(response);\n});\n`\n        } else if (codeLang === 'cURL') {\n            return `curl ${baseURL}/api/v1/prediction/${dialogProps.chatflowid} \\\\\n     -X POST \\\\${getConfigExamplesForCurl(configData, 'formData')} \\\\\n     -H \"Content-Type: multipart/form-data\" \\\\\n     -H \"Authorization: Bearer ${selectedApiKey?.apiKey}\"`\n        }\n        return ''\n    }\n\n    // ----------------------------CONFIG JSON--------------------------//\n\n    const getConfigCode = (codeLang, configData) => {\n        if (codeLang === 'Python') {\n            return `import requests\n\nAPI_URL = \"${baseURL}/api/v1/prediction/${dialogProps.chatflowid}\"\n\ndef query(payload):\n    response = requests.post(API_URL, json=payload)\n    return response.json()\n\noutput = query({\n    \"question\": \"Hey, how are you?\",\n    \"overrideConfig\": {${getConfigExamplesForPython(configData, 'json')}\n    }\n})\n`\n        } else if (codeLang === 'JavaScript') {\n            return `async function query(data) {\n    const response = await fetch(\n        \"${baseURL}/api/v1/prediction/${dialogProps.chatflowid}\",\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        }\n    );\n    const result = await response.json();\n    return result;\n}\n\nquery({\n  \"question\": \"Hey, how are you?\",\n  \"overrideConfig\": {${getConfigExamplesForJS(configData, 'json')}\n  }\n}).then((response) => {\n    console.log(response);\n});\n`\n        } else if (codeLang === 'cURL') {\n            return `curl ${baseURL}/api/v1/prediction/${dialogProps.chatflowid} \\\\\n     -X POST \\\\\n     -d '{\"question\": \"Hey, how are you?\", \"overrideConfig\": {${getConfigExamplesForCurl(configData, 'json')}}' \\\\\n     -H \"Content-Type: application/json\"`\n        }\n        return ''\n    }\n\n    // ----------------------------CONFIG JSON with AUTH--------------------------//\n\n    const getConfigCodeWithAuthorization = (codeLang, configData) => {\n        if (codeLang === 'Python') {\n            return `import requests\n\nAPI_URL = \"${baseURL}/api/v1/prediction/${dialogProps.chatflowid}\"\nheaders = {\"Authorization\": \"Bearer ${selectedApiKey?.apiKey}\"}\n\ndef query(payload):\n    response = requests.post(API_URL, headers=headers, json=payload)\n    return response.json()\n\noutput = query({\n    \"question\": \"Hey, how are you?\",\n    \"overrideConfig\": {${getConfigExamplesForPython(configData, 'json')}\n    }\n})\n`\n        } else if (codeLang === 'JavaScript') {\n            return `async function query(data) {\n    const response = await fetch(\n        \"${baseURL}/api/v1/prediction/${dialogProps.chatflowid}\",\n        {\n            headers: {\n                Authorization: \"Bearer ${selectedApiKey?.apiKey}\",\n                \"Content-Type\": \"application/json\"\n            },\n            method: \"POST\",\n            body: JSON.stringify(data)\n        }\n    );\n    const result = await response.json();\n    return result;\n}\n\nquery({\n  \"question\": \"Hey, how are you?\",\n  \"overrideConfig\": {${getConfigExamplesForJS(configData, 'json')}\n  }\n}).then((response) => {\n    console.log(response);\n});\n`\n        } else if (codeLang === 'cURL') {\n            return `curl ${baseURL}/api/v1/prediction/${dialogProps.chatflowid} \\\\\n     -X POST \\\\\n     -d '{\"question\": \"Hey, how are you?\", \"overrideConfig\": {${getConfigExamplesForCurl(configData, 'json')}}' \\\\\n     -H \"Content-Type: application/json\" \\\\\n     -H \"Authorization: Bearer ${selectedApiKey?.apiKey}\"`\n        }\n        return ''\n    }\n\n    useEffect(() => {\n        if (getAllAPIKeysApi.data) {\n            const options = [\n                {\n                    label: 'No Authorization',\n                    name: ''\n                }\n            ]\n            for (const key of getAllAPIKeysApi.data) {\n                options.push({\n                    label: key.keyName,\n                    name: key.id\n                })\n            }\n            options.push({\n                label: '- Add New Key -',\n                name: 'addnewkey'\n            })\n            setKeyOptions(options)\n            setAPIKeys(getAllAPIKeysApi.data)\n\n            if (dialogProps.chatflowApiKeyId) {\n                setChatflowApiKeyId(dialogProps.chatflowApiKeyId)\n                setSelectedApiKey(getAllAPIKeysApi.data.find((key) => key.id === dialogProps.chatflowApiKeyId))\n            }\n        }\n    }, [dialogProps, getAllAPIKeysApi.data])\n\n    useEffect(() => {\n        if (show) {\n            getAllAPIKeysApi.request()\n            getIsChatflowStreamingApi.request(dialogProps.chatflowid)\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [show])\n\n    const component = show ? (\n        <Dialog\n            open={show}\n            fullWidth\n            maxWidth='md'\n            onClose={onCancel}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n        >\n            <DialogTitle sx={{ fontSize: '1rem' }} id='alert-dialog-title'>\n                {dialogProps.title}\n            </DialogTitle>\n            <DialogContent>\n                <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: 80 }}>\n                        <Tabs value={value} onChange={handleChange} aria-label='tabs'>\n                            {codes.map((codeLang, index) => (\n                                <Tab\n                                    icon={\n                                        <img style={{ objectFit: 'cover', height: 15, width: 'auto' }} src={getSVG(codeLang)} alt='code' />\n                                    }\n                                    iconPosition='start'\n                                    key={index}\n                                    label={codeLang}\n                                    {...a11yProps(index)}\n                                ></Tab>\n                            ))}\n                        </Tabs>\n                    </div>\n                    <div style={{ flex: 20 }}>\n                        <Dropdown\n                            name='SelectKey'\n                            disableClearable={true}\n                            options={keyOptions}\n                            onSelect={(newValue) => onApiKeySelected(newValue)}\n                            value={dialogProps.chatflowApiKeyId ?? chatflowApiKeyId ?? 'Choose an API key'}\n                        />\n                    </div>\n                </div>\n                <div style={{ marginTop: 10 }}></div>\n                {codes.map((codeLang, index) => (\n                    <TabPanel key={index} value={value} index={index}>\n                        {(codeLang === 'Embed' || codeLang === 'Share Chatbot') && chatflowApiKeyId && (\n                            <>\n                                <p>You cannot use API key while embedding/sharing chatbot.</p>\n                                <p>\n                                    Please select <b>&quot;No Authorization&quot;</b> from the dropdown at the top right corner.\n                                </p>\n                            </>\n                        )}\n                        {codeLang === 'Embed' && !chatflowApiKeyId && <EmbedChat chatflowid={dialogProps.chatflowid} />}\n                        {codeLang !== 'Embed' && codeLang !== 'Share Chatbot' && (\n                            <>\n                                <CopyBlock\n                                    theme={atomOneDark}\n                                    text={chatflowApiKeyId ? getCodeWithAuthorization(codeLang) : getCode(codeLang)}\n                                    language={getLang(codeLang)}\n                                    showLineNumbers={false}\n                                    wrapLines\n                                />\n                                <CheckboxInput label='Show Input Config' value={checkboxVal} onChange={onCheckBoxChanged} />\n                                {checkboxVal && getConfigApi.data && getConfigApi.data.length > 0 && (\n                                    <>\n                                        <TableViewOnly rows={getConfigApi.data} columns={Object.keys(getConfigApi.data[0])} />\n                                        <CopyBlock\n                                            theme={atomOneDark}\n                                            text={\n                                                chatflowApiKeyId\n                                                    ? dialogProps.isFormDataRequired\n                                                        ? getConfigCodeWithFormDataWithAuth(codeLang, getConfigApi.data)\n                                                        : getConfigCodeWithAuthorization(codeLang, getConfigApi.data)\n                                                    : dialogProps.isFormDataRequired\n                                                    ? getConfigCodeWithFormData(codeLang, getConfigApi.data)\n                                                    : getConfigCode(codeLang, getConfigApi.data)\n                                            }\n                                            language={getLang(codeLang)}\n                                            showLineNumbers={false}\n                                            wrapLines\n                                        />\n                                    </>\n                                )}\n                                {getIsChatflowStreamingApi.data?.isStreaming && (\n                                    <p>\n                                        Read&nbsp;\n                                        <a rel='noreferrer' target='_blank' href='https://docs.flowiseai.com/how-to-use#streaming'>\n                                            here\n                                        </a>\n                                        &nbsp;on how to stream response back to application\n                                    </p>\n                                )}\n                            </>\n                        )}\n                        {codeLang === 'Share Chatbot' && !chatflowApiKeyId && (\n                            <ShareChatbot isSessionMemory={dialogProps.isSessionMemory} />\n                        )}\n                    </TabPanel>\n                ))}\n            </DialogContent>\n        </Dialog>\n    ) : null\n\n    return createPortal(component, portalElement)\n}\n\nAPICodeDialog.propTypes = {\n    show: PropTypes.bool,\n    dialogProps: PropTypes.object,\n    onCancel: PropTypes.func\n}\n\nexport default APICodeDialog\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}