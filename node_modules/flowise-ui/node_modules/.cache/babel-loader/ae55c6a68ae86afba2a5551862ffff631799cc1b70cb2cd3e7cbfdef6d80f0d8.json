{"ast":null,"code":"import _regeneratorRuntime from\"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _defineProperty from\"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useRef,useState,useCallback,useContext}from'react';import ReactFlow,{addEdge,Controls,Background,useNodesState,useEdgesState}from'reactflow';import'reactflow/dist/style.css';import{useDispatch,useSelector}from'react-redux';import{useNavigate,useLocation}from'react-router-dom';import{usePrompt}from'../../utils/usePrompt';import{REMOVE_DIRTY,SET_DIRTY,SET_CHATFLOW,enqueueSnackbar as enqueueSnackbarAction,closeSnackbar as closeSnackbarAction}from'store/actions';// material-ui\nimport{Toolbar,Box,AppBar,Button}from'@mui/material';import{useTheme}from'@mui/material/styles';// project imports\nimport CanvasNode from'./CanvasNode';import ButtonEdge from'./ButtonEdge';import CanvasHeader from'./CanvasHeader';import AddNodes from'./AddNodes';import ConfirmDialog from'ui-component/dialog/ConfirmDialog';import{ChatPopUp}from'views/chatmessage/ChatPopUp';import{flowContext}from'store/context/ReactFlowContext';// API\nimport nodesApi from'api/nodes';import chatflowsApi from'api/chatflows';// Hooks\nimport useApi from'hooks/useApi';import useConfirm from'hooks/useConfirm';// icons\nimport{IconX}from'@tabler/icons';// utils\nimport{getUniqueNodeId,initNode,getEdgeLabelName,rearrangeToolsOrdering}from'utils/genericHelper';import useNotifier from'utils/useNotifier';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var nodeTypes={customNode:CanvasNode};var edgeTypes={buttonedge:ButtonEdge};// ==============================|| CANVAS ||============================== //\nvar Canvas=function Canvas(){var theme=useTheme();var navigate=useNavigate();var _useLocation=useLocation(),state=_useLocation.state;var templateFlowData=state?state.templateFlowData:'';var URLpath=document.location.pathname.toString().split('/');var chatflowId=URLpath[URLpath.length-1]==='canvas'?'':URLpath[URLpath.length-1];var _useConfirm=useConfirm(),confirm=_useConfirm.confirm;var dispatch=useDispatch();var canvas=useSelector(function(state){return state.canvas;});var _useState=useState(canvas),_useState2=_slicedToArray(_useState,2),canvasDataStore=_useState2[0],setCanvasDataStore=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),chatflow=_useState4[0],setChatflow=_useState4[1];var _useContext=useContext(flowContext),reactFlowInstance=_useContext.reactFlowInstance,setReactFlowInstance=_useContext.setReactFlowInstance;// ==============================|| Snackbar ||============================== //\nuseNotifier();var enqueueSnackbar=function enqueueSnackbar(){return dispatch(enqueueSnackbarAction.apply(void 0,arguments));};var closeSnackbar=function closeSnackbar(){return dispatch(closeSnackbarAction.apply(void 0,arguments));};// ==============================|| ReactFlow ||============================== //\nvar _useNodesState=useNodesState(),_useNodesState2=_slicedToArray(_useNodesState,3),nodes=_useNodesState2[0],setNodes=_useNodesState2[1],onNodesChange=_useNodesState2[2];var _useEdgesState=useEdgesState(),_useEdgesState2=_slicedToArray(_useEdgesState,3),edges=_useEdgesState2[0],setEdges=_useEdgesState2[1],onEdgesChange=_useEdgesState2[2];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),selectedNode=_useState6[0],setSelectedNode=_useState6[1];var reactFlowWrapper=useRef(null);// ==============================|| Chatflow API ||============================== //\nvar getNodesApi=useApi(nodesApi.getAllNodes);var createNewChatflowApi=useApi(chatflowsApi.createNewChatflow);var testChatflowApi=useApi(chatflowsApi.testChatflow);var updateChatflowApi=useApi(chatflowsApi.updateChatflow);var getSpecificChatflowApi=useApi(chatflowsApi.getSpecificChatflow);// ==============================|| Events & Actions ||============================== //\nvar onConnect=function onConnect(params){var newEdge=_objectSpread(_objectSpread({},params),{},{type:'buttonedge',id:\"\".concat(params.source,\"-\").concat(params.sourceHandle,\"-\").concat(params.target,\"-\").concat(params.targetHandle),data:{label:getEdgeLabelName(params.sourceHandle)}});var targetNodeId=params.targetHandle.split('-')[0];var sourceNodeId=params.sourceHandle.split('-')[0];var targetInput=params.targetHandle.split('-')[2];setNodes(function(nds){return nds.map(function(node){if(node.id===targetNodeId){setTimeout(function(){return setDirty();},0);var value;var inputAnchor=node.data.inputAnchors.find(function(ancr){return ancr.name===targetInput;});var inputParam=node.data.inputParams.find(function(param){return param.name===targetInput;});if(inputAnchor&&inputAnchor.list){var newValues=node.data.inputs[targetInput]||[];if(targetInput==='tools'){rearrangeToolsOrdering(newValues,sourceNodeId);}else{newValues.push(\"{{\".concat(sourceNodeId,\".data.instance}}\"));}value=newValues;}else if(inputParam&&inputParam.acceptVariable){value=node.data.inputs[targetInput]||'';}else{value=\"{{\".concat(sourceNodeId,\".data.instance}}\");}node.data=_objectSpread(_objectSpread({},node.data),{},{inputs:_objectSpread(_objectSpread({},node.data.inputs),{},_defineProperty({},targetInput,value))});}return node;});});setEdges(function(eds){return addEdge(newEdge,eds);});};var handleLoadFlow=function handleLoadFlow(file){try{var flowData=JSON.parse(file);var _nodes=flowData.nodes||[];setNodes(_nodes);setEdges(flowData.edges||[]);setDirty();}catch(e){console.error(e);}};var handleDeleteFlow=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var confirmPayload,isConfirmed,errorData;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:confirmPayload={title:\"Delete\",description:\"Delete chatflow \".concat(chatflow.name,\"?\"),confirmButtonName:'Delete',cancelButtonName:'Cancel'};_context.next=3;return confirm(confirmPayload);case 3:isConfirmed=_context.sent;if(!isConfirmed){_context.next=15;break;}_context.prev=5;_context.next=8;return chatflowsApi.deleteChatflow(chatflow.id);case 8:navigate(-1);_context.next=15;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](5);errorData=_context.t0.response.data||\"\".concat(_context.t0.response.status,\": \").concat(_context.t0.response.statusText);enqueueSnackbar({message:errorData,options:{key:new Date().getTime()+Math.random(),variant:'error',persist:true,action:function action(key){return/*#__PURE__*/_jsx(Button,{style:{color:'white'},onClick:function onClick(){return closeSnackbar(key);},children:/*#__PURE__*/_jsx(IconX,{})});}}});case 15:case\"end\":return _context.stop();}},_callee,null,[[5,11]]);}));return function handleDeleteFlow(){return _ref.apply(this,arguments);};}();var handleSaveFlow=function handleSaveFlow(chatflowName){if(reactFlowInstance){setNodes(function(nds){return nds.map(function(node){node.data=_objectSpread(_objectSpread({},node.data),{},{selected:false});return node;});});var rfInstanceObject=reactFlowInstance.toObject();var flowData=JSON.stringify(rfInstanceObject);if(!chatflow.id){var newChatflowBody={name:chatflowName,deployed:false,isPublic:false,flowData:flowData};createNewChatflowApi.request(newChatflowBody);}else{var updateBody={name:chatflowName,flowData:flowData};updateChatflowApi.request(chatflow.id,updateBody);}}};// eslint-disable-next-line\nvar onNodeClick=useCallback(function(event,clickedNode){setSelectedNode(clickedNode);setNodes(function(nds){return nds.map(function(node){if(node.id===clickedNode.id){node.data=_objectSpread(_objectSpread({},node.data),{},{selected:true});}else{node.data=_objectSpread(_objectSpread({},node.data),{},{selected:false});}return node;});});});var onDragOver=useCallback(function(event){event.preventDefault();event.dataTransfer.dropEffect='move';},[]);var onDrop=useCallback(function(event){event.preventDefault();var reactFlowBounds=reactFlowWrapper.current.getBoundingClientRect();var nodeData=event.dataTransfer.getData('application/reactflow');// check if the dropped element is valid\nif(typeof nodeData==='undefined'||!nodeData){return;}nodeData=JSON.parse(nodeData);var position=reactFlowInstance.project({x:event.clientX-reactFlowBounds.left-100,y:event.clientY-reactFlowBounds.top-50});var newNodeId=getUniqueNodeId(nodeData,reactFlowInstance.getNodes());var newNode={id:newNodeId,position:position,type:'customNode',data:initNode(nodeData,newNodeId)};setSelectedNode(newNode);setNodes(function(nds){return nds.concat(newNode).map(function(node){if(node.id===newNode.id){node.data=_objectSpread(_objectSpread({},node.data),{},{selected:true});}else{node.data=_objectSpread(_objectSpread({},node.data),{},{selected:false});}return node;});});setTimeout(function(){return setDirty();},0);},// eslint-disable-next-line\n[reactFlowInstance]);var saveChatflowSuccess=function saveChatflowSuccess(){dispatch({type:REMOVE_DIRTY});enqueueSnackbar({message:'Chatflow saved',options:{key:new Date().getTime()+Math.random(),variant:'success',action:function action(key){return/*#__PURE__*/_jsx(Button,{style:{color:'white'},onClick:function onClick(){return closeSnackbar(key);},children:/*#__PURE__*/_jsx(IconX,{})});}}});};var errorFailed=function errorFailed(message){enqueueSnackbar({message:message,options:{key:new Date().getTime()+Math.random(),variant:'error',persist:true,action:function action(key){return/*#__PURE__*/_jsx(Button,{style:{color:'white'},onClick:function onClick(){return closeSnackbar(key);},children:/*#__PURE__*/_jsx(IconX,{})});}}});};var setDirty=function setDirty(){dispatch({type:SET_DIRTY});};// ==============================|| useEffect ||============================== //\n// Get specific chatflow successful\nuseEffect(function(){if(getSpecificChatflowApi.data){var _chatflow=getSpecificChatflowApi.data;var initialFlow=_chatflow.flowData?JSON.parse(_chatflow.flowData):[];setNodes(initialFlow.nodes||[]);setEdges(initialFlow.edges||[]);dispatch({type:SET_CHATFLOW,chatflow:_chatflow});}else if(getSpecificChatflowApi.error){var error=getSpecificChatflowApi.error;var errorData=error.response.data||\"\".concat(error.response.status,\": \").concat(error.response.statusText);errorFailed(\"Failed to retrieve chatflow: \".concat(errorData));}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[getSpecificChatflowApi.data,getSpecificChatflowApi.error]);// Create new chatflow successful\nuseEffect(function(){if(createNewChatflowApi.data){var _chatflow2=createNewChatflowApi.data;dispatch({type:SET_CHATFLOW,chatflow:_chatflow2});saveChatflowSuccess();window.history.replaceState(null,null,\"/canvas/\".concat(_chatflow2.id));}else if(createNewChatflowApi.error){var error=createNewChatflowApi.error;var errorData=error.response.data||\"\".concat(error.response.status,\": \").concat(error.response.statusText);errorFailed(\"Failed to save chatflow: \".concat(errorData));}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[createNewChatflowApi.data,createNewChatflowApi.error]);// Update chatflow successful\nuseEffect(function(){if(updateChatflowApi.data){dispatch({type:SET_CHATFLOW,chatflow:updateChatflowApi.data});saveChatflowSuccess();}else if(updateChatflowApi.error){var error=updateChatflowApi.error;var errorData=error.response.data||\"\".concat(error.response.status,\": \").concat(error.response.statusText);errorFailed(\"Failed to save chatflow: \".concat(errorData));}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[updateChatflowApi.data,updateChatflowApi.error]);// Test chatflow failed\nuseEffect(function(){if(testChatflowApi.error){enqueueSnackbar({message:'Test chatflow failed',options:{key:new Date().getTime()+Math.random(),variant:'error',persist:true,action:function action(key){return/*#__PURE__*/_jsx(Button,{style:{color:'white'},onClick:function onClick(){return closeSnackbar(key);},children:/*#__PURE__*/_jsx(IconX,{})});}}});}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[testChatflowApi.error]);useEffect(function(){return setChatflow(canvasDataStore.chatflow);},[canvasDataStore.chatflow]);// Initialization\nuseEffect(function(){if(chatflowId){getSpecificChatflowApi.request(chatflowId);}else{if(localStorage.getItem('duplicatedFlowData')){handleLoadFlow(localStorage.getItem('duplicatedFlowData'));setTimeout(function(){return localStorage.removeItem('duplicatedFlowData');},0);}else{setNodes([]);setEdges([]);}dispatch({type:SET_CHATFLOW,chatflow:{name:'Untitled chatflow'}});}getNodesApi.request();// Clear dirty state before leaving and remove any ongoing test triggers and webhooks\nreturn function(){setTimeout(function(){return dispatch({type:REMOVE_DIRTY});},0);};// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);useEffect(function(){setCanvasDataStore(canvas);},[canvas]);useEffect(function(){function handlePaste(e){var pasteData=e.clipboardData.getData('text');//TODO: prevent paste event when input focused, temporary fix: catch chatflow syntax\nif(pasteData.includes('{\"nodes\":[')&&pasteData.includes('],\"edges\":[')){handleLoadFlow(pasteData);}}window.addEventListener('paste',handlePaste);return function(){window.removeEventListener('paste',handlePaste);};// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);useEffect(function(){if(templateFlowData&&templateFlowData.includes('\"nodes\":[')&&templateFlowData.includes('],\"edges\":[')){handleLoadFlow(templateFlowData);}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[templateFlowData]);usePrompt('You have unsaved changes! Do you want to navigate away?',canvasDataStore.isDirty);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(AppBar,{enableColorOnDark:true,position:\"fixed\",color:\"inherit\",elevation:1,sx:{bgcolor:theme.palette.background.default},children:/*#__PURE__*/_jsx(Toolbar,{children:/*#__PURE__*/_jsx(CanvasHeader,{chatflow:chatflow,handleSaveFlow:handleSaveFlow,handleDeleteFlow:handleDeleteFlow,handleLoadFlow:handleLoadFlow})})}),/*#__PURE__*/_jsx(Box,{sx:{pt:'70px',height:'100vh',width:'100%'},children:/*#__PURE__*/_jsx(\"div\",{className:\"reactflow-parent-wrapper\",children:/*#__PURE__*/_jsx(\"div\",{className:\"reactflow-wrapper\",ref:reactFlowWrapper,children:/*#__PURE__*/_jsxs(ReactFlow,{nodes:nodes,edges:edges,onNodesChange:onNodesChange,onNodeClick:onNodeClick,onEdgesChange:onEdgesChange,onDrop:onDrop,onDragOver:onDragOver,onNodeDragStop:setDirty,nodeTypes:nodeTypes,edgeTypes:edgeTypes,onConnect:onConnect,onInit:setReactFlowInstance,fitView:true,deleteKeyCode:canvas.canvasDialogShow?null:['Backspace','Delete'],minZoom:0.1,children:[/*#__PURE__*/_jsx(Controls,{style:{display:'flex',flexDirection:'row',left:'50%',transform:'translate(-50%, -50%)'}}),/*#__PURE__*/_jsx(Background,{color:\"#aaa\",gap:16}),/*#__PURE__*/_jsx(AddNodes,{nodesData:getNodesApi.data,node:selectedNode}),/*#__PURE__*/_jsx(ChatPopUp,{chatflowid:chatflowId})]})})})}),/*#__PURE__*/_jsx(ConfirmDialog,{})]})});};export default Canvas;","map":{"version":3,"names":["useEffect","useRef","useState","useCallback","useContext","ReactFlow","addEdge","Controls","Background","useNodesState","useEdgesState","useDispatch","useSelector","useNavigate","useLocation","usePrompt","REMOVE_DIRTY","SET_DIRTY","SET_CHATFLOW","enqueueSnackbar","enqueueSnackbarAction","closeSnackbar","closeSnackbarAction","Toolbar","Box","AppBar","Button","useTheme","CanvasNode","ButtonEdge","CanvasHeader","AddNodes","ConfirmDialog","ChatPopUp","flowContext","nodesApi","chatflowsApi","useApi","useConfirm","IconX","getUniqueNodeId","initNode","getEdgeLabelName","rearrangeToolsOrdering","useNotifier","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","nodeTypes","customNode","edgeTypes","buttonedge","Canvas","theme","navigate","_useLocation","state","templateFlowData","URLpath","document","location","pathname","toString","split","chatflowId","length","_useConfirm","confirm","dispatch","canvas","_useState","_useState2","_slicedToArray","canvasDataStore","setCanvasDataStore","_useState3","_useState4","chatflow","setChatflow","_useContext","reactFlowInstance","setReactFlowInstance","apply","arguments","_useNodesState","_useNodesState2","nodes","setNodes","onNodesChange","_useEdgesState","_useEdgesState2","edges","setEdges","onEdgesChange","_useState5","_useState6","selectedNode","setSelectedNode","reactFlowWrapper","getNodesApi","getAllNodes","createNewChatflowApi","createNewChatflow","testChatflowApi","testChatflow","updateChatflowApi","updateChatflow","getSpecificChatflowApi","getSpecificChatflow","onConnect","params","newEdge","_objectSpread","type","id","concat","source","sourceHandle","target","targetHandle","data","label","targetNodeId","sourceNodeId","targetInput","nds","map","node","setTimeout","setDirty","value","inputAnchor","inputAnchors","find","ancr","name","inputParam","inputParams","param","list","newValues","inputs","push","acceptVariable","_defineProperty","eds","handleLoadFlow","file","flowData","JSON","parse","e","console","error","handleDeleteFlow","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","confirmPayload","isConfirmed","errorData","wrap","_callee$","_context","prev","next","title","description","confirmButtonName","cancelButtonName","sent","deleteChatflow","t0","response","status","statusText","message","options","key","Date","getTime","Math","random","variant","persist","action","style","color","onClick","children","stop","handleSaveFlow","chatflowName","selected","rfInstanceObject","toObject","stringify","newChatflowBody","deployed","isPublic","request","updateBody","onNodeClick","event","clickedNode","onDragOver","preventDefault","dataTransfer","dropEffect","onDrop","reactFlowBounds","current","getBoundingClientRect","nodeData","getData","position","project","x","clientX","left","y","clientY","top","newNodeId","getNodes","newNode","saveChatflowSuccess","errorFailed","initialFlow","window","history","replaceState","localStorage","getItem","removeItem","handlePaste","pasteData","clipboardData","includes","addEventListener","removeEventListener","isDirty","enableColorOnDark","elevation","sx","bgcolor","palette","background","default","pt","height","width","className","ref","onNodeDragStop","onInit","fitView","deleteKeyCode","canvasDialogShow","minZoom","display","flexDirection","transform","gap","nodesData","chatflowid"],"sources":["/Users/zorro/Downloads/Flowise/packages/ui/src/views/canvas/index.js"],"sourcesContent":["import { useEffect, useRef, useState, useCallback, useContext } from 'react'\nimport ReactFlow, { addEdge, Controls, Background, useNodesState, useEdgesState } from 'reactflow'\nimport 'reactflow/dist/style.css'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { usePrompt } from '../../utils/usePrompt'\nimport {\n    REMOVE_DIRTY,\n    SET_DIRTY,\n    SET_CHATFLOW,\n    enqueueSnackbar as enqueueSnackbarAction,\n    closeSnackbar as closeSnackbarAction\n} from 'store/actions'\n\n// material-ui\nimport { Toolbar, Box, AppBar, Button } from '@mui/material'\nimport { useTheme } from '@mui/material/styles'\n\n// project imports\nimport CanvasNode from './CanvasNode'\nimport ButtonEdge from './ButtonEdge'\nimport CanvasHeader from './CanvasHeader'\nimport AddNodes from './AddNodes'\nimport ConfirmDialog from 'ui-component/dialog/ConfirmDialog'\nimport { ChatPopUp } from 'views/chatmessage/ChatPopUp'\nimport { flowContext } from 'store/context/ReactFlowContext'\n\n// API\nimport nodesApi from 'api/nodes'\nimport chatflowsApi from 'api/chatflows'\n\n// Hooks\nimport useApi from 'hooks/useApi'\nimport useConfirm from 'hooks/useConfirm'\n\n// icons\nimport { IconX } from '@tabler/icons'\n\n// utils\nimport { getUniqueNodeId, initNode, getEdgeLabelName, rearrangeToolsOrdering } from 'utils/genericHelper'\nimport useNotifier from 'utils/useNotifier'\n\nconst nodeTypes = { customNode: CanvasNode }\nconst edgeTypes = { buttonedge: ButtonEdge }\n\n// ==============================|| CANVAS ||============================== //\n\nconst Canvas = () => {\n    const theme = useTheme()\n    const navigate = useNavigate()\n\n    const { state } = useLocation()\n    const templateFlowData = state ? state.templateFlowData : ''\n\n    const URLpath = document.location.pathname.toString().split('/')\n    const chatflowId = URLpath[URLpath.length - 1] === 'canvas' ? '' : URLpath[URLpath.length - 1]\n\n    const { confirm } = useConfirm()\n\n    const dispatch = useDispatch()\n    const canvas = useSelector((state) => state.canvas)\n    const [canvasDataStore, setCanvasDataStore] = useState(canvas)\n    const [chatflow, setChatflow] = useState(null)\n\n    const { reactFlowInstance, setReactFlowInstance } = useContext(flowContext)\n\n    // ==============================|| Snackbar ||============================== //\n\n    useNotifier()\n    const enqueueSnackbar = (...args) => dispatch(enqueueSnackbarAction(...args))\n    const closeSnackbar = (...args) => dispatch(closeSnackbarAction(...args))\n\n    // ==============================|| ReactFlow ||============================== //\n\n    const [nodes, setNodes, onNodesChange] = useNodesState()\n    const [edges, setEdges, onEdgesChange] = useEdgesState()\n\n    const [selectedNode, setSelectedNode] = useState(null)\n\n    const reactFlowWrapper = useRef(null)\n\n    // ==============================|| Chatflow API ||============================== //\n\n    const getNodesApi = useApi(nodesApi.getAllNodes)\n    const createNewChatflowApi = useApi(chatflowsApi.createNewChatflow)\n    const testChatflowApi = useApi(chatflowsApi.testChatflow)\n    const updateChatflowApi = useApi(chatflowsApi.updateChatflow)\n    const getSpecificChatflowApi = useApi(chatflowsApi.getSpecificChatflow)\n\n    // ==============================|| Events & Actions ||============================== //\n\n    const onConnect = (params) => {\n        const newEdge = {\n            ...params,\n            type: 'buttonedge',\n            id: `${params.source}-${params.sourceHandle}-${params.target}-${params.targetHandle}`,\n            data: { label: getEdgeLabelName(params.sourceHandle) }\n        }\n\n        const targetNodeId = params.targetHandle.split('-')[0]\n        const sourceNodeId = params.sourceHandle.split('-')[0]\n        const targetInput = params.targetHandle.split('-')[2]\n\n        setNodes((nds) =>\n            nds.map((node) => {\n                if (node.id === targetNodeId) {\n                    setTimeout(() => setDirty(), 0)\n                    let value\n                    const inputAnchor = node.data.inputAnchors.find((ancr) => ancr.name === targetInput)\n                    const inputParam = node.data.inputParams.find((param) => param.name === targetInput)\n\n                    if (inputAnchor && inputAnchor.list) {\n                        const newValues = node.data.inputs[targetInput] || []\n                        if (targetInput === 'tools') {\n                            rearrangeToolsOrdering(newValues, sourceNodeId)\n                        } else {\n                            newValues.push(`{{${sourceNodeId}.data.instance}}`)\n                        }\n                        value = newValues\n                    } else if (inputParam && inputParam.acceptVariable) {\n                        value = node.data.inputs[targetInput] || ''\n                    } else {\n                        value = `{{${sourceNodeId}.data.instance}}`\n                    }\n                    node.data = {\n                        ...node.data,\n                        inputs: {\n                            ...node.data.inputs,\n                            [targetInput]: value\n                        }\n                    }\n                }\n                return node\n            })\n        )\n\n        setEdges((eds) => addEdge(newEdge, eds))\n    }\n\n    const handleLoadFlow = (file) => {\n        try {\n            const flowData = JSON.parse(file)\n            const nodes = flowData.nodes || []\n\n            setNodes(nodes)\n            setEdges(flowData.edges || [])\n            setDirty()\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    const handleDeleteFlow = async () => {\n        const confirmPayload = {\n            title: `Delete`,\n            description: `Delete chatflow ${chatflow.name}?`,\n            confirmButtonName: 'Delete',\n            cancelButtonName: 'Cancel'\n        }\n        const isConfirmed = await confirm(confirmPayload)\n\n        if (isConfirmed) {\n            try {\n                await chatflowsApi.deleteChatflow(chatflow.id)\n                navigate(-1)\n            } catch (error) {\n                const errorData = error.response.data || `${error.response.status}: ${error.response.statusText}`\n                enqueueSnackbar({\n                    message: errorData,\n                    options: {\n                        key: new Date().getTime() + Math.random(),\n                        variant: 'error',\n                        persist: true,\n                        action: (key) => (\n                            <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\n                                <IconX />\n                            </Button>\n                        )\n                    }\n                })\n            }\n        }\n    }\n\n    const handleSaveFlow = (chatflowName) => {\n        if (reactFlowInstance) {\n            setNodes((nds) =>\n                nds.map((node) => {\n                    node.data = {\n                        ...node.data,\n                        selected: false\n                    }\n                    return node\n                })\n            )\n\n            const rfInstanceObject = reactFlowInstance.toObject()\n            const flowData = JSON.stringify(rfInstanceObject)\n\n            if (!chatflow.id) {\n                const newChatflowBody = {\n                    name: chatflowName,\n                    deployed: false,\n                    isPublic: false,\n                    flowData\n                }\n                createNewChatflowApi.request(newChatflowBody)\n            } else {\n                const updateBody = {\n                    name: chatflowName,\n                    flowData\n                }\n                updateChatflowApi.request(chatflow.id, updateBody)\n            }\n        }\n    }\n\n    // eslint-disable-next-line\n    const onNodeClick = useCallback((event, clickedNode) => {\n        setSelectedNode(clickedNode)\n        setNodes((nds) =>\n            nds.map((node) => {\n                if (node.id === clickedNode.id) {\n                    node.data = {\n                        ...node.data,\n                        selected: true\n                    }\n                } else {\n                    node.data = {\n                        ...node.data,\n                        selected: false\n                    }\n                }\n\n                return node\n            })\n        )\n    })\n\n    const onDragOver = useCallback((event) => {\n        event.preventDefault()\n        event.dataTransfer.dropEffect = 'move'\n    }, [])\n\n    const onDrop = useCallback(\n        (event) => {\n            event.preventDefault()\n            const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect()\n            let nodeData = event.dataTransfer.getData('application/reactflow')\n\n            // check if the dropped element is valid\n            if (typeof nodeData === 'undefined' || !nodeData) {\n                return\n            }\n\n            nodeData = JSON.parse(nodeData)\n\n            const position = reactFlowInstance.project({\n                x: event.clientX - reactFlowBounds.left - 100,\n                y: event.clientY - reactFlowBounds.top - 50\n            })\n\n            const newNodeId = getUniqueNodeId(nodeData, reactFlowInstance.getNodes())\n\n            const newNode = {\n                id: newNodeId,\n                position,\n                type: 'customNode',\n                data: initNode(nodeData, newNodeId)\n            }\n\n            setSelectedNode(newNode)\n            setNodes((nds) =>\n                nds.concat(newNode).map((node) => {\n                    if (node.id === newNode.id) {\n                        node.data = {\n                            ...node.data,\n                            selected: true\n                        }\n                    } else {\n                        node.data = {\n                            ...node.data,\n                            selected: false\n                        }\n                    }\n\n                    return node\n                })\n            )\n            setTimeout(() => setDirty(), 0)\n        },\n\n        // eslint-disable-next-line\n        [reactFlowInstance]\n    )\n\n    const saveChatflowSuccess = () => {\n        dispatch({ type: REMOVE_DIRTY })\n        enqueueSnackbar({\n            message: 'Chatflow saved',\n            options: {\n                key: new Date().getTime() + Math.random(),\n                variant: 'success',\n                action: (key) => (\n                    <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\n                        <IconX />\n                    </Button>\n                )\n            }\n        })\n    }\n\n    const errorFailed = (message) => {\n        enqueueSnackbar({\n            message,\n            options: {\n                key: new Date().getTime() + Math.random(),\n                variant: 'error',\n                persist: true,\n                action: (key) => (\n                    <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\n                        <IconX />\n                    </Button>\n                )\n            }\n        })\n    }\n\n    const setDirty = () => {\n        dispatch({ type: SET_DIRTY })\n    }\n\n    // ==============================|| useEffect ||============================== //\n\n    // Get specific chatflow successful\n    useEffect(() => {\n        if (getSpecificChatflowApi.data) {\n            const chatflow = getSpecificChatflowApi.data\n            const initialFlow = chatflow.flowData ? JSON.parse(chatflow.flowData) : []\n            setNodes(initialFlow.nodes || [])\n            setEdges(initialFlow.edges || [])\n            dispatch({ type: SET_CHATFLOW, chatflow })\n        } else if (getSpecificChatflowApi.error) {\n            const error = getSpecificChatflowApi.error\n            const errorData = error.response.data || `${error.response.status}: ${error.response.statusText}`\n            errorFailed(`Failed to retrieve chatflow: ${errorData}`)\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [getSpecificChatflowApi.data, getSpecificChatflowApi.error])\n\n    // Create new chatflow successful\n    useEffect(() => {\n        if (createNewChatflowApi.data) {\n            const chatflow = createNewChatflowApi.data\n            dispatch({ type: SET_CHATFLOW, chatflow })\n            saveChatflowSuccess()\n            window.history.replaceState(null, null, `/canvas/${chatflow.id}`)\n        } else if (createNewChatflowApi.error) {\n            const error = createNewChatflowApi.error\n            const errorData = error.response.data || `${error.response.status}: ${error.response.statusText}`\n            errorFailed(`Failed to save chatflow: ${errorData}`)\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [createNewChatflowApi.data, createNewChatflowApi.error])\n\n    // Update chatflow successful\n    useEffect(() => {\n        if (updateChatflowApi.data) {\n            dispatch({ type: SET_CHATFLOW, chatflow: updateChatflowApi.data })\n            saveChatflowSuccess()\n        } else if (updateChatflowApi.error) {\n            const error = updateChatflowApi.error\n            const errorData = error.response.data || `${error.response.status}: ${error.response.statusText}`\n            errorFailed(`Failed to save chatflow: ${errorData}`)\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [updateChatflowApi.data, updateChatflowApi.error])\n\n    // Test chatflow failed\n    useEffect(() => {\n        if (testChatflowApi.error) {\n            enqueueSnackbar({\n                message: 'Test chatflow failed',\n                options: {\n                    key: new Date().getTime() + Math.random(),\n                    variant: 'error',\n                    persist: true,\n                    action: (key) => (\n                        <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\n                            <IconX />\n                        </Button>\n                    )\n                }\n            })\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [testChatflowApi.error])\n\n    useEffect(() => setChatflow(canvasDataStore.chatflow), [canvasDataStore.chatflow])\n\n    // Initialization\n    useEffect(() => {\n        if (chatflowId) {\n            getSpecificChatflowApi.request(chatflowId)\n        } else {\n            if (localStorage.getItem('duplicatedFlowData')) {\n                handleLoadFlow(localStorage.getItem('duplicatedFlowData'))\n                setTimeout(() => localStorage.removeItem('duplicatedFlowData'), 0)\n            } else {\n                setNodes([])\n                setEdges([])\n            }\n            dispatch({\n                type: SET_CHATFLOW,\n                chatflow: {\n                    name: 'Untitled chatflow'\n                }\n            })\n        }\n\n        getNodesApi.request()\n\n        // Clear dirty state before leaving and remove any ongoing test triggers and webhooks\n        return () => {\n            setTimeout(() => dispatch({ type: REMOVE_DIRTY }), 0)\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        setCanvasDataStore(canvas)\n    }, [canvas])\n\n    useEffect(() => {\n        function handlePaste(e) {\n            const pasteData = e.clipboardData.getData('text')\n            //TODO: prevent paste event when input focused, temporary fix: catch chatflow syntax\n            if (pasteData.includes('{\"nodes\":[') && pasteData.includes('],\"edges\":[')) {\n                handleLoadFlow(pasteData)\n            }\n        }\n\n        window.addEventListener('paste', handlePaste)\n\n        return () => {\n            window.removeEventListener('paste', handlePaste)\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        if (templateFlowData && templateFlowData.includes('\"nodes\":[') && templateFlowData.includes('],\"edges\":[')) {\n            handleLoadFlow(templateFlowData)\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [templateFlowData])\n\n    usePrompt('You have unsaved changes! Do you want to navigate away?', canvasDataStore.isDirty)\n\n    return (\n        <>\n            <Box>\n                <AppBar\n                    enableColorOnDark\n                    position='fixed'\n                    color='inherit'\n                    elevation={1}\n                    sx={{\n                        bgcolor: theme.palette.background.default\n                    }}\n                >\n                    <Toolbar>\n                        <CanvasHeader\n                            chatflow={chatflow}\n                            handleSaveFlow={handleSaveFlow}\n                            handleDeleteFlow={handleDeleteFlow}\n                            handleLoadFlow={handleLoadFlow}\n                        />\n                    </Toolbar>\n                </AppBar>\n                <Box sx={{ pt: '70px', height: '100vh', width: '100%' }}>\n                    <div className='reactflow-parent-wrapper'>\n                        <div className='reactflow-wrapper' ref={reactFlowWrapper}>\n                            <ReactFlow\n                                nodes={nodes}\n                                edges={edges}\n                                onNodesChange={onNodesChange}\n                                onNodeClick={onNodeClick}\n                                onEdgesChange={onEdgesChange}\n                                onDrop={onDrop}\n                                onDragOver={onDragOver}\n                                onNodeDragStop={setDirty}\n                                nodeTypes={nodeTypes}\n                                edgeTypes={edgeTypes}\n                                onConnect={onConnect}\n                                onInit={setReactFlowInstance}\n                                fitView\n                                deleteKeyCode={canvas.canvasDialogShow ? null : ['Backspace', 'Delete']}\n                                minZoom={0.1}\n                            >\n                                <Controls\n                                    style={{\n                                        display: 'flex',\n                                        flexDirection: 'row',\n                                        left: '50%',\n                                        transform: 'translate(-50%, -50%)'\n                                    }}\n                                />\n                                <Background color='#aaa' gap={16} />\n                                <AddNodes nodesData={getNodesApi.data} node={selectedNode} />\n                                <ChatPopUp chatflowid={chatflowId} />\n                            </ReactFlow>\n                        </div>\n                    </div>\n                </Box>\n                <ConfirmDialog />\n            </Box>\n        </>\n    )\n}\n\nexport default Canvas\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}