{"ast":null,"code":"import _slicedToArray from\"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"children\",\"value\",\"index\"];import{useState}from'react';import{Tabs,Tab,Box}from'@mui/material';import{CopyBlock,atomOneDark}from'react-code-blocks';// Project import\nimport{CheckboxInput}from'ui-component/checkbox/Checkbox';// Const\nimport{baseURL}from'store/constant';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function TabPanel(props){var children=props.children,value=props.value,index=props.index,other=_objectWithoutProperties(props,_excluded);return/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread({role:\"tabpanel\",hidden:value!==index,id:\"attachment-tabpanel-\".concat(index),\"aria-labelledby\":\"attachment-tab-\".concat(index)},other),{},{children:value===index&&/*#__PURE__*/_jsx(Box,{sx:{p:1},children:children})}));}function a11yProps(index){return{id:\"attachment-tab-\".concat(index),'aria-controls':\"attachment-tabpanel-\".concat(index)};}var embedPopupHtmlCode=function embedPopupHtmlCode(chatflowid){return\"<script type=\\\"module\\\">\\n    import Chatbot from \\\"https://cdn.jsdelivr.net/npm/flowise-embed/dist/web.js\\\"\\n    Chatbot.init({\\n        chatflowid: \\\"\".concat(chatflowid,\"\\\",\\n        apiHost: \\\"\").concat(baseURL,\"\\\",\\n    })\\n</script>\");};var embedPopupReactCode=function embedPopupReactCode(chatflowid){return\"import { BubbleChat } from 'flowise-embed-react'\\n\\nconst App = () => {\\n    return (\\n        <BubbleChat chatflowid=\\\"\".concat(chatflowid,\"\\\" apiHost=\\\"\").concat(baseURL,\"\\\" />\\n    );\\n};\");};var embedFullpageHtmlCode=function embedFullpageHtmlCode(chatflowid){return\"<flowise-fullchatbot></flowise-fullchatbot>\\n<script type=\\\"module\\\">\\n    import Chatbot from \\\"https://cdn.jsdelivr.net/npm/flowise-embed/dist/web.js\\\"\\n    Chatbot.initFull({\\n        chatflowid: \\\"\".concat(chatflowid,\"\\\",\\n        apiHost: \\\"\").concat(baseURL,\"\\\",\\n    })\\n</script>\");};var embedFullpageReactCode=function embedFullpageReactCode(chatflowid){return\"import { FullPageChat } from \\\"flowise-embed-react\\\"\\n\\nconst App = () => {\\n    return (\\n        <FullPageChat\\n            chatflowid=\\\"\".concat(chatflowid,\"\\\"\\n            apiHost=\\\"\").concat(baseURL,\"\\\"\\n        />\\n    );\\n};\");};var buttonConfig=function buttonConfig(){var isReact=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;return isReact?\"button: {\\n                    backgroundColor: \\\"#3B81F6\\\",\\n                    right: 20,\\n                    bottom: 20,\\n                    size: \\\"medium\\\",\\n                    iconColor: \\\"white\\\",\\n                    customIconSrc: \\\"https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/svg/google-messages.svg\\\",\\n                }\":\"button: {\\n                backgroundColor: \\\"#3B81F6\\\",\\n                right: 20,\\n                bottom: 20,\\n                size: \\\"medium\\\",\\n                iconColor: \\\"white\\\",\\n                customIconSrc: \\\"https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/svg/google-messages.svg\\\",\\n            }\";};var chatwindowConfig=function chatwindowConfig(){var isReact=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;return isReact?\"chatWindow: {\\n                    welcomeMessage: \\\"Hello! This is custom welcome message\\\",\\n                    backgroundColor: \\\"#ffffff\\\",\\n                    height: 700,\\n                    width: 400,\\n                    fontSize: 16,\\n                    poweredByTextColor: \\\"#303235\\\",\\n                    botMessage: {\\n                        backgroundColor: \\\"#f7f8ff\\\",\\n                        textColor: \\\"#303235\\\",\\n                        showAvatar: true,\\n                        avatarSrc: \\\"https://raw.githubusercontent.com/zahidkhawaja/langchain-chat-nextjs/main/public/parroticon.png\\\",\\n                    },\\n                    userMessage: {\\n                        backgroundColor: \\\"#3B81F6\\\",\\n                        textColor: \\\"#ffffff\\\",\\n                        showAvatar: true,\\n                        avatarSrc: \\\"https://raw.githubusercontent.com/zahidkhawaja/langchain-chat-nextjs/main/public/usericon.png\\\",\\n                    },\\n                    textInput: {\\n                        placeholder: \\\"Type your question\\\",\\n                        backgroundColor: \\\"#ffffff\\\",\\n                        textColor: \\\"#303235\\\",\\n                        sendButtonColor: \\\"#3B81F6\\\",\\n                    }\\n                }\":\"chatWindow: {\\n                welcomeMessage: \\\"Hello! This is custom welcome message\\\",\\n                backgroundColor: \\\"#ffffff\\\",\\n                height: 700,\\n                width: 400,\\n                fontSize: 16,\\n                poweredByTextColor: \\\"#303235\\\",\\n                botMessage: {\\n                    backgroundColor: \\\"#f7f8ff\\\",\\n                    textColor: \\\"#303235\\\",\\n                    showAvatar: true,\\n                    avatarSrc: \\\"https://raw.githubusercontent.com/zahidkhawaja/langchain-chat-nextjs/main/public/parroticon.png\\\",\\n                },\\n                userMessage: {\\n                    backgroundColor: \\\"#3B81F6\\\",\\n                    textColor: \\\"#ffffff\\\",\\n                    showAvatar: true,\\n                    avatarSrc: \\\"https://raw.githubusercontent.com/zahidkhawaja/langchain-chat-nextjs/main/public/usericon.png\\\",\\n                },\\n                textInput: {\\n                    placeholder: \\\"Type your question\\\",\\n                    backgroundColor: \\\"#ffffff\\\",\\n                    textColor: \\\"#303235\\\",\\n                    sendButtonColor: \\\"#3B81F6\\\",\\n                }\\n            }\";};var embedPopupHtmlCodeCustomization=function embedPopupHtmlCodeCustomization(chatflowid){return\"<script type=\\\"module\\\">\\n    import Chatbot from \\\"https://cdn.jsdelivr.net/npm/flowise-embed/dist/web.js\\\"\\n    Chatbot.init({\\n        chatflowid: \\\"\".concat(chatflowid,\"\\\",\\n        apiHost: \\\"\").concat(baseURL,\"\\\",\\n        chatflowConfig: {\\n            // topK: 2\\n        },\\n        theme: {\\n            \").concat(buttonConfig(),\",\\n            \").concat(chatwindowConfig(),\"\\n        }\\n    })\\n</script>\");};var embedPopupReactCodeCustomization=function embedPopupReactCodeCustomization(chatflowid){return\"import { BubbleChat } from 'flowise-embed-react'\\n\\nconst App = () => {\\n    return (\\n        <BubbleChat\\n            chatflowid=\\\"\".concat(chatflowid,\"\\\"\\n            apiHost=\\\"\").concat(baseURL,\"\\\"\\n            theme={{\\n                \").concat(buttonConfig(true),\",\\n                \").concat(chatwindowConfig(true),\"\\n            }}\\n        />\\n    );\\n};\");};var embedFullpageHtmlCodeCustomization=function embedFullpageHtmlCodeCustomization(chatflowid){return\"<flowise-fullchatbot></flowise-fullchatbot>\\n<script type=\\\"module\\\">\\n    import Chatbot from \\\"https://cdn.jsdelivr.net/npm/flowise-embed/dist/web.js\\\"\\n    Chatbot.initFull({\\n        chatflowid: \\\"\".concat(chatflowid,\"\\\",\\n        apiHost: \\\"\").concat(baseURL,\"\\\",\\n        theme: {\\n            \").concat(chatwindowConfig(),\"\\n        }\\n    })\\n</script>\");};var embedFullpageReactCodeCustomization=function embedFullpageReactCodeCustomization(chatflowid){return\"import { FullPageChat } from \\\"flowise-embed-react\\\"\\n\\nconst App = () => {\\n    return (\\n        <FullPageChat\\n            chatflowid=\\\"\".concat(chatflowid,\"\\\"\\n            apiHost=\\\"\").concat(baseURL,\"\\\"\\n            theme={{\\n                \").concat(chatwindowConfig(true),\"\\n            }}\\n        />\\n    );\\n};\");};var EmbedChat=function EmbedChat(_ref){var chatflowid=_ref.chatflowid;var codes=['Popup Html','Fullpage Html','Popup React','Fullpage React'];var _useState=useState(0),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),embedChatCheckboxVal=_useState4[0],setEmbedChatCheckbox=_useState4[1];var onCheckBoxEmbedChatChanged=function onCheckBoxEmbedChatChanged(newVal){setEmbedChatCheckbox(newVal);};var handleChange=function handleChange(event,newValue){setValue(newValue);};var getCode=function getCode(codeLang){switch(codeLang){case'Popup Html':return embedPopupHtmlCode(chatflowid);case'Fullpage Html':return embedFullpageHtmlCode(chatflowid);case'Popup React':return embedPopupReactCode(chatflowid);case'Fullpage React':return embedFullpageReactCode(chatflowid);default:return'';}};var getCodeCustomization=function getCodeCustomization(codeLang){switch(codeLang){case'Popup Html':return embedPopupHtmlCodeCustomization(chatflowid);case'Fullpage Html':return embedFullpageHtmlCodeCustomization(chatflowid);case'Popup React':return embedPopupReactCodeCustomization(chatflowid);case'Fullpage React':return embedFullpageReactCodeCustomization(chatflowid);default:return'';}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',flexDirection:'row',alignItems:'center'},children:/*#__PURE__*/_jsx(\"div\",{style:{flex:80},children:/*#__PURE__*/_jsx(Tabs,{value:value,onChange:handleChange,\"aria-label\":\"tabs\",children:codes.map(function(codeLang,index){return/*#__PURE__*/_jsx(Tab,_objectSpread({label:codeLang},a11yProps(index)),index);})})})}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:10}}),codes.map(function(codeLang,index){return/*#__PURE__*/_jsxs(TabPanel,{value:value,index:index,children:[(value===0||value===1)&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Paste this anywhere in the \",/*#__PURE__*/_jsx(\"code\",{children:\"<body>\"}),\" tag of your html file.\",/*#__PURE__*/_jsxs(\"p\",{children:[\"You can also specify a\\xA0\",/*#__PURE__*/_jsx(\"a\",{rel:\"noreferrer\",target:\"_blank\",href:\"https://www.npmjs.com/package/flowise-embed?activeTab=versions\",children:\"version\"}),\":\\xA0\",/*#__PURE__*/_jsx(\"code\",{children:\"https://cdn.jsdelivr.net/npm/flowise-embed@<version>/dist/web.js\"})]})]}),/*#__PURE__*/_jsx(\"div\",{style:{height:10}})]}),/*#__PURE__*/_jsx(CopyBlock,{theme:atomOneDark,text:getCode(codeLang),language:\"javascript\",showLineNumbers:false,wrapLines:true}),/*#__PURE__*/_jsx(CheckboxInput,{label:\"Show Embed Chat Config\",value:embedChatCheckboxVal,onChange:onCheckBoxEmbedChatChanged}),embedChatCheckboxVal&&/*#__PURE__*/_jsx(CopyBlock,{theme:atomOneDark,text:getCodeCustomization(codeLang),language:\"javascript\",showLineNumbers:false,wrapLines:true})]},index);})]});};export default EmbedChat;","map":{"version":3,"names":["useState","Tabs","Tab","Box","CopyBlock","atomOneDark","CheckboxInput","baseURL","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TabPanel","props","children","value","index","other","_objectWithoutProperties","_excluded","_objectSpread","role","hidden","id","concat","sx","p","a11yProps","embedPopupHtmlCode","chatflowid","embedPopupReactCode","embedFullpageHtmlCode","embedFullpageReactCode","buttonConfig","isReact","arguments","length","undefined","chatwindowConfig","embedPopupHtmlCodeCustomization","embedPopupReactCodeCustomization","embedFullpageHtmlCodeCustomization","embedFullpageReactCodeCustomization","EmbedChat","_ref","codes","_useState","_useState2","_slicedToArray","setValue","_useState3","_useState4","embedChatCheckboxVal","setEmbedChatCheckbox","onCheckBoxEmbedChatChanged","newVal","handleChange","event","newValue","getCode","codeLang","getCodeCustomization","style","display","flexDirection","alignItems","flex","onChange","map","label","marginTop","rel","target","href","height","theme","text","language","showLineNumbers","wrapLines"],"sources":["/Users/zorro/Downloads/Flowise/packages/ui/src/views/chatflows/EmbedChat.js"],"sourcesContent":["import { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Tabs, Tab, Box } from '@mui/material'\nimport { CopyBlock, atomOneDark } from 'react-code-blocks'\n\n// Project import\nimport { CheckboxInput } from 'ui-component/checkbox/Checkbox'\n\n// Const\nimport { baseURL } from 'store/constant'\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props\n    return (\n        <div\n            role='tabpanel'\n            hidden={value !== index}\n            id={`attachment-tabpanel-${index}`}\n            aria-labelledby={`attachment-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box sx={{ p: 1 }}>{children}</Box>}\n        </div>\n    )\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `attachment-tab-${index}`,\n        'aria-controls': `attachment-tabpanel-${index}`\n    }\n}\n\nconst embedPopupHtmlCode = (chatflowid) => {\n    return `<script type=\"module\">\n    import Chatbot from \"https://cdn.jsdelivr.net/npm/flowise-embed/dist/web.js\"\n    Chatbot.init({\n        chatflowid: \"${chatflowid}\",\n        apiHost: \"${baseURL}\",\n    })\n</script>`\n}\n\nconst embedPopupReactCode = (chatflowid) => {\n    return `import { BubbleChat } from 'flowise-embed-react'\n\nconst App = () => {\n    return (\n        <BubbleChat chatflowid=\"${chatflowid}\" apiHost=\"${baseURL}\" />\n    );\n};`\n}\n\nconst embedFullpageHtmlCode = (chatflowid) => {\n    return `<flowise-fullchatbot></flowise-fullchatbot>\n<script type=\"module\">\n    import Chatbot from \"https://cdn.jsdelivr.net/npm/flowise-embed/dist/web.js\"\n    Chatbot.initFull({\n        chatflowid: \"${chatflowid}\",\n        apiHost: \"${baseURL}\",\n    })\n</script>`\n}\n\nconst embedFullpageReactCode = (chatflowid) => {\n    return `import { FullPageChat } from \"flowise-embed-react\"\n\nconst App = () => {\n    return (\n        <FullPageChat\n            chatflowid=\"${chatflowid}\"\n            apiHost=\"${baseURL}\"\n        />\n    );\n};`\n}\n\nconst buttonConfig = (isReact = false) => {\n    return isReact\n        ? `button: {\n                    backgroundColor: \"#3B81F6\",\n                    right: 20,\n                    bottom: 20,\n                    size: \"medium\",\n                    iconColor: \"white\",\n                    customIconSrc: \"https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/svg/google-messages.svg\",\n                }`\n        : `button: {\n                backgroundColor: \"#3B81F6\",\n                right: 20,\n                bottom: 20,\n                size: \"medium\",\n                iconColor: \"white\",\n                customIconSrc: \"https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/svg/google-messages.svg\",\n            }`\n}\n\nconst chatwindowConfig = (isReact = false) => {\n    return isReact\n        ? `chatWindow: {\n                    welcomeMessage: \"Hello! This is custom welcome message\",\n                    backgroundColor: \"#ffffff\",\n                    height: 700,\n                    width: 400,\n                    fontSize: 16,\n                    poweredByTextColor: \"#303235\",\n                    botMessage: {\n                        backgroundColor: \"#f7f8ff\",\n                        textColor: \"#303235\",\n                        showAvatar: true,\n                        avatarSrc: \"https://raw.githubusercontent.com/zahidkhawaja/langchain-chat-nextjs/main/public/parroticon.png\",\n                    },\n                    userMessage: {\n                        backgroundColor: \"#3B81F6\",\n                        textColor: \"#ffffff\",\n                        showAvatar: true,\n                        avatarSrc: \"https://raw.githubusercontent.com/zahidkhawaja/langchain-chat-nextjs/main/public/usericon.png\",\n                    },\n                    textInput: {\n                        placeholder: \"Type your question\",\n                        backgroundColor: \"#ffffff\",\n                        textColor: \"#303235\",\n                        sendButtonColor: \"#3B81F6\",\n                    }\n                }`\n        : `chatWindow: {\n                welcomeMessage: \"Hello! This is custom welcome message\",\n                backgroundColor: \"#ffffff\",\n                height: 700,\n                width: 400,\n                fontSize: 16,\n                poweredByTextColor: \"#303235\",\n                botMessage: {\n                    backgroundColor: \"#f7f8ff\",\n                    textColor: \"#303235\",\n                    showAvatar: true,\n                    avatarSrc: \"https://raw.githubusercontent.com/zahidkhawaja/langchain-chat-nextjs/main/public/parroticon.png\",\n                },\n                userMessage: {\n                    backgroundColor: \"#3B81F6\",\n                    textColor: \"#ffffff\",\n                    showAvatar: true,\n                    avatarSrc: \"https://raw.githubusercontent.com/zahidkhawaja/langchain-chat-nextjs/main/public/usericon.png\",\n                },\n                textInput: {\n                    placeholder: \"Type your question\",\n                    backgroundColor: \"#ffffff\",\n                    textColor: \"#303235\",\n                    sendButtonColor: \"#3B81F6\",\n                }\n            }`\n}\n\nconst embedPopupHtmlCodeCustomization = (chatflowid) => {\n    return `<script type=\"module\">\n    import Chatbot from \"https://cdn.jsdelivr.net/npm/flowise-embed/dist/web.js\"\n    Chatbot.init({\n        chatflowid: \"${chatflowid}\",\n        apiHost: \"${baseURL}\",\n        chatflowConfig: {\n            // topK: 2\n        },\n        theme: {\n            ${buttonConfig()},\n            ${chatwindowConfig()}\n        }\n    })\n</script>`\n}\n\nconst embedPopupReactCodeCustomization = (chatflowid) => {\n    return `import { BubbleChat } from 'flowise-embed-react'\n\nconst App = () => {\n    return (\n        <BubbleChat\n            chatflowid=\"${chatflowid}\"\n            apiHost=\"${baseURL}\"\n            theme={{\n                ${buttonConfig(true)},\n                ${chatwindowConfig(true)}\n            }}\n        />\n    );\n};`\n}\n\nconst embedFullpageHtmlCodeCustomization = (chatflowid) => {\n    return `<flowise-fullchatbot></flowise-fullchatbot>\n<script type=\"module\">\n    import Chatbot from \"https://cdn.jsdelivr.net/npm/flowise-embed/dist/web.js\"\n    Chatbot.initFull({\n        chatflowid: \"${chatflowid}\",\n        apiHost: \"${baseURL}\",\n        theme: {\n            ${chatwindowConfig()}\n        }\n    })\n</script>`\n}\n\nconst embedFullpageReactCodeCustomization = (chatflowid) => {\n    return `import { FullPageChat } from \"flowise-embed-react\"\n\nconst App = () => {\n    return (\n        <FullPageChat\n            chatflowid=\"${chatflowid}\"\n            apiHost=\"${baseURL}\"\n            theme={{\n                ${chatwindowConfig(true)}\n            }}\n        />\n    );\n};`\n}\n\nconst EmbedChat = ({ chatflowid }) => {\n    const codes = ['Popup Html', 'Fullpage Html', 'Popup React', 'Fullpage React']\n    const [value, setValue] = useState(0)\n    const [embedChatCheckboxVal, setEmbedChatCheckbox] = useState(false)\n\n    const onCheckBoxEmbedChatChanged = (newVal) => {\n        setEmbedChatCheckbox(newVal)\n    }\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue)\n    }\n\n    const getCode = (codeLang) => {\n        switch (codeLang) {\n            case 'Popup Html':\n                return embedPopupHtmlCode(chatflowid)\n            case 'Fullpage Html':\n                return embedFullpageHtmlCode(chatflowid)\n            case 'Popup React':\n                return embedPopupReactCode(chatflowid)\n            case 'Fullpage React':\n                return embedFullpageReactCode(chatflowid)\n            default:\n                return ''\n        }\n    }\n\n    const getCodeCustomization = (codeLang) => {\n        switch (codeLang) {\n            case 'Popup Html':\n                return embedPopupHtmlCodeCustomization(chatflowid)\n            case 'Fullpage Html':\n                return embedFullpageHtmlCodeCustomization(chatflowid)\n            case 'Popup React':\n                return embedPopupReactCodeCustomization(chatflowid)\n            case 'Fullpage React':\n                return embedFullpageReactCodeCustomization(chatflowid)\n            default:\n                return ''\n        }\n    }\n\n    return (\n        <>\n            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                <div style={{ flex: 80 }}>\n                    <Tabs value={value} onChange={handleChange} aria-label='tabs'>\n                        {codes.map((codeLang, index) => (\n                            <Tab key={index} label={codeLang} {...a11yProps(index)}></Tab>\n                        ))}\n                    </Tabs>\n                </div>\n            </div>\n            <div style={{ marginTop: 10 }}></div>\n            {codes.map((codeLang, index) => (\n                <TabPanel key={index} value={value} index={index}>\n                    {(value === 0 || value === 1) && (\n                        <>\n                            <span>\n                                Paste this anywhere in the <code>{`<body>`}</code> tag of your html file.\n                                <p>\n                                    You can also specify a&nbsp;\n                                    <a\n                                        rel='noreferrer'\n                                        target='_blank'\n                                        href='https://www.npmjs.com/package/flowise-embed?activeTab=versions'\n                                    >\n                                        version\n                                    </a>\n                                    :&nbsp;<code>{`https://cdn.jsdelivr.net/npm/flowise-embed@<version>/dist/web.js`}</code>\n                                </p>\n                            </span>\n                            <div style={{ height: 10 }}></div>\n                        </>\n                    )}\n                    <CopyBlock theme={atomOneDark} text={getCode(codeLang)} language='javascript' showLineNumbers={false} wrapLines />\n\n                    <CheckboxInput label='Show Embed Chat Config' value={embedChatCheckboxVal} onChange={onCheckBoxEmbedChatChanged} />\n\n                    {embedChatCheckboxVal && (\n                        <CopyBlock\n                            theme={atomOneDark}\n                            text={getCodeCustomization(codeLang)}\n                            language='javascript'\n                            showLineNumbers={false}\n                            wrapLines\n                        />\n                    )}\n                </TabPanel>\n            ))}\n        </>\n    )\n}\n\nEmbedChat.propTypes = {\n    chatflowid: PropTypes.string\n}\n\nexport default EmbedChat\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}