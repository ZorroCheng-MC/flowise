{"ast":null,"code":"import _regeneratorRuntime from \"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridExpandedRowCountSelector } from '../filter/gridFilterSelector';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../columns/gridColumnsSelector';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getColumnsToExport } from './utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridPrintExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction raf() {\n  return new Promise(function (resolve) {\n    requestAnimationFrame(function () {\n      resolve();\n    });\n  });\n}\nfunction buildPrintWindow(title) {\n  var iframeEl = document.createElement('iframe');\n  iframeEl.style.position = 'absolute';\n  iframeEl.style.width = '0px';\n  iframeEl.style.height = '0px';\n  iframeEl.title = title || document.title;\n  return iframeEl;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport var useGridPrintExport = function useGridPrintExport(apiRef, props) {\n  var logger = useGridLogger(apiRef, 'useGridPrintExport');\n  var doc = React.useRef(null);\n  var previousGridState = React.useRef(null);\n  var previousColumnVisibility = React.useRef({});\n  React.useEffect(function () {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef]);\n\n  // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n  var updateGridColumnsForPrint = React.useCallback(function (fields, allColumns) {\n    return new Promise(function (resolve) {\n      // TODO remove unused Promise\n      if (!fields && !allColumns) {\n        resolve();\n        return;\n      }\n      var exportedColumnFields = getColumnsToExport({\n        apiRef: apiRef,\n        options: {\n          fields: fields,\n          allColumns: allColumns\n        }\n      }).map(function (column) {\n        return column.field;\n      });\n      var columns = gridColumnDefinitionsSelector(apiRef);\n      var newColumnVisibilityModel = {};\n      columns.forEach(function (column) {\n        newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n      });\n      apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n      resolve();\n    });\n  }, [apiRef]);\n  var handlePrintWindowLoad = React.useCallback(function (printWindow, options) {\n    var _querySelector, _querySelector2;\n    var normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false\n    }, options);\n    var printDoc = printWindow.contentDocument;\n    if (!printDoc) {\n      return;\n    }\n    var rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    var gridRootElement = apiRef.current.rootElementRef.current;\n    var gridClone = gridRootElement.cloneNode(true);\n\n    // Allow to overflow to not hide the border of the last row\n    var gridMain = gridClone.querySelector(\".\".concat(gridClasses.main));\n    gridMain.style.overflow = 'visible';\n\n    // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n    gridClone.style.contain = 'size';\n    var columnHeaders = gridClone.querySelector(\".\".concat(gridClasses.columnHeaders));\n    var columnHeadersInner = columnHeaders.querySelector(\".\".concat(gridClasses.columnHeadersInner));\n    columnHeadersInner.style.width = '100%';\n    var gridToolbarElementHeight = ((_querySelector = gridRootElement.querySelector(\".\".concat(gridClasses.toolbarContainer))) == null ? void 0 : _querySelector.offsetHeight) || 0;\n    var gridFooterElementHeight = ((_querySelector2 = gridRootElement.querySelector(\".\".concat(gridClasses.footerContainer))) == null ? void 0 : _querySelector2.offsetHeight) || 0;\n    if (normalizeOptions.hideToolbar) {\n      var _gridClone$querySelec;\n      (_gridClone$querySelec = gridClone.querySelector(\".\".concat(gridClasses.toolbarContainer))) == null ? void 0 : _gridClone$querySelec.remove();\n      gridToolbarElementHeight = 0;\n    }\n    if (normalizeOptions.hideFooter) {\n      var _gridClone$querySelec2;\n      (_gridClone$querySelec2 = gridClone.querySelector(\".\".concat(gridClasses.footerContainer))) == null ? void 0 : _gridClone$querySelec2.remove();\n      gridFooterElementHeight = 0;\n    }\n\n    // Expand container height to accommodate all rows\n    gridClone.style.height = \"\".concat(rowsMeta.currentPageTotalHeight + getTotalHeaderHeight(apiRef, props.columnHeaderHeight) + gridToolbarElementHeight + gridFooterElementHeight, \"px\");\n    // The height above does not include grid border width, so we need to exclude it\n    gridClone.style.boxSizing = 'content-box';\n\n    // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n    var container = document.createElement('div');\n    container.appendChild(gridClone);\n    printDoc.body.innerHTML = container.innerHTML;\n    var defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      var styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n    if (normalizeOptions.bodyClassName) {\n      var _printDoc$body$classL;\n      (_printDoc$body$classL = printDoc.body.classList).add.apply(_printDoc$body$classL, _toConsumableArray(normalizeOptions.bodyClassName.split(' ')));\n    }\n    var stylesheetLoadPromises = [];\n    if (normalizeOptions.copyStyles) {\n      var rootCandidate = gridRootElement.getRootNode();\n      var root = rootCandidate.constructor.name === 'ShadowRoot' ? rootCandidate : doc.current;\n      var headStyleElements = root.querySelectorAll(\"style, link[rel='stylesheet']\");\n      var _loop = function _loop() {\n        var node = headStyleElements[i];\n        if (node.tagName === 'STYLE') {\n          var newHeadStyleElements = printDoc.createElement(node.tagName);\n          var sheet = node.sheet;\n          if (sheet) {\n            var styleCSS = '';\n            // NOTE: for-of is not supported by IE\n            for (var j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += \"\".concat(sheet.cssRules[j].cssText, \"\\r\\n\");\n              }\n            }\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n\n          var _newHeadStyleElements = printDoc.createElement(node.tagName);\n          for (var _j = 0; _j < node.attributes.length; _j += 1) {\n            var attr = node.attributes[_j];\n            if (attr) {\n              _newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n          stylesheetLoadPromises.push(new Promise(function (resolve) {\n            _newHeadStyleElements.addEventListener('load', function () {\n              return resolve();\n            });\n          }));\n          printDoc.head.appendChild(_newHeadStyleElements);\n        }\n      };\n      for (var i = 0; i < headStyleElements.length; i += 1) {\n        _loop();\n      }\n    }\n\n    // Trigger print\n    if (process.env.NODE_ENV !== 'test') {\n      // wait for remote stylesheets to load\n      Promise.all(stylesheetLoadPromises).then(function () {\n        printWindow.contentWindow.print();\n      });\n    }\n  }, [apiRef, doc, props.columnHeaderHeight]);\n  var handlePrintWindowAfterPrint = React.useCallback(function (printWindow) {\n    var _previousGridState$cu;\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow);\n\n    // Revert grid to previous state\n    apiRef.current.restoreState(previousGridState.current || {});\n    if (!((_previousGridState$cu = previousGridState.current) != null && (_previousGridState$cu = _previousGridState$cu.columns) != null && _previousGridState$cu.columnVisibilityModel)) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n    apiRef.current.unstable_enableVirtualization();\n\n    // Clear local state\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n  }, [apiRef]);\n  var exportDataAsPrint = React.useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(options) {\n      var visibleRowCount, printWindow;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            logger.debug(\"Export data as Print\");\n            if (apiRef.current.rootElementRef.current) {\n              _context.next = 3;\n              break;\n            }\n            throw new Error('MUI: No grid root element available.');\n          case 3:\n            previousGridState.current = apiRef.current.exportState();\n            // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n            previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n            if (props.pagination) {\n              visibleRowCount = gridExpandedRowCountSelector(apiRef);\n              apiRef.current.setPageSize(visibleRowCount);\n            }\n            _context.next = 8;\n            return updateGridColumnsForPrint(options == null ? void 0 : options.fields, options == null ? void 0 : options.allColumns);\n          case 8:\n            apiRef.current.unstable_disableVirtualization();\n            _context.next = 11;\n            return raf();\n          case 11:\n            // wait for the state changes to take action\n            printWindow = buildPrintWindow(options == null ? void 0 : options.fileName);\n            if (process.env.NODE_ENV === 'test') {\n              doc.current.body.appendChild(printWindow);\n              // In test env, run the all pipeline without waiting for loading\n              handlePrintWindowLoad(printWindow, options);\n              handlePrintWindowAfterPrint(printWindow);\n            } else {\n              printWindow.onload = function () {\n                handlePrintWindowLoad(printWindow, options);\n                var mediaQueryList = printWindow.contentWindow.matchMedia('print');\n                mediaQueryList.addEventListener('change', function (mql) {\n                  var isAfterPrint = mql.matches === false;\n                  if (isAfterPrint) {\n                    handlePrintWindowAfterPrint(printWindow);\n                  }\n                });\n              };\n              doc.current.body.appendChild(printWindow);\n            }\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [props, logger, apiRef, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint]);\n  var printExportApi = {\n    exportDataAsPrint: exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  var addExportMenuButtons = React.useCallback(function (initialValue, options) {\n    var _options$printOptions;\n    if ((_options$printOptions = options.printOptions) != null && _options$printOptions.disableToolbarButton) {\n      return initialValue;\n    }\n    return [].concat(_toConsumableArray(initialValue), [{\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }]);\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","map":{"version":3,"names":["_extends","React","unstable_ownerDocument","ownerDocument","useGridLogger","gridExpandedRowCountSelector","gridColumnDefinitionsSelector","gridColumnVisibilityModelSelector","gridClasses","useGridApiMethod","gridRowsMetaSelector","getColumnsToExport","useGridRegisterPipeProcessor","GridPrintExportMenuItem","getTotalHeaderHeight","jsx","_jsx","raf","Promise","resolve","requestAnimationFrame","buildPrintWindow","title","iframeEl","document","createElement","style","position","width","height","useGridPrintExport","apiRef","props","logger","doc","useRef","previousGridState","previousColumnVisibility","useEffect","current","rootElementRef","updateGridColumnsForPrint","useCallback","fields","allColumns","exportedColumnFields","options","map","column","field","columns","newColumnVisibilityModel","forEach","includes","setColumnVisibilityModel","handlePrintWindowLoad","printWindow","_querySelector","_querySelector2","normalizeOptions","copyStyles","hideToolbar","hideFooter","printDoc","contentDocument","rowsMeta","state","gridRootElement","gridClone","cloneNode","gridMain","querySelector","concat","main","overflow","contain","columnHeaders","columnHeadersInner","gridToolbarElementHeight","toolbarContainer","offsetHeight","gridFooterElementHeight","footerContainer","_gridClone$querySelec","remove","_gridClone$querySelec2","currentPageTotalHeight","columnHeaderHeight","boxSizing","container","appendChild","body","innerHTML","defaultPageStyle","pageStyle","styleElement","createTextNode","head","bodyClassName","_printDoc$body$classL","classList","add","apply","_toConsumableArray","split","stylesheetLoadPromises","rootCandidate","getRootNode","root","constructor","name","headStyleElements","querySelectorAll","_loop","node","i","tagName","newHeadStyleElements","sheet","styleCSS","j","cssRules","length","cssText","getAttribute","attributes","attr","setAttribute","nodeName","nodeValue","push","addEventListener","process","env","NODE_ENV","all","then","contentWindow","print","handlePrintWindowAfterPrint","_previousGridState$cu","removeChild","restoreState","columnVisibilityModel","unstable_enableVirtualization","exportDataAsPrint","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","visibleRowCount","wrap","_callee$","_context","prev","next","debug","Error","exportState","pagination","setPageSize","unstable_disableVirtualization","fileName","onload","mediaQueryList","matchMedia","mql","isAfterPrint","matches","stop","_x","arguments","printExportApi","addExportMenuButtons","initialValue","_options$printOptions","printOptions","disableToolbarButton","component","componentName"],"sources":["/Users/zorro/Downloads/Flowise/node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridExpandedRowCountSelector } from '../filter/gridFilterSelector';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../columns/gridColumnsSelector';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getColumnsToExport } from './utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridPrintExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\nfunction buildPrintWindow(title) {\n  const iframeEl = document.createElement('iframe');\n  iframeEl.style.position = 'absolute';\n  iframeEl.style.width = '0px';\n  iframeEl.style.height = '0px';\n  iframeEl.title = title || document.title;\n  return iframeEl;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef]);\n\n  // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns) => new Promise(resolve => {\n    // TODO remove unused Promise\n    if (!fields && !allColumns) {\n      resolve();\n      return;\n    }\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    var _querySelector, _querySelector2;\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false\n    }, options);\n    const printDoc = printWindow.contentDocument;\n    if (!printDoc) {\n      return;\n    }\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n\n    // Allow to overflow to not hide the border of the last row\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n\n    // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n    gridClone.style.contain = 'size';\n    const columnHeaders = gridClone.querySelector(`.${gridClasses.columnHeaders}`);\n    const columnHeadersInner = columnHeaders.querySelector(`.${gridClasses.columnHeadersInner}`);\n    columnHeadersInner.style.width = '100%';\n    let gridToolbarElementHeight = ((_querySelector = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)) == null ? void 0 : _querySelector.offsetHeight) || 0;\n    let gridFooterElementHeight = ((_querySelector2 = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)) == null ? void 0 : _querySelector2.offsetHeight) || 0;\n    if (normalizeOptions.hideToolbar) {\n      var _gridClone$querySelec;\n      (_gridClone$querySelec = gridClone.querySelector(`.${gridClasses.toolbarContainer}`)) == null ? void 0 : _gridClone$querySelec.remove();\n      gridToolbarElementHeight = 0;\n    }\n    if (normalizeOptions.hideFooter) {\n      var _gridClone$querySelec2;\n      (_gridClone$querySelec2 = gridClone.querySelector(`.${gridClasses.footerContainer}`)) == null ? void 0 : _gridClone$querySelec2.remove();\n      gridFooterElementHeight = 0;\n    }\n\n    // Expand container height to accommodate all rows\n    gridClone.style.height = `${rowsMeta.currentPageTotalHeight + getTotalHeaderHeight(apiRef, props.columnHeaderHeight) + gridToolbarElementHeight + gridFooterElementHeight}px`;\n    // The height above does not include grid border width, so we need to exclude it\n    gridClone.style.boxSizing = 'content-box';\n\n    // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n    const stylesheetLoadPromises = [];\n    if (normalizeOptions.copyStyles) {\n      const rootCandidate = gridRootElement.getRootNode();\n      const root = rootCandidate.constructor.name === 'ShadowRoot' ? rootCandidate : doc.current;\n      const headStyleElements = root.querySelectorAll(\"style, link[rel='stylesheet']\");\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n          if (sheet) {\n            let styleCSS = '';\n            // NOTE: for-of is not supported by IE\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n          stylesheetLoadPromises.push(new Promise(resolve => {\n            newHeadStyleElements.addEventListener('load', () => resolve());\n          }));\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    }\n\n    // Trigger print\n    if (process.env.NODE_ENV !== 'test') {\n      // wait for remote stylesheets to load\n      Promise.all(stylesheetLoadPromises).then(() => {\n        printWindow.contentWindow.print();\n      });\n    }\n  }, [apiRef, doc, props.columnHeaderHeight]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    var _previousGridState$cu;\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow);\n\n    // Revert grid to previous state\n    apiRef.current.restoreState(previousGridState.current || {});\n    if (!((_previousGridState$cu = previousGridState.current) != null && (_previousGridState$cu = _previousGridState$cu.columns) != null && _previousGridState$cu.columnVisibilityModel)) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n    apiRef.current.unstable_enableVirtualization();\n\n    // Clear local state\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI: No grid root element available.');\n    }\n    previousGridState.current = apiRef.current.exportState();\n    // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n    if (props.pagination) {\n      const visibleRowCount = gridExpandedRowCountSelector(apiRef);\n      apiRef.current.setPageSize(visibleRowCount);\n    }\n    await updateGridColumnsForPrint(options == null ? void 0 : options.fields, options == null ? void 0 : options.allColumns);\n    apiRef.current.unstable_disableVirtualization();\n    await raf(); // wait for the state changes to take action\n    const printWindow = buildPrintWindow(options == null ? void 0 : options.fileName);\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow);\n      // In test env, run the all pipeline without waiting for loading\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    var _options$printOptions;\n    if ((_options$printOptions = options.printOptions) != null && _options$printOptions.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}