{"ast":null,"code":"import _toConsumableArray from\"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _defineProperty from\"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _createForOfIteratorHelper from\"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _slicedToArray from\"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{createContext,useState}from'react';import{getUniqueNodeId}from'utils/genericHelper';import{cloneDeep}from'lodash';import{jsx as _jsx}from\"react/jsx-runtime\";var initialValue={reactFlowInstance:null,setReactFlowInstance:function setReactFlowInstance(){},duplicateNode:function duplicateNode(){},deleteNode:function deleteNode(){},deleteEdge:function deleteEdge(){}};export var flowContext=/*#__PURE__*/createContext(initialValue);export var ReactFlowContext=function ReactFlowContext(_ref){var children=_ref.children;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),reactFlowInstance=_useState2[0],setReactFlowInstance=_useState2[1];var deleteNode=function deleteNode(nodeid){deleteConnectedInput(nodeid,'node');reactFlowInstance.setNodes(reactFlowInstance.getNodes().filter(function(n){return n.id!==nodeid;}));reactFlowInstance.setEdges(reactFlowInstance.getEdges().filter(function(ns){return ns.source!==nodeid&&ns.target!==nodeid;}));};var deleteEdge=function deleteEdge(edgeid){deleteConnectedInput(edgeid,'edge');reactFlowInstance.setEdges(reactFlowInstance.getEdges().filter(function(edge){return edge.id!==edgeid;}));};var deleteConnectedInput=function deleteConnectedInput(id,type){var connectedEdges=type==='node'?reactFlowInstance.getEdges().filter(function(edge){return edge.source===id;}):reactFlowInstance.getEdges().filter(function(edge){return edge.id===id;});var _iterator=_createForOfIteratorHelper(connectedEdges),_step;try{var _loop=function _loop(){var edge=_step.value;var targetNodeId=edge.target;var sourceNodeId=edge.source;var targetInput=edge.targetHandle.split('-')[2];reactFlowInstance.setNodes(function(nds){return nds.map(function(node){if(node.id===targetNodeId){var value;var inputAnchor=node.data.inputAnchors.find(function(ancr){return ancr.name===targetInput;});var inputParam=node.data.inputParams.find(function(param){return param.name===targetInput;});if(inputAnchor&&inputAnchor.list){var values=node.data.inputs[targetInput]||[];value=values.filter(function(item){return!item.includes(sourceNodeId);});}else if(inputParam&&inputParam.acceptVariable){value=node.data.inputs[targetInput].replace(\"{{\".concat(sourceNodeId,\".data.instance}}\"),'')||'';}else{value='';}node.data=_objectSpread(_objectSpread({},node.data),{},{inputs:_objectSpread(_objectSpread({},node.data.inputs),{},_defineProperty({},targetInput,value))});}return node;});});};for(_iterator.s();!(_step=_iterator.n()).done;){_loop();}}catch(err){_iterator.e(err);}finally{_iterator.f();}};var duplicateNode=function duplicateNode(id){var nodes=reactFlowInstance.getNodes();var originalNode=nodes.find(function(n){return n.id===id;});if(originalNode){var newNodeId=getUniqueNodeId(originalNode.data,nodes);var clonedNode=cloneDeep(originalNode);var duplicatedNode=_objectSpread(_objectSpread({},clonedNode),{},{id:newNodeId,position:{x:clonedNode.position.x+400,y:clonedNode.position.y},positionAbsolute:{x:clonedNode.positionAbsolute.x+400,y:clonedNode.positionAbsolute.y},data:_objectSpread(_objectSpread({},clonedNode.data),{},{id:newNodeId}),selected:false});var dataKeys=['inputParams','inputAnchors','outputAnchors'];for(var _i=0,_dataKeys=dataKeys;_i<_dataKeys.length;_i++){var key=_dataKeys[_i];var _iterator2=_createForOfIteratorHelper(duplicatedNode.data[key]),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var item=_step2.value;if(item.id){item.id=item.id.replace(id,newNodeId);}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}reactFlowInstance.setNodes([].concat(_toConsumableArray(nodes),[duplicatedNode]));}};return/*#__PURE__*/_jsx(flowContext.Provider,{value:{reactFlowInstance:reactFlowInstance,setReactFlowInstance:setReactFlowInstance,deleteNode:deleteNode,deleteEdge:deleteEdge,duplicateNode:duplicateNode},children:children});};","map":{"version":3,"names":["createContext","useState","getUniqueNodeId","cloneDeep","jsx","_jsx","initialValue","reactFlowInstance","setReactFlowInstance","duplicateNode","deleteNode","deleteEdge","flowContext","ReactFlowContext","_ref","children","_useState","_useState2","_slicedToArray","nodeid","deleteConnectedInput","setNodes","getNodes","filter","n","id","setEdges","getEdges","ns","source","target","edgeid","edge","type","connectedEdges","_iterator","_createForOfIteratorHelper","_step","_loop","value","targetNodeId","sourceNodeId","targetInput","targetHandle","split","nds","map","node","inputAnchor","data","inputAnchors","find","ancr","name","inputParam","inputParams","param","list","values","inputs","item","includes","acceptVariable","replace","concat","_objectSpread","_defineProperty","s","done","err","e","f","nodes","originalNode","newNodeId","clonedNode","duplicatedNode","position","x","y","positionAbsolute","selected","dataKeys","_i","_dataKeys","length","key","_iterator2","_step2","_toConsumableArray","Provider"],"sources":["/Users/zorro/Downloads/Flowise/packages/ui/src/store/context/ReactFlowContext.js"],"sourcesContent":["import { createContext, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { getUniqueNodeId } from 'utils/genericHelper'\nimport { cloneDeep } from 'lodash'\n\nconst initialValue = {\n    reactFlowInstance: null,\n    setReactFlowInstance: () => {},\n    duplicateNode: () => {},\n    deleteNode: () => {},\n    deleteEdge: () => {}\n}\n\nexport const flowContext = createContext(initialValue)\n\nexport const ReactFlowContext = ({ children }) => {\n    const [reactFlowInstance, setReactFlowInstance] = useState(null)\n\n    const deleteNode = (nodeid) => {\n        deleteConnectedInput(nodeid, 'node')\n        reactFlowInstance.setNodes(reactFlowInstance.getNodes().filter((n) => n.id !== nodeid))\n        reactFlowInstance.setEdges(reactFlowInstance.getEdges().filter((ns) => ns.source !== nodeid && ns.target !== nodeid))\n    }\n\n    const deleteEdge = (edgeid) => {\n        deleteConnectedInput(edgeid, 'edge')\n        reactFlowInstance.setEdges(reactFlowInstance.getEdges().filter((edge) => edge.id !== edgeid))\n    }\n\n    const deleteConnectedInput = (id, type) => {\n        const connectedEdges =\n            type === 'node'\n                ? reactFlowInstance.getEdges().filter((edge) => edge.source === id)\n                : reactFlowInstance.getEdges().filter((edge) => edge.id === id)\n\n        for (const edge of connectedEdges) {\n            const targetNodeId = edge.target\n            const sourceNodeId = edge.source\n            const targetInput = edge.targetHandle.split('-')[2]\n\n            reactFlowInstance.setNodes((nds) =>\n                nds.map((node) => {\n                    if (node.id === targetNodeId) {\n                        let value\n                        const inputAnchor = node.data.inputAnchors.find((ancr) => ancr.name === targetInput)\n                        const inputParam = node.data.inputParams.find((param) => param.name === targetInput)\n\n                        if (inputAnchor && inputAnchor.list) {\n                            const values = node.data.inputs[targetInput] || []\n                            value = values.filter((item) => !item.includes(sourceNodeId))\n                        } else if (inputParam && inputParam.acceptVariable) {\n                            value = node.data.inputs[targetInput].replace(`{{${sourceNodeId}.data.instance}}`, '') || ''\n                        } else {\n                            value = ''\n                        }\n                        node.data = {\n                            ...node.data,\n                            inputs: {\n                                ...node.data.inputs,\n                                [targetInput]: value\n                            }\n                        }\n                    }\n                    return node\n                })\n            )\n        }\n    }\n\n    const duplicateNode = (id) => {\n        const nodes = reactFlowInstance.getNodes()\n        const originalNode = nodes.find((n) => n.id === id)\n        if (originalNode) {\n            const newNodeId = getUniqueNodeId(originalNode.data, nodes)\n            const clonedNode = cloneDeep(originalNode)\n\n            const duplicatedNode = {\n                ...clonedNode,\n                id: newNodeId,\n                position: {\n                    x: clonedNode.position.x + 400,\n                    y: clonedNode.position.y\n                },\n                positionAbsolute: {\n                    x: clonedNode.positionAbsolute.x + 400,\n                    y: clonedNode.positionAbsolute.y\n                },\n                data: {\n                    ...clonedNode.data,\n                    id: newNodeId\n                },\n                selected: false\n            }\n\n            const dataKeys = ['inputParams', 'inputAnchors', 'outputAnchors']\n\n            for (const key of dataKeys) {\n                for (const item of duplicatedNode.data[key]) {\n                    if (item.id) {\n                        item.id = item.id.replace(id, newNodeId)\n                    }\n                }\n            }\n\n            reactFlowInstance.setNodes([...nodes, duplicatedNode])\n        }\n    }\n\n    return (\n        <flowContext.Provider\n            value={{\n                reactFlowInstance,\n                setReactFlowInstance,\n                deleteNode,\n                deleteEdge,\n                duplicateNode\n            }}\n        >\n            {children}\n        </flowContext.Provider>\n    )\n}\n\nReactFlowContext.propTypes = {\n    children: PropTypes.any\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}