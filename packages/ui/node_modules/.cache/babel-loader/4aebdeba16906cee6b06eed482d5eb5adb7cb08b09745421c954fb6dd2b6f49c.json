{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _defineProperty from \"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _handleDirections, _MarkerSymbols, _oppositePosition;\nvar _excluded = [\"position\", \"children\", \"className\", \"style\"],\n  _excluded2 = [\"x\", \"y\", \"label\", \"labelStyle\", \"labelShowBg\", \"labelBgStyle\", \"labelBgPadding\", \"labelBgBorderRadius\", \"children\", \"className\"],\n  _excluded3 = [\"id\"],\n  _excluded4 = [\"type\", \"position\", \"isValidConnection\", \"isConnectable\", \"isConnectableStart\", \"isConnectableEnd\", \"id\", \"onConnect\", \"children\", \"className\", \"onMouseDown\", \"onTouchStart\"],\n  _excluded5 = [\"nodes\", \"edges\", \"defaultNodes\", \"defaultEdges\", \"className\", \"nodeTypes\", \"edgeTypes\", \"onNodeClick\", \"onEdgeClick\", \"onInit\", \"onMove\", \"onMoveStart\", \"onMoveEnd\", \"onConnect\", \"onConnectStart\", \"onConnectEnd\", \"onClickConnectStart\", \"onClickConnectEnd\", \"onNodeMouseEnter\", \"onNodeMouseMove\", \"onNodeMouseLeave\", \"onNodeContextMenu\", \"onNodeDoubleClick\", \"onNodeDragStart\", \"onNodeDrag\", \"onNodeDragStop\", \"onNodesDelete\", \"onEdgesDelete\", \"onSelectionChange\", \"onSelectionDragStart\", \"onSelectionDrag\", \"onSelectionDragStop\", \"onSelectionContextMenu\", \"onSelectionStart\", \"onSelectionEnd\", \"connectionMode\", \"connectionLineType\", \"connectionLineStyle\", \"connectionLineComponent\", \"connectionLineContainerStyle\", \"deleteKeyCode\", \"selectionKeyCode\", \"selectionOnDrag\", \"selectionMode\", \"panActivationKeyCode\", \"multiSelectionKeyCode\", \"zoomActivationKeyCode\", \"snapToGrid\", \"snapGrid\", \"onlyRenderVisibleElements\", \"selectNodesOnDrag\", \"nodesDraggable\", \"nodesConnectable\", \"nodesFocusable\", \"nodeOrigin\", \"edgesFocusable\", \"edgesUpdatable\", \"elementsSelectable\", \"defaultViewport\", \"minZoom\", \"maxZoom\", \"translateExtent\", \"preventScrolling\", \"nodeExtent\", \"defaultMarkerColor\", \"zoomOnScroll\", \"zoomOnPinch\", \"panOnScroll\", \"panOnScrollSpeed\", \"panOnScrollMode\", \"zoomOnDoubleClick\", \"panOnDrag\", \"onPaneClick\", \"onPaneMouseEnter\", \"onPaneMouseMove\", \"onPaneMouseLeave\", \"onPaneScroll\", \"onPaneContextMenu\", \"children\", \"onEdgeUpdate\", \"onEdgeContextMenu\", \"onEdgeDoubleClick\", \"onEdgeMouseEnter\", \"onEdgeMouseMove\", \"onEdgeMouseLeave\", \"onEdgeUpdateStart\", \"onEdgeUpdateEnd\", \"edgeUpdaterRadius\", \"onNodesChange\", \"onEdgesChange\", \"noDragClassName\", \"noWheelClassName\", \"noPanClassName\", \"fitView\", \"fitViewOptions\", \"connectOnClick\", \"attributionPosition\", \"proOptions\", \"defaultEdgeOptions\", \"elevateNodesOnSelect\", \"elevateEdgesOnSelect\", \"disableKeyboardA11y\", \"autoPanOnConnect\", \"autoPanOnNodeDrag\", \"connectionRadius\", \"isValidConnection\", \"onError\", \"style\", \"id\"];\nimport { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { createContext, useContext, useMemo, memo, useRef, useState, useEffect, forwardRef, useCallback } from 'react';\nimport cc from 'classcat';\nimport { useStore as useStore$1, createStore } from 'zustand';\nimport { shallow } from 'zustand/shallow';\nimport { drag } from 'd3-drag';\nimport { select, pointer } from 'd3-selection';\nimport { zoomIdentity, zoom } from 'd3-zoom';\nimport { createPortal } from 'react-dom';\nvar StoreContext = createContext(null);\nvar Provider$1 = StoreContext.Provider;\nvar errorMessages = {\n  error001: function error001() {\n    return '[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001';\n  },\n  error002: function error002() {\n    return \"It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.\";\n  },\n  error003: function error003(nodeType) {\n    return \"Node type \\\"\".concat(nodeType, \"\\\" not found. Using fallback type \\\"default\\\".\");\n  },\n  error004: function error004() {\n    return 'The React Flow parent container needs a width and a height to render the graph.';\n  },\n  error005: function error005() {\n    return 'Only child nodes can use a parent extent.';\n  },\n  error006: function error006() {\n    return \"Can't create edge. An edge needs a source and a target.\";\n  },\n  error007: function error007(id) {\n    return \"The old edge with id=\".concat(id, \" does not exist.\");\n  },\n  error009: function error009(type) {\n    return \"Marker type \\\"\".concat(type, \"\\\" doesn't exist.\");\n  },\n  error008: function error008(sourceHandle, edge) {\n    return \"Couldn't create edge for \".concat(!sourceHandle ? 'source' : 'target', \" handle id: \\\"\").concat(!sourceHandle ? edge.sourceHandle : edge.targetHandle, \"\\\", edge id: \").concat(edge.id, \".\");\n  },\n  error010: function error010() {\n    return 'Handle: No node id found. Make sure to only use a Handle inside a custom Node.';\n  },\n  error011: function error011(edgeType) {\n    return \"Edge type \\\"\".concat(edgeType, \"\\\" not found. Using fallback type \\\"default\\\".\");\n  }\n};\nvar zustandErrorMessage = errorMessages['error001']();\nfunction useStore(selector, equalityFn) {\n  var store = useContext(StoreContext);\n  if (store === null) {\n    throw new Error(zustandErrorMessage);\n  }\n  return useStore$1(store, selector, equalityFn);\n}\nvar useStoreApi = function useStoreApi() {\n  var store = useContext(StoreContext);\n  if (store === null) {\n    throw new Error(zustandErrorMessage);\n  }\n  return useMemo(function () {\n    return {\n      getState: store.getState,\n      setState: store.setState,\n      subscribe: store.subscribe,\n      destroy: store.destroy\n    };\n  }, [store]);\n};\nvar selector$g = function selector$g(s) {\n  return s.userSelectionActive ? 'none' : 'all';\n};\nfunction Panel(_ref) {\n  var position = _ref.position,\n    children = _ref.children,\n    className = _ref.className,\n    style = _ref.style,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var pointerEvents = useStore(selector$g);\n  var positionClasses = \"\".concat(position).split('-');\n  return jsx(\"div\", _objectSpread(_objectSpread({\n    className: cc(['react-flow__panel', className].concat(_toConsumableArray(positionClasses))),\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      pointerEvents: pointerEvents\n    })\n  }, rest), {}, {\n    children: children\n  }));\n}\nfunction Attribution(_ref2) {\n  var proOptions = _ref2.proOptions,\n    _ref2$position = _ref2.position,\n    position = _ref2$position === void 0 ? 'bottom-right' : _ref2$position;\n  if (proOptions !== null && proOptions !== void 0 && proOptions.hideAttribution) {\n    return null;\n  }\n  return jsx(Panel, {\n    position: position,\n    className: \"react-flow__attribution\",\n    \"data-message\": \"Please only hide this attribution when you are subscribed to React Flow Pro: https://pro.reactflow.dev\",\n    children: jsx(\"a\", {\n      href: \"https://reactflow.dev\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      \"aria-label\": \"React Flow attribution\",\n      children: \"React Flow\"\n    })\n  });\n}\nvar EdgeText = function EdgeText(_ref3) {\n  var x = _ref3.x,\n    y = _ref3.y,\n    label = _ref3.label,\n    _ref3$labelStyle = _ref3.labelStyle,\n    labelStyle = _ref3$labelStyle === void 0 ? {} : _ref3$labelStyle,\n    _ref3$labelShowBg = _ref3.labelShowBg,\n    labelShowBg = _ref3$labelShowBg === void 0 ? true : _ref3$labelShowBg,\n    _ref3$labelBgStyle = _ref3.labelBgStyle,\n    labelBgStyle = _ref3$labelBgStyle === void 0 ? {} : _ref3$labelBgStyle,\n    _ref3$labelBgPadding = _ref3.labelBgPadding,\n    labelBgPadding = _ref3$labelBgPadding === void 0 ? [2, 4] : _ref3$labelBgPadding,\n    _ref3$labelBgBorderRa = _ref3.labelBgBorderRadius,\n    labelBgBorderRadius = _ref3$labelBgBorderRa === void 0 ? 2 : _ref3$labelBgBorderRa,\n    children = _ref3.children,\n    className = _ref3.className,\n    rest = _objectWithoutProperties(_ref3, _excluded2);\n  var edgeRef = useRef(null);\n  var _useState = useState({\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    edgeTextBbox = _useState2[0],\n    setEdgeTextBbox = _useState2[1];\n  var edgeTextClasses = cc(['react-flow__edge-textwrapper', className]);\n  useEffect(function () {\n    if (edgeRef.current) {\n      var textBbox = edgeRef.current.getBBox();\n      setEdgeTextBbox({\n        x: textBbox.x,\n        y: textBbox.y,\n        width: textBbox.width,\n        height: textBbox.height\n      });\n    }\n  }, [label]);\n  if (typeof label === 'undefined' || !label) {\n    return null;\n  }\n  return jsxs(\"g\", _objectSpread(_objectSpread({\n    transform: \"translate(\".concat(x - edgeTextBbox.width / 2, \" \").concat(y - edgeTextBbox.height / 2, \")\"),\n    className: edgeTextClasses,\n    visibility: edgeTextBbox.width ? 'visible' : 'hidden'\n  }, rest), {}, {\n    children: [labelShowBg && jsx(\"rect\", {\n      width: edgeTextBbox.width + 2 * labelBgPadding[0],\n      x: -labelBgPadding[0],\n      y: -labelBgPadding[1],\n      height: edgeTextBbox.height + 2 * labelBgPadding[1],\n      className: \"react-flow__edge-textbg\",\n      style: labelBgStyle,\n      rx: labelBgBorderRadius,\n      ry: labelBgBorderRadius\n    }), jsx(\"text\", {\n      className: \"react-flow__edge-text\",\n      y: edgeTextBbox.height / 2,\n      dy: \"0.3em\",\n      ref: edgeRef,\n      style: labelStyle,\n      children: label\n    }), children]\n  }));\n};\nvar EdgeText$1 = memo(EdgeText);\nvar getDimensions = function getDimensions(node) {\n  return {\n    width: node.offsetWidth,\n    height: node.offsetHeight\n  };\n};\nvar clamp = function clamp(val) {\n  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  return Math.min(Math.max(val, min), max);\n};\nvar clampPosition = function clampPosition() {\n  var position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    x: 0,\n    y: 0\n  };\n  var extent = arguments.length > 1 ? arguments[1] : undefined;\n  return {\n    x: clamp(position.x, extent[0][0], extent[1][0]),\n    y: clamp(position.y, extent[0][1], extent[1][1])\n  };\n};\n// returns a number between 0 and 1 that represents the velocity of the movement\n// when the mouse is close to the edge of the canvas\nvar calcAutoPanVelocity = function calcAutoPanVelocity(value, min, max) {\n  if (value < min) {\n    return clamp(Math.abs(value - min), 1, 50) / 50;\n  } else if (value > max) {\n    return -clamp(Math.abs(value - max), 1, 50) / 50;\n  }\n  return 0;\n};\nvar calcAutoPan = function calcAutoPan(pos, bounds) {\n  var xMovement = calcAutoPanVelocity(pos.x, 35, bounds.width - 35) * 20;\n  var yMovement = calcAutoPanVelocity(pos.y, 35, bounds.height - 35) * 20;\n  return [xMovement, yMovement];\n};\nvar getHostForElement = function getHostForElement(element) {\n  var _element$getRootNode, _window;\n  return ((_element$getRootNode = element.getRootNode) === null || _element$getRootNode === void 0 ? void 0 : _element$getRootNode.call(element)) || ((_window = window) === null || _window === void 0 ? void 0 : _window.document);\n};\nvar getBoundsOfBoxes = function getBoundsOfBoxes(box1, box2) {\n  return {\n    x: Math.min(box1.x, box2.x),\n    y: Math.min(box1.y, box2.y),\n    x2: Math.max(box1.x2, box2.x2),\n    y2: Math.max(box1.y2, box2.y2)\n  };\n};\nvar rectToBox = function rectToBox(_ref4) {\n  var x = _ref4.x,\n    y = _ref4.y,\n    width = _ref4.width,\n    height = _ref4.height;\n  return {\n    x: x,\n    y: y,\n    x2: x + width,\n    y2: y + height\n  };\n};\nvar boxToRect = function boxToRect(_ref5) {\n  var x = _ref5.x,\n    y = _ref5.y,\n    x2 = _ref5.x2,\n    y2 = _ref5.y2;\n  return {\n    x: x,\n    y: y,\n    width: x2 - x,\n    height: y2 - y\n  };\n};\nvar nodeToRect = function nodeToRect(node) {\n  return _objectSpread(_objectSpread({}, node.positionAbsolute || {\n    x: 0,\n    y: 0\n  }), {}, {\n    width: node.width || 0,\n    height: node.height || 0\n  });\n};\nvar getBoundsOfRects = function getBoundsOfRects(rect1, rect2) {\n  return boxToRect(getBoundsOfBoxes(rectToBox(rect1), rectToBox(rect2)));\n};\nvar getOverlappingArea = function getOverlappingArea(rectA, rectB) {\n  var xOverlap = Math.max(0, Math.min(rectA.x + rectA.width, rectB.x + rectB.width) - Math.max(rectA.x, rectB.x));\n  var yOverlap = Math.max(0, Math.min(rectA.y + rectA.height, rectB.y + rectB.height) - Math.max(rectA.y, rectB.y));\n  return Math.ceil(xOverlap * yOverlap);\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar isRectObject = function isRectObject(obj) {\n  return isNumeric(obj.width) && isNumeric(obj.height) && isNumeric(obj.x) && isNumeric(obj.y);\n};\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nvar isNumeric = function isNumeric(n) {\n  return !isNaN(n) && isFinite(n);\n};\nvar internalsSymbol = Symbol.for('internals');\n// used for a11y key board controls for nodes and edges\nvar elementSelectionKeys = ['Enter', ' ', 'Escape'];\nvar devWarn = function devWarn(id, message) {\n  if (process.env.NODE_ENV === 'development') {\n    console.warn(\"[React Flow]: \".concat(message, \" Help: https://reactflow.dev/error#\").concat(id));\n  }\n};\nvar isReactKeyboardEvent = function isReactKeyboardEvent(event) {\n  return 'nativeEvent' in event;\n};\nfunction isInputDOMNode(event) {\n  var _kbEvent$composedPath;\n  var kbEvent = isReactKeyboardEvent(event) ? event.nativeEvent : event;\n  // using composed path for handling shadow dom\n  var target = ((_kbEvent$composedPath = kbEvent.composedPath) === null || _kbEvent$composedPath === void 0 || (_kbEvent$composedPath = _kbEvent$composedPath.call(kbEvent)) === null || _kbEvent$composedPath === void 0 ? void 0 : _kbEvent$composedPath[0]) || event.target;\n  var isInput = ['INPUT', 'SELECT', 'TEXTAREA'].includes(target === null || target === void 0 ? void 0 : target.nodeName) || (target === null || target === void 0 ? void 0 : target.hasAttribute('contenteditable'));\n  // when an input field is focused we don't want to trigger deletion or movement of nodes\n  return isInput || !!(target !== null && target !== void 0 && target.closest('.nokey'));\n}\nvar isMouseEvent = function isMouseEvent(event) {\n  return 'clientX' in event;\n};\nvar getEventPosition = function getEventPosition(event, bounds) {\n  var _event$touches, _event$touches2, _bounds$left, _bounds$top;\n  var isMouseTriggered = isMouseEvent(event);\n  var evtX = isMouseTriggered ? event.clientX : (_event$touches = event.touches) === null || _event$touches === void 0 ? void 0 : _event$touches[0].clientX;\n  var evtY = isMouseTriggered ? event.clientY : (_event$touches2 = event.touches) === null || _event$touches2 === void 0 ? void 0 : _event$touches2[0].clientY;\n  return {\n    x: evtX - ((_bounds$left = bounds === null || bounds === void 0 ? void 0 : bounds.left) !== null && _bounds$left !== void 0 ? _bounds$left : 0),\n    y: evtY - ((_bounds$top = bounds === null || bounds === void 0 ? void 0 : bounds.top) !== null && _bounds$top !== void 0 ? _bounds$top : 0)\n  };\n};\nvar BaseEdge = function BaseEdge(_ref6) {\n  var id = _ref6.id,\n    path = _ref6.path,\n    labelX = _ref6.labelX,\n    labelY = _ref6.labelY,\n    label = _ref6.label,\n    labelStyle = _ref6.labelStyle,\n    labelShowBg = _ref6.labelShowBg,\n    labelBgStyle = _ref6.labelBgStyle,\n    labelBgPadding = _ref6.labelBgPadding,\n    labelBgBorderRadius = _ref6.labelBgBorderRadius,\n    style = _ref6.style,\n    markerEnd = _ref6.markerEnd,\n    markerStart = _ref6.markerStart,\n    _ref6$interactionWidt = _ref6.interactionWidth,\n    interactionWidth = _ref6$interactionWidt === void 0 ? 20 : _ref6$interactionWidt;\n  return jsxs(Fragment, {\n    children: [jsx(\"path\", {\n      id: id,\n      style: style,\n      d: path,\n      fill: \"none\",\n      className: \"react-flow__edge-path\",\n      markerEnd: markerEnd,\n      markerStart: markerStart\n    }), interactionWidth && jsx(\"path\", {\n      d: path,\n      fill: \"none\",\n      strokeOpacity: 0,\n      strokeWidth: interactionWidth,\n      className: \"react-flow__edge-interaction\"\n    }), label && isNumeric(labelX) && isNumeric(labelY) ? jsx(EdgeText$1, {\n      x: labelX,\n      y: labelY,\n      label: label,\n      labelStyle: labelStyle,\n      labelShowBg: labelShowBg,\n      labelBgStyle: labelBgStyle,\n      labelBgPadding: labelBgPadding,\n      labelBgBorderRadius: labelBgBorderRadius\n    }) : null]\n  });\n};\nBaseEdge.displayName = 'BaseEdge';\nvar getMarkerEnd = function getMarkerEnd(markerType, markerEndId) {\n  if (typeof markerEndId !== 'undefined' && markerEndId) {\n    return \"url(#\".concat(markerEndId, \")\");\n  }\n  return typeof markerType !== 'undefined' ? \"url(#react-flow__\".concat(markerType, \")\") : 'none';\n};\nfunction getMouseHandler$1(id, getState, handler) {\n  return handler === undefined ? handler : function (event) {\n    var edge = getState().edges.find(function (e) {\n      return e.id === id;\n    });\n    if (edge) {\n      handler(event, _objectSpread({}, edge));\n    }\n  };\n}\n// this is used for straight edges and simple smoothstep edges (LTR, RTL, BTT, TTB)\nfunction getEdgeCenter(_ref7) {\n  var sourceX = _ref7.sourceX,\n    sourceY = _ref7.sourceY,\n    targetX = _ref7.targetX,\n    targetY = _ref7.targetY;\n  var xOffset = Math.abs(targetX - sourceX) / 2;\n  var centerX = targetX < sourceX ? targetX + xOffset : targetX - xOffset;\n  var yOffset = Math.abs(targetY - sourceY) / 2;\n  var centerY = targetY < sourceY ? targetY + yOffset : targetY - yOffset;\n  return [centerX, centerY, xOffset, yOffset];\n}\nfunction getBezierEdgeCenter(_ref8) {\n  var sourceX = _ref8.sourceX,\n    sourceY = _ref8.sourceY,\n    targetX = _ref8.targetX,\n    targetY = _ref8.targetY,\n    sourceControlX = _ref8.sourceControlX,\n    sourceControlY = _ref8.sourceControlY,\n    targetControlX = _ref8.targetControlX,\n    targetControlY = _ref8.targetControlY;\n  // cubic bezier t=0.5 mid point, not the actual mid point, but easy to calculate\n  // https://stackoverflow.com/questions/67516101/how-to-find-distance-mid-point-of-bezier-curve\n  var centerX = sourceX * 0.125 + sourceControlX * 0.375 + targetControlX * 0.375 + targetX * 0.125;\n  var centerY = sourceY * 0.125 + sourceControlY * 0.375 + targetControlY * 0.375 + targetY * 0.125;\n  var offsetX = Math.abs(centerX - sourceX);\n  var offsetY = Math.abs(centerY - sourceY);\n  return [centerX, centerY, offsetX, offsetY];\n}\nvar ConnectionMode;\n(function (ConnectionMode) {\n  ConnectionMode[\"Strict\"] = \"strict\";\n  ConnectionMode[\"Loose\"] = \"loose\";\n})(ConnectionMode || (ConnectionMode = {}));\nvar PanOnScrollMode;\n(function (PanOnScrollMode) {\n  PanOnScrollMode[\"Free\"] = \"free\";\n  PanOnScrollMode[\"Vertical\"] = \"vertical\";\n  PanOnScrollMode[\"Horizontal\"] = \"horizontal\";\n})(PanOnScrollMode || (PanOnScrollMode = {}));\nvar SelectionMode;\n(function (SelectionMode) {\n  SelectionMode[\"Partial\"] = \"partial\";\n  SelectionMode[\"Full\"] = \"full\";\n})(SelectionMode || (SelectionMode = {}));\nvar ConnectionLineType;\n(function (ConnectionLineType) {\n  ConnectionLineType[\"Bezier\"] = \"default\";\n  ConnectionLineType[\"Straight\"] = \"straight\";\n  ConnectionLineType[\"Step\"] = \"step\";\n  ConnectionLineType[\"SmoothStep\"] = \"smoothstep\";\n  ConnectionLineType[\"SimpleBezier\"] = \"simplebezier\";\n})(ConnectionLineType || (ConnectionLineType = {}));\nvar MarkerType;\n(function (MarkerType) {\n  MarkerType[\"Arrow\"] = \"arrow\";\n  MarkerType[\"ArrowClosed\"] = \"arrowclosed\";\n})(MarkerType || (MarkerType = {}));\nvar Position;\n(function (Position) {\n  Position[\"Left\"] = \"left\";\n  Position[\"Top\"] = \"top\";\n  Position[\"Right\"] = \"right\";\n  Position[\"Bottom\"] = \"bottom\";\n})(Position || (Position = {}));\nfunction getControl(_ref9) {\n  var pos = _ref9.pos,\n    x1 = _ref9.x1,\n    y1 = _ref9.y1,\n    x2 = _ref9.x2,\n    y2 = _ref9.y2;\n  if (pos === Position.Left || pos === Position.Right) {\n    return [0.5 * (x1 + x2), y1];\n  }\n  return [x1, 0.5 * (y1 + y2)];\n}\nfunction getSimpleBezierPath(_ref10) {\n  var sourceX = _ref10.sourceX,\n    sourceY = _ref10.sourceY,\n    _ref10$sourcePosition = _ref10.sourcePosition,\n    sourcePosition = _ref10$sourcePosition === void 0 ? Position.Bottom : _ref10$sourcePosition,\n    targetX = _ref10.targetX,\n    targetY = _ref10.targetY,\n    _ref10$targetPosition = _ref10.targetPosition,\n    targetPosition = _ref10$targetPosition === void 0 ? Position.Top : _ref10$targetPosition;\n  var _getControl = getControl({\n      pos: sourcePosition,\n      x1: sourceX,\n      y1: sourceY,\n      x2: targetX,\n      y2: targetY\n    }),\n    _getControl2 = _slicedToArray(_getControl, 2),\n    sourceControlX = _getControl2[0],\n    sourceControlY = _getControl2[1];\n  var _getControl3 = getControl({\n      pos: targetPosition,\n      x1: targetX,\n      y1: targetY,\n      x2: sourceX,\n      y2: sourceY\n    }),\n    _getControl4 = _slicedToArray(_getControl3, 2),\n    targetControlX = _getControl4[0],\n    targetControlY = _getControl4[1];\n  var _getBezierEdgeCenter = getBezierEdgeCenter({\n      sourceX: sourceX,\n      sourceY: sourceY,\n      targetX: targetX,\n      targetY: targetY,\n      sourceControlX: sourceControlX,\n      sourceControlY: sourceControlY,\n      targetControlX: targetControlX,\n      targetControlY: targetControlY\n    }),\n    _getBezierEdgeCenter2 = _slicedToArray(_getBezierEdgeCenter, 4),\n    labelX = _getBezierEdgeCenter2[0],\n    labelY = _getBezierEdgeCenter2[1],\n    offsetX = _getBezierEdgeCenter2[2],\n    offsetY = _getBezierEdgeCenter2[3];\n  return [\"M\".concat(sourceX, \",\").concat(sourceY, \" C\").concat(sourceControlX, \",\").concat(sourceControlY, \" \").concat(targetControlX, \",\").concat(targetControlY, \" \").concat(targetX, \",\").concat(targetY), labelX, labelY, offsetX, offsetY];\n}\nvar SimpleBezierEdge = memo(function (_ref11) {\n  var sourceX = _ref11.sourceX,\n    sourceY = _ref11.sourceY,\n    targetX = _ref11.targetX,\n    targetY = _ref11.targetY,\n    _ref11$sourcePosition = _ref11.sourcePosition,\n    sourcePosition = _ref11$sourcePosition === void 0 ? Position.Bottom : _ref11$sourcePosition,\n    _ref11$targetPosition = _ref11.targetPosition,\n    targetPosition = _ref11$targetPosition === void 0 ? Position.Top : _ref11$targetPosition,\n    label = _ref11.label,\n    labelStyle = _ref11.labelStyle,\n    labelShowBg = _ref11.labelShowBg,\n    labelBgStyle = _ref11.labelBgStyle,\n    labelBgPadding = _ref11.labelBgPadding,\n    labelBgBorderRadius = _ref11.labelBgBorderRadius,\n    style = _ref11.style,\n    markerEnd = _ref11.markerEnd,\n    markerStart = _ref11.markerStart,\n    interactionWidth = _ref11.interactionWidth;\n  var _getSimpleBezierPath = getSimpleBezierPath({\n      sourceX: sourceX,\n      sourceY: sourceY,\n      sourcePosition: sourcePosition,\n      targetX: targetX,\n      targetY: targetY,\n      targetPosition: targetPosition\n    }),\n    _getSimpleBezierPath2 = _slicedToArray(_getSimpleBezierPath, 3),\n    path = _getSimpleBezierPath2[0],\n    labelX = _getSimpleBezierPath2[1],\n    labelY = _getSimpleBezierPath2[2];\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nSimpleBezierEdge.displayName = 'SimpleBezierEdge';\nvar handleDirections = (_handleDirections = {}, _defineProperty(_handleDirections, Position.Left, {\n  x: -1,\n  y: 0\n}), _defineProperty(_handleDirections, Position.Right, {\n  x: 1,\n  y: 0\n}), _defineProperty(_handleDirections, Position.Top, {\n  x: 0,\n  y: -1\n}), _defineProperty(_handleDirections, Position.Bottom, {\n  x: 0,\n  y: 1\n}), _handleDirections);\nvar getDirection = function getDirection(_ref12) {\n  var source = _ref12.source,\n    _ref12$sourcePosition = _ref12.sourcePosition,\n    sourcePosition = _ref12$sourcePosition === void 0 ? Position.Bottom : _ref12$sourcePosition,\n    target = _ref12.target;\n  if (sourcePosition === Position.Left || sourcePosition === Position.Right) {\n    return source.x < target.x ? {\n      x: 1,\n      y: 0\n    } : {\n      x: -1,\n      y: 0\n    };\n  }\n  return source.y < target.y ? {\n    x: 0,\n    y: 1\n  } : {\n    x: 0,\n    y: -1\n  };\n};\nvar distance = function distance(a, b) {\n  return Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n};\n// ith this function we try to mimic a orthogonal edge routing behaviour\n// It's not as good as a real orthogonal edge routing but it's faster and good enough as a default for step and smooth step edges\nfunction getPoints(_ref13) {\n  var source = _ref13.source,\n    _ref13$sourcePosition = _ref13.sourcePosition,\n    sourcePosition = _ref13$sourcePosition === void 0 ? Position.Bottom : _ref13$sourcePosition,\n    target = _ref13.target,\n    _ref13$targetPosition = _ref13.targetPosition,\n    targetPosition = _ref13$targetPosition === void 0 ? Position.Top : _ref13$targetPosition,\n    center = _ref13.center,\n    offset = _ref13.offset;\n  var sourceDir = handleDirections[sourcePosition];\n  var targetDir = handleDirections[targetPosition];\n  var sourceGapped = {\n    x: source.x + sourceDir.x * offset,\n    y: source.y + sourceDir.y * offset\n  };\n  var targetGapped = {\n    x: target.x + targetDir.x * offset,\n    y: target.y + targetDir.y * offset\n  };\n  var dir = getDirection({\n    source: sourceGapped,\n    sourcePosition: sourcePosition,\n    target: targetGapped\n  });\n  var dirAccessor = dir.x !== 0 ? 'x' : 'y';\n  var currDir = dir[dirAccessor];\n  var points = [];\n  var centerX, centerY;\n  var _getEdgeCenter = getEdgeCenter({\n      sourceX: source.x,\n      sourceY: source.y,\n      targetX: target.x,\n      targetY: target.y\n    }),\n    _getEdgeCenter2 = _slicedToArray(_getEdgeCenter, 4),\n    defaultCenterX = _getEdgeCenter2[0],\n    defaultCenterY = _getEdgeCenter2[1],\n    defaultOffsetX = _getEdgeCenter2[2],\n    defaultOffsetY = _getEdgeCenter2[3];\n  // opposite handle positions, default case\n  if (sourceDir[dirAccessor] * targetDir[dirAccessor] === -1) {\n    centerX = center.x || defaultCenterX;\n    centerY = center.y || defaultCenterY;\n    //    --->\n    //    |\n    // >---\n    var verticalSplit = [{\n      x: centerX,\n      y: sourceGapped.y\n    }, {\n      x: centerX,\n      y: targetGapped.y\n    }];\n    //    |\n    //  ---\n    //  |\n    var horizontalSplit = [{\n      x: sourceGapped.x,\n      y: centerY\n    }, {\n      x: targetGapped.x,\n      y: centerY\n    }];\n    if (sourceDir[dirAccessor] === currDir) {\n      points = dirAccessor === 'x' ? verticalSplit : horizontalSplit;\n    } else {\n      points = dirAccessor === 'x' ? horizontalSplit : verticalSplit;\n    }\n  } else {\n    // sourceTarget means we take x from source and y from target, targetSource is the opposite\n    var sourceTarget = [{\n      x: sourceGapped.x,\n      y: targetGapped.y\n    }];\n    var targetSource = [{\n      x: targetGapped.x,\n      y: sourceGapped.y\n    }];\n    // this handles edges with same handle positions\n    if (dirAccessor === 'x') {\n      points = sourceDir.x === currDir ? targetSource : sourceTarget;\n    } else {\n      points = sourceDir.y === currDir ? sourceTarget : targetSource;\n    }\n    // these are conditions for handling mixed handle positions like Right -> Bottom for example\n    if (sourcePosition !== targetPosition) {\n      var dirAccessorOpposite = dirAccessor === 'x' ? 'y' : 'x';\n      var isSameDir = sourceDir[dirAccessor] === targetDir[dirAccessorOpposite];\n      var sourceGtTargetOppo = sourceGapped[dirAccessorOpposite] > targetGapped[dirAccessorOpposite];\n      var sourceLtTargetOppo = sourceGapped[dirAccessorOpposite] < targetGapped[dirAccessorOpposite];\n      var flipSourceTarget = sourceDir[dirAccessor] === 1 && (!isSameDir && sourceGtTargetOppo || isSameDir && sourceLtTargetOppo) || sourceDir[dirAccessor] !== 1 && (!isSameDir && sourceLtTargetOppo || isSameDir && sourceGtTargetOppo);\n      if (flipSourceTarget) {\n        points = dirAccessor === 'x' ? sourceTarget : targetSource;\n      }\n    }\n    centerX = points[0].x;\n    centerY = points[0].y;\n  }\n  var pathPoints = [source, sourceGapped].concat(_toConsumableArray(points), [targetGapped, target]);\n  return [pathPoints, centerX, centerY, defaultOffsetX, defaultOffsetY];\n}\nfunction getBend(a, b, c, size) {\n  var bendSize = Math.min(distance(a, b) / 2, distance(b, c) / 2, size);\n  var x = b.x,\n    y = b.y;\n  // no bend\n  if (a.x === x && x === c.x || a.y === y && y === c.y) {\n    return \"L\".concat(x, \" \").concat(y);\n  }\n  // first segment is horizontal\n  if (a.y === y) {\n    var _xDir = a.x < c.x ? -1 : 1;\n    var _yDir = a.y < c.y ? 1 : -1;\n    return \"L \".concat(x + bendSize * _xDir, \",\").concat(y, \"Q \").concat(x, \",\").concat(y, \" \").concat(x, \",\").concat(y + bendSize * _yDir);\n  }\n  var xDir = a.x < c.x ? 1 : -1;\n  var yDir = a.y < c.y ? -1 : 1;\n  return \"L \".concat(x, \",\").concat(y + bendSize * yDir, \"Q \").concat(x, \",\").concat(y, \" \").concat(x + bendSize * xDir, \",\").concat(y);\n}\nfunction getSmoothStepPath(_ref14) {\n  var sourceX = _ref14.sourceX,\n    sourceY = _ref14.sourceY,\n    _ref14$sourcePosition = _ref14.sourcePosition,\n    sourcePosition = _ref14$sourcePosition === void 0 ? Position.Bottom : _ref14$sourcePosition,\n    targetX = _ref14.targetX,\n    targetY = _ref14.targetY,\n    _ref14$targetPosition = _ref14.targetPosition,\n    targetPosition = _ref14$targetPosition === void 0 ? Position.Top : _ref14$targetPosition,\n    _ref14$borderRadius = _ref14.borderRadius,\n    borderRadius = _ref14$borderRadius === void 0 ? 5 : _ref14$borderRadius,\n    centerX = _ref14.centerX,\n    centerY = _ref14.centerY,\n    _ref14$offset = _ref14.offset,\n    offset = _ref14$offset === void 0 ? 20 : _ref14$offset;\n  var _getPoints = getPoints({\n      source: {\n        x: sourceX,\n        y: sourceY\n      },\n      sourcePosition: sourcePosition,\n      target: {\n        x: targetX,\n        y: targetY\n      },\n      targetPosition: targetPosition,\n      center: {\n        x: centerX,\n        y: centerY\n      },\n      offset: offset\n    }),\n    _getPoints2 = _slicedToArray(_getPoints, 5),\n    points = _getPoints2[0],\n    labelX = _getPoints2[1],\n    labelY = _getPoints2[2],\n    offsetX = _getPoints2[3],\n    offsetY = _getPoints2[4];\n  var path = points.reduce(function (res, p, i) {\n    var segment = '';\n    if (i > 0 && i < points.length - 1) {\n      segment = getBend(points[i - 1], p, points[i + 1], borderRadius);\n    } else {\n      segment = \"\".concat(i === 0 ? 'M' : 'L').concat(p.x, \" \").concat(p.y);\n    }\n    res += segment;\n    return res;\n  }, '');\n  return [path, labelX, labelY, offsetX, offsetY];\n}\nvar SmoothStepEdge = memo(function (_ref15) {\n  var sourceX = _ref15.sourceX,\n    sourceY = _ref15.sourceY,\n    targetX = _ref15.targetX,\n    targetY = _ref15.targetY,\n    label = _ref15.label,\n    labelStyle = _ref15.labelStyle,\n    labelShowBg = _ref15.labelShowBg,\n    labelBgStyle = _ref15.labelBgStyle,\n    labelBgPadding = _ref15.labelBgPadding,\n    labelBgBorderRadius = _ref15.labelBgBorderRadius,\n    style = _ref15.style,\n    _ref15$sourcePosition = _ref15.sourcePosition,\n    sourcePosition = _ref15$sourcePosition === void 0 ? Position.Bottom : _ref15$sourcePosition,\n    _ref15$targetPosition = _ref15.targetPosition,\n    targetPosition = _ref15$targetPosition === void 0 ? Position.Top : _ref15$targetPosition,\n    markerEnd = _ref15.markerEnd,\n    markerStart = _ref15.markerStart,\n    pathOptions = _ref15.pathOptions,\n    interactionWidth = _ref15.interactionWidth;\n  var _getSmoothStepPath = getSmoothStepPath({\n      sourceX: sourceX,\n      sourceY: sourceY,\n      sourcePosition: sourcePosition,\n      targetX: targetX,\n      targetY: targetY,\n      targetPosition: targetPosition,\n      borderRadius: pathOptions === null || pathOptions === void 0 ? void 0 : pathOptions.borderRadius,\n      offset: pathOptions === null || pathOptions === void 0 ? void 0 : pathOptions.offset\n    }),\n    _getSmoothStepPath2 = _slicedToArray(_getSmoothStepPath, 3),\n    path = _getSmoothStepPath2[0],\n    labelX = _getSmoothStepPath2[1],\n    labelY = _getSmoothStepPath2[2];\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nSmoothStepEdge.displayName = 'SmoothStepEdge';\nvar StepEdge = memo(function (props) {\n  var _props$pathOptions2;\n  return jsx(SmoothStepEdge, _objectSpread(_objectSpread({}, props), {}, {\n    pathOptions: useMemo(function () {\n      var _props$pathOptions;\n      return {\n        borderRadius: 0,\n        offset: (_props$pathOptions = props.pathOptions) === null || _props$pathOptions === void 0 ? void 0 : _props$pathOptions.offset\n      };\n    }, [(_props$pathOptions2 = props.pathOptions) === null || _props$pathOptions2 === void 0 ? void 0 : _props$pathOptions2.offset])\n  }));\n});\nStepEdge.displayName = 'StepEdge';\nfunction getStraightPath(_ref16) {\n  var sourceX = _ref16.sourceX,\n    sourceY = _ref16.sourceY,\n    targetX = _ref16.targetX,\n    targetY = _ref16.targetY;\n  var _getEdgeCenter3 = getEdgeCenter({\n      sourceX: sourceX,\n      sourceY: sourceY,\n      targetX: targetX,\n      targetY: targetY\n    }),\n    _getEdgeCenter4 = _slicedToArray(_getEdgeCenter3, 4),\n    labelX = _getEdgeCenter4[0],\n    labelY = _getEdgeCenter4[1],\n    offsetX = _getEdgeCenter4[2],\n    offsetY = _getEdgeCenter4[3];\n  return [\"M \".concat(sourceX, \",\").concat(sourceY, \"L \").concat(targetX, \",\").concat(targetY), labelX, labelY, offsetX, offsetY];\n}\nvar StraightEdge = memo(function (_ref17) {\n  var sourceX = _ref17.sourceX,\n    sourceY = _ref17.sourceY,\n    targetX = _ref17.targetX,\n    targetY = _ref17.targetY,\n    label = _ref17.label,\n    labelStyle = _ref17.labelStyle,\n    labelShowBg = _ref17.labelShowBg,\n    labelBgStyle = _ref17.labelBgStyle,\n    labelBgPadding = _ref17.labelBgPadding,\n    labelBgBorderRadius = _ref17.labelBgBorderRadius,\n    style = _ref17.style,\n    markerEnd = _ref17.markerEnd,\n    markerStart = _ref17.markerStart,\n    interactionWidth = _ref17.interactionWidth;\n  var _getStraightPath = getStraightPath({\n      sourceX: sourceX,\n      sourceY: sourceY,\n      targetX: targetX,\n      targetY: targetY\n    }),\n    _getStraightPath2 = _slicedToArray(_getStraightPath, 3),\n    path = _getStraightPath2[0],\n    labelX = _getStraightPath2[1],\n    labelY = _getStraightPath2[2];\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nStraightEdge.displayName = 'StraightEdge';\nfunction calculateControlOffset(distance, curvature) {\n  if (distance >= 0) {\n    return 0.5 * distance;\n  }\n  return curvature * 25 * Math.sqrt(-distance);\n}\nfunction getControlWithCurvature(_ref18) {\n  var pos = _ref18.pos,\n    x1 = _ref18.x1,\n    y1 = _ref18.y1,\n    x2 = _ref18.x2,\n    y2 = _ref18.y2,\n    c = _ref18.c;\n  switch (pos) {\n    case Position.Left:\n      return [x1 - calculateControlOffset(x1 - x2, c), y1];\n    case Position.Right:\n      return [x1 + calculateControlOffset(x2 - x1, c), y1];\n    case Position.Top:\n      return [x1, y1 - calculateControlOffset(y1 - y2, c)];\n    case Position.Bottom:\n      return [x1, y1 + calculateControlOffset(y2 - y1, c)];\n  }\n}\nfunction getBezierPath(_ref19) {\n  var sourceX = _ref19.sourceX,\n    sourceY = _ref19.sourceY,\n    _ref19$sourcePosition = _ref19.sourcePosition,\n    sourcePosition = _ref19$sourcePosition === void 0 ? Position.Bottom : _ref19$sourcePosition,\n    targetX = _ref19.targetX,\n    targetY = _ref19.targetY,\n    _ref19$targetPosition = _ref19.targetPosition,\n    targetPosition = _ref19$targetPosition === void 0 ? Position.Top : _ref19$targetPosition,\n    _ref19$curvature = _ref19.curvature,\n    curvature = _ref19$curvature === void 0 ? 0.25 : _ref19$curvature;\n  var _getControlWithCurvat = getControlWithCurvature({\n      pos: sourcePosition,\n      x1: sourceX,\n      y1: sourceY,\n      x2: targetX,\n      y2: targetY,\n      c: curvature\n    }),\n    _getControlWithCurvat2 = _slicedToArray(_getControlWithCurvat, 2),\n    sourceControlX = _getControlWithCurvat2[0],\n    sourceControlY = _getControlWithCurvat2[1];\n  var _getControlWithCurvat3 = getControlWithCurvature({\n      pos: targetPosition,\n      x1: targetX,\n      y1: targetY,\n      x2: sourceX,\n      y2: sourceY,\n      c: curvature\n    }),\n    _getControlWithCurvat4 = _slicedToArray(_getControlWithCurvat3, 2),\n    targetControlX = _getControlWithCurvat4[0],\n    targetControlY = _getControlWithCurvat4[1];\n  var _getBezierEdgeCenter3 = getBezierEdgeCenter({\n      sourceX: sourceX,\n      sourceY: sourceY,\n      targetX: targetX,\n      targetY: targetY,\n      sourceControlX: sourceControlX,\n      sourceControlY: sourceControlY,\n      targetControlX: targetControlX,\n      targetControlY: targetControlY\n    }),\n    _getBezierEdgeCenter4 = _slicedToArray(_getBezierEdgeCenter3, 4),\n    labelX = _getBezierEdgeCenter4[0],\n    labelY = _getBezierEdgeCenter4[1],\n    offsetX = _getBezierEdgeCenter4[2],\n    offsetY = _getBezierEdgeCenter4[3];\n  return [\"M\".concat(sourceX, \",\").concat(sourceY, \" C\").concat(sourceControlX, \",\").concat(sourceControlY, \" \").concat(targetControlX, \",\").concat(targetControlY, \" \").concat(targetX, \",\").concat(targetY), labelX, labelY, offsetX, offsetY];\n}\nvar BezierEdge = memo(function (_ref20) {\n  var sourceX = _ref20.sourceX,\n    sourceY = _ref20.sourceY,\n    targetX = _ref20.targetX,\n    targetY = _ref20.targetY,\n    _ref20$sourcePosition = _ref20.sourcePosition,\n    sourcePosition = _ref20$sourcePosition === void 0 ? Position.Bottom : _ref20$sourcePosition,\n    _ref20$targetPosition = _ref20.targetPosition,\n    targetPosition = _ref20$targetPosition === void 0 ? Position.Top : _ref20$targetPosition,\n    label = _ref20.label,\n    labelStyle = _ref20.labelStyle,\n    labelShowBg = _ref20.labelShowBg,\n    labelBgStyle = _ref20.labelBgStyle,\n    labelBgPadding = _ref20.labelBgPadding,\n    labelBgBorderRadius = _ref20.labelBgBorderRadius,\n    style = _ref20.style,\n    markerEnd = _ref20.markerEnd,\n    markerStart = _ref20.markerStart,\n    pathOptions = _ref20.pathOptions,\n    interactionWidth = _ref20.interactionWidth;\n  var _getBezierPath = getBezierPath({\n      sourceX: sourceX,\n      sourceY: sourceY,\n      sourcePosition: sourcePosition,\n      targetX: targetX,\n      targetY: targetY,\n      targetPosition: targetPosition,\n      curvature: pathOptions === null || pathOptions === void 0 ? void 0 : pathOptions.curvature\n    }),\n    _getBezierPath2 = _slicedToArray(_getBezierPath, 3),\n    path = _getBezierPath2[0],\n    labelX = _getBezierPath2[1],\n    labelY = _getBezierPath2[2];\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nBezierEdge.displayName = 'BezierEdge';\nvar NodeIdContext = createContext(null);\nvar Provider = NodeIdContext.Provider;\nNodeIdContext.Consumer;\nvar useNodeId = function useNodeId() {\n  var nodeId = useContext(NodeIdContext);\n  return nodeId;\n};\nvar isEdge = function isEdge(element) {\n  return 'id' in element && 'source' in element && 'target' in element;\n};\nvar isNode = function isNode(element) {\n  return 'id' in element && !('source' in element) && !('target' in element);\n};\nvar getOutgoers = function getOutgoers(node, nodes, edges) {\n  if (!isNode(node)) {\n    return [];\n  }\n  var outgoerIds = edges.filter(function (e) {\n    return e.source === node.id;\n  }).map(function (e) {\n    return e.target;\n  });\n  return nodes.filter(function (n) {\n    return outgoerIds.includes(n.id);\n  });\n};\nvar getIncomers = function getIncomers(node, nodes, edges) {\n  if (!isNode(node)) {\n    return [];\n  }\n  var incomersIds = edges.filter(function (e) {\n    return e.target === node.id;\n  }).map(function (e) {\n    return e.source;\n  });\n  return nodes.filter(function (n) {\n    return incomersIds.includes(n.id);\n  });\n};\nvar getEdgeId = function getEdgeId(_ref21) {\n  var source = _ref21.source,\n    sourceHandle = _ref21.sourceHandle,\n    target = _ref21.target,\n    targetHandle = _ref21.targetHandle;\n  return \"reactflow__edge-\".concat(source).concat(sourceHandle || '', \"-\").concat(target).concat(targetHandle || '');\n};\nvar getMarkerId = function getMarkerId(marker, rfId) {\n  if (typeof marker === 'undefined') {\n    return '';\n  }\n  if (typeof marker === 'string') {\n    return marker;\n  }\n  var idPrefix = rfId ? \"\".concat(rfId, \"__\") : '';\n  return \"\".concat(idPrefix).concat(Object.keys(marker).sort().map(function (key) {\n    return \"\".concat(key, \"=\").concat(marker[key]);\n  }).join('&'));\n};\nvar connectionExists = function connectionExists(edge, edges) {\n  return edges.some(function (el) {\n    return el.source === edge.source && el.target === edge.target && (el.sourceHandle === edge.sourceHandle || !el.sourceHandle && !edge.sourceHandle) && (el.targetHandle === edge.targetHandle || !el.targetHandle && !edge.targetHandle);\n  });\n};\nvar addEdge = function addEdge(edgeParams, edges) {\n  if (!edgeParams.source || !edgeParams.target) {\n    devWarn('006', errorMessages['error006']());\n    return edges;\n  }\n  var edge;\n  if (isEdge(edgeParams)) {\n    edge = _objectSpread({}, edgeParams);\n  } else {\n    edge = _objectSpread(_objectSpread({}, edgeParams), {}, {\n      id: getEdgeId(edgeParams)\n    });\n  }\n  if (connectionExists(edge, edges)) {\n    return edges;\n  }\n  return edges.concat(edge);\n};\nvar updateEdge = function updateEdge(oldEdge, newConnection, edges) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n    shouldReplaceId: true\n  };\n  var oldEdgeId = oldEdge.id,\n    rest = _objectWithoutProperties(oldEdge, _excluded3);\n  if (!newConnection.source || !newConnection.target) {\n    devWarn('006', errorMessages['error006']());\n    return edges;\n  }\n  var foundEdge = edges.find(function (e) {\n    return e.id === oldEdgeId;\n  });\n  if (!foundEdge) {\n    devWarn('007', errorMessages['error007'](oldEdgeId));\n    return edges;\n  }\n  // Remove old edge and create the new edge with parameters of old edge.\n  var edge = _objectSpread(_objectSpread({}, rest), {}, {\n    id: options.shouldReplaceId ? getEdgeId(newConnection) : oldEdgeId,\n    source: newConnection.source,\n    target: newConnection.target,\n    sourceHandle: newConnection.sourceHandle,\n    targetHandle: newConnection.targetHandle\n  });\n  return edges.filter(function (e) {\n    return e.id !== oldEdgeId;\n  }).concat(edge);\n};\nvar pointToRendererPoint = function pointToRendererPoint(_ref22, _ref23, snapToGrid, _ref24) {\n  var x = _ref22.x,\n    y = _ref22.y;\n  var _ref25 = _slicedToArray(_ref23, 3),\n    tx = _ref25[0],\n    ty = _ref25[1],\n    tScale = _ref25[2];\n  var _ref26 = _slicedToArray(_ref24, 2),\n    snapX = _ref26[0],\n    snapY = _ref26[1];\n  var position = {\n    x: (x - tx) / tScale,\n    y: (y - ty) / tScale\n  };\n  if (snapToGrid) {\n    return {\n      x: snapX * Math.round(position.x / snapX),\n      y: snapY * Math.round(position.y / snapY)\n    };\n  }\n  return position;\n};\nvar rendererPointToPoint = function rendererPointToPoint(_ref27, _ref28) {\n  var x = _ref27.x,\n    y = _ref27.y;\n  var _ref29 = _slicedToArray(_ref28, 3),\n    tx = _ref29[0],\n    ty = _ref29[1],\n    tScale = _ref29[2];\n  return {\n    x: x * tScale + tx,\n    y: y * tScale + ty\n  };\n};\nvar getNodePositionWithOrigin = function getNodePositionWithOrigin(node) {\n  var _node$width, _node$height;\n  var nodeOrigin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0];\n  if (!node) {\n    return {\n      x: 0,\n      y: 0,\n      positionAbsolute: {\n        x: 0,\n        y: 0\n      }\n    };\n  }\n  var offsetX = ((_node$width = node.width) !== null && _node$width !== void 0 ? _node$width : 0) * nodeOrigin[0];\n  var offsetY = ((_node$height = node.height) !== null && _node$height !== void 0 ? _node$height : 0) * nodeOrigin[1];\n  var position = {\n    x: node.position.x - offsetX,\n    y: node.position.y - offsetY\n  };\n  return _objectSpread(_objectSpread({}, position), {}, {\n    positionAbsolute: node.positionAbsolute ? {\n      x: node.positionAbsolute.x - offsetX,\n      y: node.positionAbsolute.y - offsetY\n    } : position\n  });\n};\nvar getRectOfNodes = function getRectOfNodes(nodes) {\n  var nodeOrigin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0];\n  if (nodes.length === 0) {\n    return {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  var box = nodes.reduce(function (currBox, node) {\n    var _getNodePositionWithO = getNodePositionWithOrigin(node, nodeOrigin).positionAbsolute,\n      x = _getNodePositionWithO.x,\n      y = _getNodePositionWithO.y;\n    return getBoundsOfBoxes(currBox, rectToBox({\n      x: x,\n      y: y,\n      width: node.width || 0,\n      height: node.height || 0\n    }));\n  }, {\n    x: Infinity,\n    y: Infinity,\n    x2: -Infinity,\n    y2: -Infinity\n  });\n  return boxToRect(box);\n};\nvar getNodesInside = function getNodesInside(nodeInternals, rect) {\n  var _ref30 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0, 0, 1],\n    _ref31 = _slicedToArray(_ref30, 3),\n    tx = _ref31[0],\n    ty = _ref31[1],\n    tScale = _ref31[2];\n  var partially = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var excludeNonSelectableNodes = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var nodeOrigin = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [0, 0];\n  var paneRect = {\n    x: (rect.x - tx) / tScale,\n    y: (rect.y - ty) / tScale,\n    width: rect.width / tScale,\n    height: rect.height / tScale\n  };\n  var visibleNodes = [];\n  nodeInternals.forEach(function (node) {\n    var width = node.width,\n      height = node.height,\n      _node$selectable = node.selectable,\n      selectable = _node$selectable === void 0 ? true : _node$selectable,\n      _node$hidden = node.hidden,\n      hidden = _node$hidden === void 0 ? false : _node$hidden;\n    if (excludeNonSelectableNodes && !selectable || hidden) {\n      return false;\n    }\n    var _getNodePositionWithO2 = getNodePositionWithOrigin(node, nodeOrigin),\n      positionAbsolute = _getNodePositionWithO2.positionAbsolute;\n    var nodeRect = {\n      x: positionAbsolute.x,\n      y: positionAbsolute.y,\n      width: width || 0,\n      height: height || 0\n    };\n    var overlappingArea = getOverlappingArea(paneRect, nodeRect);\n    var notInitialized = typeof width === 'undefined' || typeof height === 'undefined' || width === null || height === null;\n    var partiallyVisible = partially && overlappingArea > 0;\n    var area = (width || 0) * (height || 0);\n    var isVisible = notInitialized || partiallyVisible || overlappingArea >= area;\n    if (isVisible || node.dragging) {\n      visibleNodes.push(node);\n    }\n  });\n  return visibleNodes;\n};\nvar getConnectedEdges = function getConnectedEdges(nodes, edges) {\n  var nodeIds = nodes.map(function (node) {\n    return node.id;\n  });\n  return edges.filter(function (edge) {\n    return nodeIds.includes(edge.source) || nodeIds.includes(edge.target);\n  });\n};\nvar getTransformForBounds = function getTransformForBounds(bounds, width, height, minZoom, maxZoom) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0.1;\n  var xZoom = width / (bounds.width * (1 + padding));\n  var yZoom = height / (bounds.height * (1 + padding));\n  var zoom = Math.min(xZoom, yZoom);\n  var clampedZoom = clamp(zoom, minZoom, maxZoom);\n  var boundsCenterX = bounds.x + bounds.width / 2;\n  var boundsCenterY = bounds.y + bounds.height / 2;\n  var x = width / 2 - boundsCenterX * clampedZoom;\n  var y = height / 2 - boundsCenterY * clampedZoom;\n  return [x, y, clampedZoom];\n};\nvar getD3Transition = function getD3Transition(selection) {\n  var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return selection.transition().duration(duration);\n};\n\n// this functions collects all handles and adds an absolute position\n// so that we can later find the closest handle to the mouse position\nfunction getHandles(node, handleBounds, type, currentHandle) {\n  return (handleBounds[type] || []).reduce(function (res, h) {\n    if (\"\".concat(node.id, \"-\").concat(h.id, \"-\").concat(type) !== currentHandle) {\n      var _node$positionAbsolut, _node$positionAbsolut2, _node$positionAbsolut3, _node$positionAbsolut4;\n      res.push({\n        id: h.id || null,\n        type: type,\n        nodeId: node.id,\n        x: ((_node$positionAbsolut = (_node$positionAbsolut2 = node.positionAbsolute) === null || _node$positionAbsolut2 === void 0 ? void 0 : _node$positionAbsolut2.x) !== null && _node$positionAbsolut !== void 0 ? _node$positionAbsolut : 0) + h.x + h.width / 2,\n        y: ((_node$positionAbsolut3 = (_node$positionAbsolut4 = node.positionAbsolute) === null || _node$positionAbsolut4 === void 0 ? void 0 : _node$positionAbsolut4.y) !== null && _node$positionAbsolut3 !== void 0 ? _node$positionAbsolut3 : 0) + h.y + h.height / 2\n      });\n    }\n    return res;\n  }, []);\n}\nfunction getClosestHandle(event, doc, pos, connectionRadius, handles, validator) {\n  // we always want to prioritize the handle below the mouse cursor over the closest distance handle,\n  // because it could be that the center of another handle is closer to the mouse pointer than the handle below the cursor\n  var _getEventPosition = getEventPosition(event),\n    x = _getEventPosition.x,\n    y = _getEventPosition.y;\n  var domNodes = doc.elementsFromPoint(x, y);\n  var handleBelow = domNodes.find(function (el) {\n    return el.classList.contains('react-flow__handle');\n  });\n  if (handleBelow) {\n    var handleNodeId = handleBelow.getAttribute('data-nodeid');\n    if (handleNodeId) {\n      var handleType = getHandleType(undefined, handleBelow);\n      var handleId = handleBelow.getAttribute('data-handleid');\n      var validHandleResult = validator({\n        nodeId: handleNodeId,\n        id: handleId,\n        type: handleType\n      });\n      if (validHandleResult) {\n        return {\n          handle: {\n            id: handleId,\n            type: handleType,\n            nodeId: handleNodeId,\n            x: pos.x,\n            y: pos.y\n          },\n          validHandleResult: validHandleResult\n        };\n      }\n    }\n  }\n  // if we couldn't find a handle below the mouse cursor we look for the closest distance based on the connectionRadius\n  var closestHandles = [];\n  var minDistance = Infinity;\n  handles.forEach(function (handle) {\n    var distance = Math.sqrt(Math.pow(handle.x - pos.x, 2) + Math.pow(handle.y - pos.y, 2));\n    if (distance <= connectionRadius) {\n      var _validHandleResult = validator(handle);\n      if (distance <= minDistance) {\n        if (distance < minDistance) {\n          closestHandles = [{\n            handle: handle,\n            validHandleResult: _validHandleResult\n          }];\n        } else if (distance === minDistance) {\n          // when multiple handles are on the same distance we collect all of them\n          closestHandles.push({\n            handle: handle,\n            validHandleResult: _validHandleResult\n          });\n        }\n        minDistance = distance;\n      }\n    }\n  });\n  if (!closestHandles.length) {\n    return {\n      handle: null,\n      validHandleResult: defaultResult()\n    };\n  }\n  if (closestHandles.length === 1) {\n    return closestHandles[0];\n  }\n  var hasValidHandle = closestHandles.some(function (_ref32) {\n    var validHandleResult = _ref32.validHandleResult;\n    return validHandleResult.isValid;\n  });\n  var hasTargetHandle = closestHandles.some(function (_ref33) {\n    var handle = _ref33.handle;\n    return handle.type === 'target';\n  });\n  // if multiple handles are layouted on top of each other we prefer the one with type = target and the one that is valid\n  return closestHandles.find(function (_ref34) {\n    var handle = _ref34.handle,\n      validHandleResult = _ref34.validHandleResult;\n    return hasTargetHandle ? handle.type === 'target' : hasValidHandle ? validHandleResult.isValid : true;\n  }) || closestHandles[0];\n}\nvar nullConnection = {\n  source: null,\n  target: null,\n  sourceHandle: null,\n  targetHandle: null\n};\nvar defaultResult = function defaultResult() {\n  return {\n    handleDomNode: null,\n    isValid: false,\n    connection: nullConnection,\n    endHandle: null\n  };\n};\n// checks if  and returns connection in fom of an object { source: 123, target: 312 }\nfunction isValidHandle(handle, connectionMode, fromNodeId, fromHandleId, fromType, isValidConnection, doc) {\n  var isTarget = fromType === 'target';\n  var handleToCheck = doc.querySelector(\".react-flow__handle[data-id=\\\"\".concat(handle === null || handle === void 0 ? void 0 : handle.nodeId, \"-\").concat(handle === null || handle === void 0 ? void 0 : handle.id, \"-\").concat(handle === null || handle === void 0 ? void 0 : handle.type, \"\\\"]\"));\n  var result = _objectSpread(_objectSpread({}, defaultResult()), {}, {\n    handleDomNode: handleToCheck\n  });\n  if (handleToCheck) {\n    var handleType = getHandleType(undefined, handleToCheck);\n    var handleNodeId = handleToCheck.getAttribute('data-nodeid');\n    var handleId = handleToCheck.getAttribute('data-handleid');\n    var connectable = handleToCheck.classList.contains('connectable');\n    var connectableEnd = handleToCheck.classList.contains('connectableend');\n    var connection = {\n      source: isTarget ? handleNodeId : fromNodeId,\n      sourceHandle: isTarget ? handleId : fromHandleId,\n      target: isTarget ? fromNodeId : handleNodeId,\n      targetHandle: isTarget ? fromHandleId : handleId\n    };\n    result.connection = connection;\n    var isConnectable = connectable && connectableEnd;\n    // in strict mode we don't allow target to target or source to source connections\n    var isValid = isConnectable && (connectionMode === ConnectionMode.Strict ? isTarget && handleType === 'source' || !isTarget && handleType === 'target' : handleNodeId !== fromNodeId || handleId !== fromHandleId);\n    if (isValid) {\n      result.endHandle = {\n        nodeId: handleNodeId,\n        handleId: handleId,\n        type: handleType\n      };\n      result.isValid = isValidConnection(connection);\n    }\n  }\n  return result;\n}\nfunction getHandleLookup(_ref35) {\n  var nodes = _ref35.nodes,\n    nodeId = _ref35.nodeId,\n    handleId = _ref35.handleId,\n    handleType = _ref35.handleType;\n  return nodes.reduce(function (res, node) {\n    if (node[internalsSymbol]) {\n      var handleBounds = node[internalsSymbol].handleBounds;\n      var sourceHandles = [];\n      var targetHandles = [];\n      if (handleBounds) {\n        sourceHandles = getHandles(node, handleBounds, 'source', \"\".concat(nodeId, \"-\").concat(handleId, \"-\").concat(handleType));\n        targetHandles = getHandles(node, handleBounds, 'target', \"\".concat(nodeId, \"-\").concat(handleId, \"-\").concat(handleType));\n      }\n      res.push.apply(res, _toConsumableArray(sourceHandles).concat(_toConsumableArray(targetHandles)));\n    }\n    return res;\n  }, []);\n}\nfunction getHandleType(edgeUpdaterType, handleDomNode) {\n  if (edgeUpdaterType) {\n    return edgeUpdaterType;\n  } else if (handleDomNode !== null && handleDomNode !== void 0 && handleDomNode.classList.contains('target')) {\n    return 'target';\n  } else if (handleDomNode !== null && handleDomNode !== void 0 && handleDomNode.classList.contains('source')) {\n    return 'source';\n  }\n  return null;\n}\nfunction resetRecentHandle(handleDomNode) {\n  handleDomNode === null || handleDomNode === void 0 ? void 0 : handleDomNode.classList.remove('valid', 'connecting', 'react-flow__handle-valid', 'react-flow__handle-connecting');\n}\nfunction getConnectionStatus(isInsideConnectionRadius, isHandleValid) {\n  var connectionStatus = null;\n  if (isHandleValid) {\n    connectionStatus = 'valid';\n  } else if (isInsideConnectionRadius && !isHandleValid) {\n    connectionStatus = 'invalid';\n  }\n  return connectionStatus;\n}\nfunction handlePointerDown(_ref36) {\n  var event = _ref36.event,\n    handleId = _ref36.handleId,\n    nodeId = _ref36.nodeId,\n    onConnect = _ref36.onConnect,\n    isTarget = _ref36.isTarget,\n    getState = _ref36.getState,\n    setState = _ref36.setState,\n    isValidConnection = _ref36.isValidConnection,\n    edgeUpdaterType = _ref36.edgeUpdaterType,\n    onEdgeUpdateEnd = _ref36.onEdgeUpdateEnd;\n  // when react-flow is used inside a shadow root we can't use document\n  var doc = getHostForElement(event.target);\n  var _getState = getState(),\n    connectionMode = _getState.connectionMode,\n    domNode = _getState.domNode,\n    autoPanOnConnect = _getState.autoPanOnConnect,\n    connectionRadius = _getState.connectionRadius,\n    onConnectStart = _getState.onConnectStart,\n    panBy = _getState.panBy,\n    getNodes = _getState.getNodes,\n    cancelConnection = _getState.cancelConnection;\n  var autoPanId = 0;\n  var closestHandle;\n  var _getEventPosition2 = getEventPosition(event),\n    x = _getEventPosition2.x,\n    y = _getEventPosition2.y;\n  var clickedHandle = doc === null || doc === void 0 ? void 0 : doc.elementFromPoint(x, y);\n  var handleType = getHandleType(edgeUpdaterType, clickedHandle);\n  var containerBounds = domNode === null || domNode === void 0 ? void 0 : domNode.getBoundingClientRect();\n  if (!containerBounds || !handleType) {\n    return;\n  }\n  var prevActiveHandle;\n  var connectionPosition = getEventPosition(event, containerBounds);\n  var autoPanStarted = false;\n  var connection = null;\n  var isValid = false;\n  var handleDomNode = null;\n  var handleLookup = getHandleLookup({\n    nodes: getNodes(),\n    nodeId: nodeId,\n    handleId: handleId,\n    handleType: handleType\n  });\n  // when the user is moving the mouse close to the edge of the canvas while connecting we move the canvas\n  var autoPan = function autoPan() {\n    if (!autoPanOnConnect) {\n      return;\n    }\n    var _calcAutoPan = calcAutoPan(connectionPosition, containerBounds),\n      _calcAutoPan2 = _slicedToArray(_calcAutoPan, 2),\n      xMovement = _calcAutoPan2[0],\n      yMovement = _calcAutoPan2[1];\n    panBy({\n      x: xMovement,\n      y: yMovement\n    });\n    autoPanId = requestAnimationFrame(autoPan);\n  };\n  setState({\n    connectionPosition: connectionPosition,\n    connectionStatus: null,\n    // connectionNodeId etc will be removed in the next major in favor of connectionStartHandle\n    connectionNodeId: nodeId,\n    connectionHandleId: handleId,\n    connectionHandleType: handleType,\n    connectionStartHandle: {\n      nodeId: nodeId,\n      handleId: handleId,\n      type: handleType\n    },\n    connectionEndHandle: null\n  });\n  onConnectStart === null || onConnectStart === void 0 ? void 0 : onConnectStart(event, {\n    nodeId: nodeId,\n    handleId: handleId,\n    handleType: handleType\n  });\n  function onPointerMove(event) {\n    var _getState2 = getState(),\n      transform = _getState2.transform;\n    connectionPosition = getEventPosition(event, containerBounds);\n    var _getClosestHandle = getClosestHandle(event, doc, pointToRendererPoint(connectionPosition, transform, false, [1, 1]), connectionRadius, handleLookup, function (handle) {\n        return isValidHandle(handle, connectionMode, nodeId, handleId, isTarget ? 'target' : 'source', isValidConnection, doc);\n      }),\n      handle = _getClosestHandle.handle,\n      validHandleResult = _getClosestHandle.validHandleResult;\n    closestHandle = handle;\n    if (!autoPanStarted) {\n      autoPan();\n      autoPanStarted = true;\n    }\n    handleDomNode = validHandleResult.handleDomNode;\n    connection = validHandleResult.connection;\n    isValid = validHandleResult.isValid;\n    setState({\n      connectionPosition: closestHandle && isValid ? rendererPointToPoint({\n        x: closestHandle.x,\n        y: closestHandle.y\n      }, transform) : connectionPosition,\n      connectionStatus: getConnectionStatus(!!closestHandle, isValid),\n      connectionEndHandle: validHandleResult.endHandle\n    });\n    if (!closestHandle && !isValid && !handleDomNode) {\n      return resetRecentHandle(prevActiveHandle);\n    }\n    if (connection.source !== connection.target && handleDomNode) {\n      resetRecentHandle(prevActiveHandle);\n      prevActiveHandle = handleDomNode;\n      // @todo: remove the old class names \"react-flow__handle-\" in the next major version\n      handleDomNode.classList.add('connecting', 'react-flow__handle-connecting');\n      handleDomNode.classList.toggle('valid', isValid);\n      handleDomNode.classList.toggle('react-flow__handle-valid', isValid);\n    }\n  }\n  function onPointerUp(event) {\n    var _getState$onConnectEn, _getState3;\n    if ((closestHandle || handleDomNode) && connection && isValid) {\n      onConnect === null || onConnect === void 0 ? void 0 : onConnect(connection);\n    }\n    // it's important to get a fresh reference from the store here\n    // in order to get the latest state of onConnectEnd\n    (_getState$onConnectEn = (_getState3 = getState()).onConnectEnd) === null || _getState$onConnectEn === void 0 ? void 0 : _getState$onConnectEn.call(_getState3, event);\n    if (edgeUpdaterType) {\n      onEdgeUpdateEnd === null || onEdgeUpdateEnd === void 0 ? void 0 : onEdgeUpdateEnd(event);\n    }\n    resetRecentHandle(prevActiveHandle);\n    cancelConnection();\n    cancelAnimationFrame(autoPanId);\n    autoPanStarted = false;\n    isValid = false;\n    connection = null;\n    handleDomNode = null;\n    doc.removeEventListener('mousemove', onPointerMove);\n    doc.removeEventListener('mouseup', onPointerUp);\n    doc.removeEventListener('touchmove', onPointerMove);\n    doc.removeEventListener('touchend', onPointerUp);\n  }\n  doc.addEventListener('mousemove', onPointerMove);\n  doc.addEventListener('mouseup', onPointerUp);\n  doc.addEventListener('touchmove', onPointerMove);\n  doc.addEventListener('touchend', onPointerUp);\n}\nvar alwaysValid = function alwaysValid() {\n  return true;\n};\nvar selector$f = function selector$f(s) {\n  return {\n    connectionStartHandle: s.connectionStartHandle,\n    connectOnClick: s.connectOnClick,\n    noPanClassName: s.noPanClassName\n  };\n};\nvar connectingSelector = function connectingSelector(nodeId, handleId, type) {\n  return function (state) {\n    var startHandle = state.connectionStartHandle,\n      endHandle = state.connectionEndHandle,\n      clickHandle = state.connectionClickStartHandle;\n    return {\n      connecting: (startHandle === null || startHandle === void 0 ? void 0 : startHandle.nodeId) === nodeId && (startHandle === null || startHandle === void 0 ? void 0 : startHandle.handleId) === handleId && (startHandle === null || startHandle === void 0 ? void 0 : startHandle.type) === type || (endHandle === null || endHandle === void 0 ? void 0 : endHandle.nodeId) === nodeId && (endHandle === null || endHandle === void 0 ? void 0 : endHandle.handleId) === handleId && (endHandle === null || endHandle === void 0 ? void 0 : endHandle.type) === type,\n      clickConnecting: (clickHandle === null || clickHandle === void 0 ? void 0 : clickHandle.nodeId) === nodeId && (clickHandle === null || clickHandle === void 0 ? void 0 : clickHandle.handleId) === handleId && (clickHandle === null || clickHandle === void 0 ? void 0 : clickHandle.type) === type\n    };\n  };\n};\nvar Handle = forwardRef(function (_ref37, ref) {\n  var _ref37$type = _ref37.type,\n    type = _ref37$type === void 0 ? 'source' : _ref37$type,\n    _ref37$position = _ref37.position,\n    position = _ref37$position === void 0 ? Position.Top : _ref37$position,\n    isValidConnection = _ref37.isValidConnection,\n    _ref37$isConnectable = _ref37.isConnectable,\n    isConnectable = _ref37$isConnectable === void 0 ? true : _ref37$isConnectable,\n    _ref37$isConnectableS = _ref37.isConnectableStart,\n    isConnectableStart = _ref37$isConnectableS === void 0 ? true : _ref37$isConnectableS,\n    _ref37$isConnectableE = _ref37.isConnectableEnd,\n    isConnectableEnd = _ref37$isConnectableE === void 0 ? true : _ref37$isConnectableE,\n    id = _ref37.id,\n    onConnect = _ref37.onConnect,\n    children = _ref37.children,\n    className = _ref37.className,\n    onMouseDown = _ref37.onMouseDown,\n    onTouchStart = _ref37.onTouchStart,\n    rest = _objectWithoutProperties(_ref37, _excluded4);\n  var handleId = id || null;\n  var isTarget = type === 'target';\n  var store = useStoreApi();\n  var nodeId = useNodeId();\n  var _useStore = useStore(selector$f, shallow),\n    connectOnClick = _useStore.connectOnClick,\n    noPanClassName = _useStore.noPanClassName;\n  var _useStore2 = useStore(connectingSelector(nodeId, handleId, type), shallow),\n    connecting = _useStore2.connecting,\n    clickConnecting = _useStore2.clickConnecting;\n  if (!nodeId) {\n    var _store$getState$onErr, _store$getState;\n    (_store$getState$onErr = (_store$getState = store.getState()).onError) === null || _store$getState$onErr === void 0 ? void 0 : _store$getState$onErr.call(_store$getState, '010', errorMessages['error010']());\n  }\n  var onConnectExtended = function onConnectExtended(params) {\n    var _store$getState2 = store.getState(),\n      defaultEdgeOptions = _store$getState2.defaultEdgeOptions,\n      onConnectAction = _store$getState2.onConnect,\n      hasDefaultEdges = _store$getState2.hasDefaultEdges;\n    var edgeParams = _objectSpread(_objectSpread({}, defaultEdgeOptions), params);\n    if (hasDefaultEdges) {\n      var _store$getState3 = store.getState(),\n        edges = _store$getState3.edges,\n        setEdges = _store$getState3.setEdges;\n      setEdges(addEdge(edgeParams, edges));\n    }\n    onConnectAction === null || onConnectAction === void 0 ? void 0 : onConnectAction(edgeParams);\n    onConnect === null || onConnect === void 0 ? void 0 : onConnect(edgeParams);\n  };\n  var onPointerDown = function onPointerDown(event) {\n    if (!nodeId) {\n      return;\n    }\n    var isMouseTriggered = isMouseEvent(event);\n    if (isConnectableStart && (isMouseTriggered && event.button === 0 || !isMouseTriggered)) {\n      handlePointerDown({\n        event: event,\n        handleId: handleId,\n        nodeId: nodeId,\n        onConnect: onConnectExtended,\n        isTarget: isTarget,\n        getState: store.getState,\n        setState: store.setState,\n        isValidConnection: isValidConnection || store.getState().isValidConnection || alwaysValid\n      });\n    }\n    if (isMouseTriggered) {\n      onMouseDown === null || onMouseDown === void 0 ? void 0 : onMouseDown(event);\n    } else {\n      onTouchStart === null || onTouchStart === void 0 ? void 0 : onTouchStart(event);\n    }\n  };\n  var onClick = function onClick(event) {\n    var _store$getState4 = store.getState(),\n      onClickConnectStart = _store$getState4.onClickConnectStart,\n      onClickConnectEnd = _store$getState4.onClickConnectEnd,\n      connectionClickStartHandle = _store$getState4.connectionClickStartHandle,\n      connectionMode = _store$getState4.connectionMode,\n      isValidConnectionStore = _store$getState4.isValidConnection;\n    if (!nodeId || !connectionClickStartHandle && !isConnectableStart) {\n      return;\n    }\n    if (!connectionClickStartHandle) {\n      onClickConnectStart === null || onClickConnectStart === void 0 ? void 0 : onClickConnectStart(event, {\n        nodeId: nodeId,\n        handleId: handleId,\n        handleType: type\n      });\n      store.setState({\n        connectionClickStartHandle: {\n          nodeId: nodeId,\n          type: type,\n          handleId: handleId\n        }\n      });\n      return;\n    }\n    var doc = getHostForElement(event.target);\n    var isValidConnectionHandler = isValidConnection || isValidConnectionStore || alwaysValid;\n    var _isValidHandle = isValidHandle({\n        nodeId: nodeId,\n        id: handleId,\n        type: type\n      }, connectionMode, connectionClickStartHandle.nodeId, connectionClickStartHandle.handleId || null, connectionClickStartHandle.type, isValidConnectionHandler, doc),\n      connection = _isValidHandle.connection,\n      isValid = _isValidHandle.isValid;\n    if (isValid) {\n      onConnectExtended(connection);\n    }\n    onClickConnectEnd === null || onClickConnectEnd === void 0 ? void 0 : onClickConnectEnd(event);\n    store.setState({\n      connectionClickStartHandle: null\n    });\n  };\n  return jsx(\"div\", _objectSpread(_objectSpread({\n    \"data-handleid\": handleId,\n    \"data-nodeid\": nodeId,\n    \"data-handlepos\": position,\n    \"data-id\": \"\".concat(nodeId, \"-\").concat(handleId, \"-\").concat(type),\n    className: cc(['react-flow__handle', \"react-flow__handle-\".concat(position), 'nodrag', noPanClassName, className, {\n      source: !isTarget,\n      target: isTarget,\n      connectable: isConnectable,\n      connectablestart: isConnectableStart,\n      connectableend: isConnectableEnd,\n      connecting: clickConnecting,\n      // this class is used to style the handle when the user is connecting\n      connectionindicator: isConnectable && (isConnectableStart && !connecting || isConnectableEnd && connecting)\n    }]),\n    onMouseDown: onPointerDown,\n    onTouchStart: onPointerDown,\n    onClick: connectOnClick ? onClick : undefined,\n    ref: ref\n  }, rest), {}, {\n    children: children\n  }));\n});\nHandle.displayName = 'Handle';\nvar Handle$1 = memo(Handle);\nvar DefaultNode = function DefaultNode(_ref38) {\n  var data = _ref38.data,\n    isConnectable = _ref38.isConnectable,\n    _ref38$targetPosition = _ref38.targetPosition,\n    targetPosition = _ref38$targetPosition === void 0 ? Position.Top : _ref38$targetPosition,\n    _ref38$sourcePosition = _ref38.sourcePosition,\n    sourcePosition = _ref38$sourcePosition === void 0 ? Position.Bottom : _ref38$sourcePosition;\n  return jsxs(Fragment, {\n    children: [jsx(Handle$1, {\n      type: \"target\",\n      position: targetPosition,\n      isConnectable: isConnectable\n    }), data === null || data === void 0 ? void 0 : data.label, jsx(Handle$1, {\n      type: \"source\",\n      position: sourcePosition,\n      isConnectable: isConnectable\n    })]\n  });\n};\nDefaultNode.displayName = 'DefaultNode';\nvar DefaultNode$1 = memo(DefaultNode);\nvar InputNode = function InputNode(_ref39) {\n  var data = _ref39.data,\n    isConnectable = _ref39.isConnectable,\n    _ref39$sourcePosition = _ref39.sourcePosition,\n    sourcePosition = _ref39$sourcePosition === void 0 ? Position.Bottom : _ref39$sourcePosition;\n  return jsxs(Fragment, {\n    children: [data === null || data === void 0 ? void 0 : data.label, jsx(Handle$1, {\n      type: \"source\",\n      position: sourcePosition,\n      isConnectable: isConnectable\n    })]\n  });\n};\nInputNode.displayName = 'InputNode';\nvar InputNode$1 = memo(InputNode);\nvar OutputNode = function OutputNode(_ref40) {\n  var data = _ref40.data,\n    isConnectable = _ref40.isConnectable,\n    _ref40$targetPosition = _ref40.targetPosition,\n    targetPosition = _ref40$targetPosition === void 0 ? Position.Top : _ref40$targetPosition;\n  return jsxs(Fragment, {\n    children: [jsx(Handle$1, {\n      type: \"target\",\n      position: targetPosition,\n      isConnectable: isConnectable\n    }), data === null || data === void 0 ? void 0 : data.label]\n  });\n};\nOutputNode.displayName = 'OutputNode';\nvar OutputNode$1 = memo(OutputNode);\nvar GroupNode = function GroupNode() {\n  return null;\n};\nGroupNode.displayName = 'GroupNode';\nvar selector$e = function selector$e(s) {\n  return {\n    selectedNodes: s.getNodes().filter(function (n) {\n      return n.selected;\n    }),\n    selectedEdges: s.edges.filter(function (e) {\n      return e.selected;\n    })\n  };\n};\nvar selectId = function selectId(obj) {\n  return obj.id;\n};\nfunction areEqual(a, b) {\n  return shallow(a.selectedNodes.map(selectId), b.selectedNodes.map(selectId)) && shallow(a.selectedEdges.map(selectId), b.selectedEdges.map(selectId));\n}\n// This is just a helper component for calling the onSelectionChange listener.\n// @TODO: Now that we have the onNodesChange and on EdgesChange listeners, do we still need this component?\nvar SelectionListener = memo(function (_ref41) {\n  var onSelectionChange = _ref41.onSelectionChange;\n  var store = useStoreApi();\n  var _useStore3 = useStore(selector$e, areEqual),\n    selectedNodes = _useStore3.selectedNodes,\n    selectedEdges = _useStore3.selectedEdges;\n  useEffect(function () {\n    var _store$getState$onSel, _store$getState5;\n    var params = {\n      nodes: selectedNodes,\n      edges: selectedEdges\n    };\n    onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(params);\n    (_store$getState$onSel = (_store$getState5 = store.getState()).onSelectionChange) === null || _store$getState$onSel === void 0 ? void 0 : _store$getState$onSel.call(_store$getState5, params);\n  }, [selectedNodes, selectedEdges, onSelectionChange]);\n  return null;\n});\nSelectionListener.displayName = 'SelectionListener';\nvar changeSelector = function changeSelector(s) {\n  return !!s.onSelectionChange;\n};\nfunction Wrapper$1(_ref42) {\n  var onSelectionChange = _ref42.onSelectionChange;\n  var storeHasSelectionChange = useStore(changeSelector);\n  if (onSelectionChange || storeHasSelectionChange) {\n    return jsx(SelectionListener, {\n      onSelectionChange: onSelectionChange\n    });\n  }\n  return null;\n}\nvar selector$d = function selector$d(s) {\n  return {\n    setNodes: s.setNodes,\n    setEdges: s.setEdges,\n    setDefaultNodesAndEdges: s.setDefaultNodesAndEdges,\n    setMinZoom: s.setMinZoom,\n    setMaxZoom: s.setMaxZoom,\n    setTranslateExtent: s.setTranslateExtent,\n    setNodeExtent: s.setNodeExtent,\n    reset: s.reset\n  };\n};\nfunction useStoreUpdater(value, setStoreState) {\n  useEffect(function () {\n    if (typeof value !== 'undefined') {\n      setStoreState(value);\n    }\n  }, [value]);\n}\n// updates with values in store that don't have a dedicated setter function\nfunction useDirectStoreUpdater(key, value, setState) {\n  useEffect(function () {\n    if (typeof value !== 'undefined') {\n      setState(_defineProperty({}, key, value));\n    }\n  }, [value]);\n}\nvar StoreUpdater = function StoreUpdater(_ref43) {\n  var nodes = _ref43.nodes,\n    edges = _ref43.edges,\n    defaultNodes = _ref43.defaultNodes,\n    defaultEdges = _ref43.defaultEdges,\n    onConnect = _ref43.onConnect,\n    onConnectStart = _ref43.onConnectStart,\n    onConnectEnd = _ref43.onConnectEnd,\n    onClickConnectStart = _ref43.onClickConnectStart,\n    onClickConnectEnd = _ref43.onClickConnectEnd,\n    nodesDraggable = _ref43.nodesDraggable,\n    nodesConnectable = _ref43.nodesConnectable,\n    nodesFocusable = _ref43.nodesFocusable,\n    edgesFocusable = _ref43.edgesFocusable,\n    edgesUpdatable = _ref43.edgesUpdatable,\n    elevateNodesOnSelect = _ref43.elevateNodesOnSelect,\n    minZoom = _ref43.minZoom,\n    maxZoom = _ref43.maxZoom,\n    nodeExtent = _ref43.nodeExtent,\n    onNodesChange = _ref43.onNodesChange,\n    onEdgesChange = _ref43.onEdgesChange,\n    elementsSelectable = _ref43.elementsSelectable,\n    connectionMode = _ref43.connectionMode,\n    snapGrid = _ref43.snapGrid,\n    snapToGrid = _ref43.snapToGrid,\n    translateExtent = _ref43.translateExtent,\n    connectOnClick = _ref43.connectOnClick,\n    defaultEdgeOptions = _ref43.defaultEdgeOptions,\n    fitView = _ref43.fitView,\n    fitViewOptions = _ref43.fitViewOptions,\n    onNodesDelete = _ref43.onNodesDelete,\n    onEdgesDelete = _ref43.onEdgesDelete,\n    onNodeDrag = _ref43.onNodeDrag,\n    onNodeDragStart = _ref43.onNodeDragStart,\n    onNodeDragStop = _ref43.onNodeDragStop,\n    onSelectionDrag = _ref43.onSelectionDrag,\n    onSelectionDragStart = _ref43.onSelectionDragStart,\n    onSelectionDragStop = _ref43.onSelectionDragStop,\n    noPanClassName = _ref43.noPanClassName,\n    nodeOrigin = _ref43.nodeOrigin,\n    rfId = _ref43.rfId,\n    autoPanOnConnect = _ref43.autoPanOnConnect,\n    autoPanOnNodeDrag = _ref43.autoPanOnNodeDrag,\n    onError = _ref43.onError,\n    connectionRadius = _ref43.connectionRadius,\n    isValidConnection = _ref43.isValidConnection;\n  var _useStore4 = useStore(selector$d, shallow),\n    setNodes = _useStore4.setNodes,\n    setEdges = _useStore4.setEdges,\n    setDefaultNodesAndEdges = _useStore4.setDefaultNodesAndEdges,\n    setMinZoom = _useStore4.setMinZoom,\n    setMaxZoom = _useStore4.setMaxZoom,\n    setTranslateExtent = _useStore4.setTranslateExtent,\n    setNodeExtent = _useStore4.setNodeExtent,\n    reset = _useStore4.reset;\n  var store = useStoreApi();\n  useEffect(function () {\n    var edgesWithDefaults = defaultEdges === null || defaultEdges === void 0 ? void 0 : defaultEdges.map(function (e) {\n      return _objectSpread(_objectSpread({}, e), defaultEdgeOptions);\n    });\n    setDefaultNodesAndEdges(defaultNodes, edgesWithDefaults);\n    return function () {\n      reset();\n    };\n  }, []);\n  useDirectStoreUpdater('defaultEdgeOptions', defaultEdgeOptions, store.setState);\n  useDirectStoreUpdater('connectionMode', connectionMode, store.setState);\n  useDirectStoreUpdater('onConnect', onConnect, store.setState);\n  useDirectStoreUpdater('onConnectStart', onConnectStart, store.setState);\n  useDirectStoreUpdater('onConnectEnd', onConnectEnd, store.setState);\n  useDirectStoreUpdater('onClickConnectStart', onClickConnectStart, store.setState);\n  useDirectStoreUpdater('onClickConnectEnd', onClickConnectEnd, store.setState);\n  useDirectStoreUpdater('nodesDraggable', nodesDraggable, store.setState);\n  useDirectStoreUpdater('nodesConnectable', nodesConnectable, store.setState);\n  useDirectStoreUpdater('nodesFocusable', nodesFocusable, store.setState);\n  useDirectStoreUpdater('edgesFocusable', edgesFocusable, store.setState);\n  useDirectStoreUpdater('edgesUpdatable', edgesUpdatable, store.setState);\n  useDirectStoreUpdater('elementsSelectable', elementsSelectable, store.setState);\n  useDirectStoreUpdater('elevateNodesOnSelect', elevateNodesOnSelect, store.setState);\n  useDirectStoreUpdater('snapToGrid', snapToGrid, store.setState);\n  useDirectStoreUpdater('snapGrid', snapGrid, store.setState);\n  useDirectStoreUpdater('onNodesChange', onNodesChange, store.setState);\n  useDirectStoreUpdater('onEdgesChange', onEdgesChange, store.setState);\n  useDirectStoreUpdater('connectOnClick', connectOnClick, store.setState);\n  useDirectStoreUpdater('fitViewOnInit', fitView, store.setState);\n  useDirectStoreUpdater('fitViewOnInitOptions', fitViewOptions, store.setState);\n  useDirectStoreUpdater('onNodesDelete', onNodesDelete, store.setState);\n  useDirectStoreUpdater('onEdgesDelete', onEdgesDelete, store.setState);\n  useDirectStoreUpdater('onNodeDrag', onNodeDrag, store.setState);\n  useDirectStoreUpdater('onNodeDragStart', onNodeDragStart, store.setState);\n  useDirectStoreUpdater('onNodeDragStop', onNodeDragStop, store.setState);\n  useDirectStoreUpdater('onSelectionDrag', onSelectionDrag, store.setState);\n  useDirectStoreUpdater('onSelectionDragStart', onSelectionDragStart, store.setState);\n  useDirectStoreUpdater('onSelectionDragStop', onSelectionDragStop, store.setState);\n  useDirectStoreUpdater('noPanClassName', noPanClassName, store.setState);\n  useDirectStoreUpdater('nodeOrigin', nodeOrigin, store.setState);\n  useDirectStoreUpdater('rfId', rfId, store.setState);\n  useDirectStoreUpdater('autoPanOnConnect', autoPanOnConnect, store.setState);\n  useDirectStoreUpdater('autoPanOnNodeDrag', autoPanOnNodeDrag, store.setState);\n  useDirectStoreUpdater('onError', onError, store.setState);\n  useDirectStoreUpdater('connectionRadius', connectionRadius, store.setState);\n  useDirectStoreUpdater('isValidConnection', isValidConnection, store.setState);\n  useStoreUpdater(nodes, setNodes);\n  useStoreUpdater(edges, setEdges);\n  useStoreUpdater(minZoom, setMinZoom);\n  useStoreUpdater(maxZoom, setMaxZoom);\n  useStoreUpdater(translateExtent, setTranslateExtent);\n  useStoreUpdater(nodeExtent, setNodeExtent);\n  return null;\n};\nvar style = {\n  display: 'none'\n};\nvar ariaLiveStyle = {\n  position: 'absolute',\n  width: 1,\n  height: 1,\n  margin: -1,\n  border: 0,\n  padding: 0,\n  overflow: 'hidden',\n  clip: 'rect(0px, 0px, 0px, 0px)',\n  clipPath: 'inset(100%)'\n};\nvar ARIA_NODE_DESC_KEY = 'react-flow__node-desc';\nvar ARIA_EDGE_DESC_KEY = 'react-flow__edge-desc';\nvar ARIA_LIVE_MESSAGE = 'react-flow__aria-live';\nvar selector$c = function selector$c(s) {\n  return s.ariaLiveMessage;\n};\nfunction AriaLiveMessage(_ref44) {\n  var rfId = _ref44.rfId;\n  var ariaLiveMessage = useStore(selector$c);\n  return jsx(\"div\", {\n    id: \"\".concat(ARIA_LIVE_MESSAGE, \"-\").concat(rfId),\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\",\n    style: ariaLiveStyle,\n    children: ariaLiveMessage\n  });\n}\nfunction A11yDescriptions(_ref45) {\n  var rfId = _ref45.rfId,\n    disableKeyboardA11y = _ref45.disableKeyboardA11y;\n  return jsxs(Fragment, {\n    children: [jsxs(\"div\", {\n      id: \"\".concat(ARIA_NODE_DESC_KEY, \"-\").concat(rfId),\n      style: style,\n      children: [\"Press enter or space to select a node.\", !disableKeyboardA11y && 'You can then use the arrow keys to move the node around.', \" Press delete to remove it and escape to cancel.\", ' ']\n    }), jsx(\"div\", {\n      id: \"\".concat(ARIA_EDGE_DESC_KEY, \"-\").concat(rfId),\n      style: style,\n      children: \"Press enter or space to select an edge. You can then press delete to remove it or escape to cancel.\"\n    }), !disableKeyboardA11y && jsx(AriaLiveMessage, {\n      rfId: rfId\n    })]\n  });\n}\nvar shiftX = function shiftX(x, shift, position) {\n  if (position === Position.Left) return x - shift;\n  if (position === Position.Right) return x + shift;\n  return x;\n};\nvar shiftY = function shiftY(y, shift, position) {\n  if (position === Position.Top) return y - shift;\n  if (position === Position.Bottom) return y + shift;\n  return y;\n};\nvar EdgeUpdaterClassName = 'react-flow__edgeupdater';\nvar EdgeAnchor = function EdgeAnchor(_ref46) {\n  var position = _ref46.position,\n    centerX = _ref46.centerX,\n    centerY = _ref46.centerY,\n    _ref46$radius = _ref46.radius,\n    radius = _ref46$radius === void 0 ? 10 : _ref46$radius,\n    onMouseDown = _ref46.onMouseDown,\n    onMouseEnter = _ref46.onMouseEnter,\n    onMouseOut = _ref46.onMouseOut,\n    type = _ref46.type;\n  return jsx(\"circle\", {\n    onMouseDown: onMouseDown,\n    onMouseEnter: onMouseEnter,\n    onMouseOut: onMouseOut,\n    className: cc([EdgeUpdaterClassName, \"\".concat(EdgeUpdaterClassName, \"-\").concat(type)]),\n    cx: shiftX(centerX, radius, position),\n    cy: shiftY(centerY, radius, position),\n    r: radius,\n    stroke: \"transparent\",\n    fill: \"transparent\"\n  });\n};\nvar alwaysValidConnection = function alwaysValidConnection() {\n  return true;\n};\nvar wrapEdge = function wrapEdge(EdgeComponent) {\n  var EdgeWrapper = function EdgeWrapper(_ref47) {\n    var id = _ref47.id,\n      className = _ref47.className,\n      type = _ref47.type,\n      data = _ref47.data,\n      onClick = _ref47.onClick,\n      onEdgeDoubleClick = _ref47.onEdgeDoubleClick,\n      selected = _ref47.selected,\n      animated = _ref47.animated,\n      label = _ref47.label,\n      labelStyle = _ref47.labelStyle,\n      labelShowBg = _ref47.labelShowBg,\n      labelBgStyle = _ref47.labelBgStyle,\n      labelBgPadding = _ref47.labelBgPadding,\n      labelBgBorderRadius = _ref47.labelBgBorderRadius,\n      style = _ref47.style,\n      source = _ref47.source,\n      target = _ref47.target,\n      sourceX = _ref47.sourceX,\n      sourceY = _ref47.sourceY,\n      targetX = _ref47.targetX,\n      targetY = _ref47.targetY,\n      sourcePosition = _ref47.sourcePosition,\n      targetPosition = _ref47.targetPosition,\n      elementsSelectable = _ref47.elementsSelectable,\n      hidden = _ref47.hidden,\n      sourceHandleId = _ref47.sourceHandleId,\n      targetHandleId = _ref47.targetHandleId,\n      onContextMenu = _ref47.onContextMenu,\n      onMouseEnter = _ref47.onMouseEnter,\n      onMouseMove = _ref47.onMouseMove,\n      onMouseLeave = _ref47.onMouseLeave,\n      edgeUpdaterRadius = _ref47.edgeUpdaterRadius,\n      onEdgeUpdate = _ref47.onEdgeUpdate,\n      onEdgeUpdateStart = _ref47.onEdgeUpdateStart,\n      onEdgeUpdateEnd = _ref47.onEdgeUpdateEnd,\n      markerEnd = _ref47.markerEnd,\n      markerStart = _ref47.markerStart,\n      rfId = _ref47.rfId,\n      ariaLabel = _ref47.ariaLabel,\n      isFocusable = _ref47.isFocusable,\n      isUpdatable = _ref47.isUpdatable,\n      pathOptions = _ref47.pathOptions,\n      interactionWidth = _ref47.interactionWidth;\n    var edgeRef = useRef(null);\n    var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      updateHover = _useState4[0],\n      setUpdateHover = _useState4[1];\n    var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      updating = _useState6[0],\n      setUpdating = _useState6[1];\n    var store = useStoreApi();\n    var markerStartUrl = useMemo(function () {\n      return \"url(#\".concat(getMarkerId(markerStart, rfId), \")\");\n    }, [markerStart, rfId]);\n    var markerEndUrl = useMemo(function () {\n      return \"url(#\".concat(getMarkerId(markerEnd, rfId), \")\");\n    }, [markerEnd, rfId]);\n    if (hidden) {\n      return null;\n    }\n    var onEdgeClick = function onEdgeClick(event) {\n      var _store$getState6 = store.getState(),\n        edges = _store$getState6.edges,\n        addSelectedEdges = _store$getState6.addSelectedEdges;\n      if (elementsSelectable) {\n        store.setState({\n          nodesSelectionActive: false\n        });\n        addSelectedEdges([id]);\n      }\n      if (onClick) {\n        var edge = edges.find(function (e) {\n          return e.id === id;\n        });\n        onClick(event, edge);\n      }\n    };\n    var onEdgeDoubleClickHandler = getMouseHandler$1(id, store.getState, onEdgeDoubleClick);\n    var onEdgeContextMenu = getMouseHandler$1(id, store.getState, onContextMenu);\n    var onEdgeMouseEnter = getMouseHandler$1(id, store.getState, onMouseEnter);\n    var onEdgeMouseMove = getMouseHandler$1(id, store.getState, onMouseMove);\n    var onEdgeMouseLeave = getMouseHandler$1(id, store.getState, onMouseLeave);\n    var handleEdgeUpdater = function handleEdgeUpdater(event, isSourceHandle) {\n      // avoid triggering edge updater if mouse btn is not left\n      if (event.button !== 0) {\n        return;\n      }\n      var _store$getState7 = store.getState(),\n        edges = _store$getState7.edges,\n        isValidConnectionStore = _store$getState7.isValidConnection;\n      var nodeId = isSourceHandle ? target : source;\n      var handleId = (isSourceHandle ? targetHandleId : sourceHandleId) || null;\n      var handleType = isSourceHandle ? 'target' : 'source';\n      var isValidConnection = isValidConnectionStore || alwaysValidConnection;\n      var isTarget = isSourceHandle;\n      var edge = edges.find(function (e) {\n        return e.id === id;\n      });\n      setUpdating(true);\n      onEdgeUpdateStart === null || onEdgeUpdateStart === void 0 ? void 0 : onEdgeUpdateStart(event, edge, handleType);\n      var _onEdgeUpdateEnd = function _onEdgeUpdateEnd(evt) {\n        setUpdating(false);\n        onEdgeUpdateEnd === null || onEdgeUpdateEnd === void 0 ? void 0 : onEdgeUpdateEnd(evt, edge, handleType);\n      };\n      var onConnectEdge = function onConnectEdge(connection) {\n        return onEdgeUpdate === null || onEdgeUpdate === void 0 ? void 0 : onEdgeUpdate(edge, connection);\n      };\n      handlePointerDown({\n        event: event,\n        handleId: handleId,\n        nodeId: nodeId,\n        onConnect: onConnectEdge,\n        isTarget: isTarget,\n        getState: store.getState,\n        setState: store.setState,\n        isValidConnection: isValidConnection,\n        edgeUpdaterType: handleType,\n        onEdgeUpdateEnd: _onEdgeUpdateEnd\n      });\n    };\n    var onEdgeUpdaterSourceMouseDown = function onEdgeUpdaterSourceMouseDown(event) {\n      return handleEdgeUpdater(event, true);\n    };\n    var onEdgeUpdaterTargetMouseDown = function onEdgeUpdaterTargetMouseDown(event) {\n      return handleEdgeUpdater(event, false);\n    };\n    var onEdgeUpdaterMouseEnter = function onEdgeUpdaterMouseEnter() {\n      return setUpdateHover(true);\n    };\n    var onEdgeUpdaterMouseOut = function onEdgeUpdaterMouseOut() {\n      return setUpdateHover(false);\n    };\n    var inactive = !elementsSelectable && !onClick;\n    var onKeyDown = function onKeyDown(event) {\n      if (elementSelectionKeys.includes(event.key) && elementsSelectable) {\n        var _store$getState8 = store.getState(),\n          unselectNodesAndEdges = _store$getState8.unselectNodesAndEdges,\n          addSelectedEdges = _store$getState8.addSelectedEdges,\n          edges = _store$getState8.edges;\n        var unselect = event.key === 'Escape';\n        if (unselect) {\n          var _edgeRef$current;\n          (_edgeRef$current = edgeRef.current) === null || _edgeRef$current === void 0 ? void 0 : _edgeRef$current.blur();\n          unselectNodesAndEdges({\n            edges: [edges.find(function (e) {\n              return e.id === id;\n            })]\n          });\n        } else {\n          addSelectedEdges([id]);\n        }\n      }\n    };\n    return jsxs(\"g\", {\n      className: cc(['react-flow__edge', \"react-flow__edge-\".concat(type), className, {\n        selected: selected,\n        animated: animated,\n        inactive: inactive,\n        updating: updateHover\n      }]),\n      onClick: onEdgeClick,\n      onDoubleClick: onEdgeDoubleClickHandler,\n      onContextMenu: onEdgeContextMenu,\n      onMouseEnter: onEdgeMouseEnter,\n      onMouseMove: onEdgeMouseMove,\n      onMouseLeave: onEdgeMouseLeave,\n      onKeyDown: isFocusable ? onKeyDown : undefined,\n      tabIndex: isFocusable ? 0 : undefined,\n      role: isFocusable ? 'button' : undefined,\n      \"data-testid\": \"rf__edge-\".concat(id),\n      \"aria-label\": ariaLabel === null ? undefined : ariaLabel ? ariaLabel : \"Edge from \".concat(source, \" to \").concat(target),\n      \"aria-describedby\": isFocusable ? \"\".concat(ARIA_EDGE_DESC_KEY, \"-\").concat(rfId) : undefined,\n      ref: edgeRef,\n      children: [!updating && jsx(EdgeComponent, {\n        id: id,\n        source: source,\n        target: target,\n        selected: selected,\n        animated: animated,\n        label: label,\n        labelStyle: labelStyle,\n        labelShowBg: labelShowBg,\n        labelBgStyle: labelBgStyle,\n        labelBgPadding: labelBgPadding,\n        labelBgBorderRadius: labelBgBorderRadius,\n        data: data,\n        style: style,\n        sourceX: sourceX,\n        sourceY: sourceY,\n        targetX: targetX,\n        targetY: targetY,\n        sourcePosition: sourcePosition,\n        targetPosition: targetPosition,\n        sourceHandleId: sourceHandleId,\n        targetHandleId: targetHandleId,\n        markerStart: markerStartUrl,\n        markerEnd: markerEndUrl,\n        pathOptions: pathOptions,\n        interactionWidth: interactionWidth\n      }), isUpdatable && jsxs(Fragment, {\n        children: [(isUpdatable === 'source' || isUpdatable === true) && jsx(EdgeAnchor, {\n          position: sourcePosition,\n          centerX: sourceX,\n          centerY: sourceY,\n          radius: edgeUpdaterRadius,\n          onMouseDown: onEdgeUpdaterSourceMouseDown,\n          onMouseEnter: onEdgeUpdaterMouseEnter,\n          onMouseOut: onEdgeUpdaterMouseOut,\n          type: \"source\"\n        }), (isUpdatable === 'target' || isUpdatable === true) && jsx(EdgeAnchor, {\n          position: targetPosition,\n          centerX: targetX,\n          centerY: targetY,\n          radius: edgeUpdaterRadius,\n          onMouseDown: onEdgeUpdaterTargetMouseDown,\n          onMouseEnter: onEdgeUpdaterMouseEnter,\n          onMouseOut: onEdgeUpdaterMouseOut,\n          type: \"target\"\n        })]\n      })]\n    });\n  };\n  EdgeWrapper.displayName = 'EdgeWrapper';\n  return memo(EdgeWrapper);\n};\nfunction createEdgeTypes(edgeTypes) {\n  var standardTypes = {\n    default: wrapEdge(edgeTypes.default || BezierEdge),\n    straight: wrapEdge(edgeTypes.bezier || StraightEdge),\n    step: wrapEdge(edgeTypes.step || StepEdge),\n    smoothstep: wrapEdge(edgeTypes.step || SmoothStepEdge),\n    simplebezier: wrapEdge(edgeTypes.simplebezier || SimpleBezierEdge)\n  };\n  var wrappedTypes = {};\n  var specialTypes = Object.keys(edgeTypes).filter(function (k) {\n    return !['default', 'bezier'].includes(k);\n  }).reduce(function (res, key) {\n    res[key] = wrapEdge(edgeTypes[key] || BezierEdge);\n    return res;\n  }, wrappedTypes);\n  return _objectSpread(_objectSpread({}, standardTypes), specialTypes);\n}\nfunction getHandlePosition(position, nodeRect) {\n  var handle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var x = ((handle === null || handle === void 0 ? void 0 : handle.x) || 0) + nodeRect.x;\n  var y = ((handle === null || handle === void 0 ? void 0 : handle.y) || 0) + nodeRect.y;\n  var width = (handle === null || handle === void 0 ? void 0 : handle.width) || nodeRect.width;\n  var height = (handle === null || handle === void 0 ? void 0 : handle.height) || nodeRect.height;\n  switch (position) {\n    case Position.Top:\n      return {\n        x: x + width / 2,\n        y: y\n      };\n    case Position.Right:\n      return {\n        x: x + width,\n        y: y + height / 2\n      };\n    case Position.Bottom:\n      return {\n        x: x + width / 2,\n        y: y + height\n      };\n    case Position.Left:\n      return {\n        x: x,\n        y: y + height / 2\n      };\n  }\n}\nfunction getHandle(bounds, handleId) {\n  if (!bounds) {\n    return null;\n  }\n  if (bounds.length === 1 || !handleId) {\n    return bounds[0];\n  } else if (handleId) {\n    return bounds.find(function (d) {\n      return d.id === handleId;\n    }) || null;\n  }\n  return null;\n}\nvar getEdgePositions = function getEdgePositions(sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition) {\n  var sourceHandlePos = getHandlePosition(sourcePosition, sourceNodeRect, sourceHandle);\n  var targetHandlePos = getHandlePosition(targetPosition, targetNodeRect, targetHandle);\n  return {\n    sourceX: sourceHandlePos.x,\n    sourceY: sourceHandlePos.y,\n    targetX: targetHandlePos.x,\n    targetY: targetHandlePos.y\n  };\n};\nfunction isEdgeVisible(_ref48) {\n  var sourcePos = _ref48.sourcePos,\n    targetPos = _ref48.targetPos,\n    sourceWidth = _ref48.sourceWidth,\n    sourceHeight = _ref48.sourceHeight,\n    targetWidth = _ref48.targetWidth,\n    targetHeight = _ref48.targetHeight,\n    width = _ref48.width,\n    height = _ref48.height,\n    transform = _ref48.transform;\n  var edgeBox = {\n    x: Math.min(sourcePos.x, targetPos.x),\n    y: Math.min(sourcePos.y, targetPos.y),\n    x2: Math.max(sourcePos.x + sourceWidth, targetPos.x + targetWidth),\n    y2: Math.max(sourcePos.y + sourceHeight, targetPos.y + targetHeight)\n  };\n  if (edgeBox.x === edgeBox.x2) {\n    edgeBox.x2 += 1;\n  }\n  if (edgeBox.y === edgeBox.y2) {\n    edgeBox.y2 += 1;\n  }\n  var viewBox = rectToBox({\n    x: (0 - transform[0]) / transform[2],\n    y: (0 - transform[1]) / transform[2],\n    width: width / transform[2],\n    height: height / transform[2]\n  });\n  var xOverlap = Math.max(0, Math.min(viewBox.x2, edgeBox.x2) - Math.max(viewBox.x, edgeBox.x));\n  var yOverlap = Math.max(0, Math.min(viewBox.y2, edgeBox.y2) - Math.max(viewBox.y, edgeBox.y));\n  var overlappingArea = Math.ceil(xOverlap * yOverlap);\n  return overlappingArea > 0;\n}\nfunction getNodeData(node) {\n  var _node$internalsSymbol, _node$positionAbsolut5, _node$positionAbsolut6, _node$positionAbsolut7, _node$positionAbsolut8;\n  var handleBounds = (node === null || node === void 0 || (_node$internalsSymbol = node[internalsSymbol]) === null || _node$internalsSymbol === void 0 ? void 0 : _node$internalsSymbol.handleBounds) || null;\n  var isValid = handleBounds && (node === null || node === void 0 ? void 0 : node.width) && (node === null || node === void 0 ? void 0 : node.height) && typeof (node === null || node === void 0 || (_node$positionAbsolut5 = node.positionAbsolute) === null || _node$positionAbsolut5 === void 0 ? void 0 : _node$positionAbsolut5.x) !== 'undefined' && typeof (node === null || node === void 0 || (_node$positionAbsolut6 = node.positionAbsolute) === null || _node$positionAbsolut6 === void 0 ? void 0 : _node$positionAbsolut6.y) !== 'undefined';\n  return [{\n    x: (node === null || node === void 0 || (_node$positionAbsolut7 = node.positionAbsolute) === null || _node$positionAbsolut7 === void 0 ? void 0 : _node$positionAbsolut7.x) || 0,\n    y: (node === null || node === void 0 || (_node$positionAbsolut8 = node.positionAbsolute) === null || _node$positionAbsolut8 === void 0 ? void 0 : _node$positionAbsolut8.y) || 0,\n    width: (node === null || node === void 0 ? void 0 : node.width) || 0,\n    height: (node === null || node === void 0 ? void 0 : node.height) || 0\n  }, handleBounds, !!isValid];\n}\nfunction isParentSelected(node, nodeInternals) {\n  if (!node.parentNode) {\n    return false;\n  }\n  var parentNode = nodeInternals.get(node.parentNode);\n  if (!parentNode) {\n    return false;\n  }\n  if (parentNode.selected) {\n    return true;\n  }\n  return isParentSelected(parentNode, nodeInternals);\n}\nfunction hasSelector(target, selector, nodeRef) {\n  var current = target;\n  do {\n    var _current;\n    if ((_current = current) !== null && _current !== void 0 && _current.matches(selector)) return true;\n    if (current === nodeRef.current) return false;\n    current = current.parentElement;\n  } while (current);\n  return false;\n}\n// looks for all selected nodes and created a NodeDragItem for each of them\nfunction getDragItems(nodeInternals, nodesDraggable, mousePos, nodeId) {\n  return Array.from(nodeInternals.values()).filter(function (n) {\n    return (n.selected || n.id === nodeId) && (!n.parentNode || !isParentSelected(n, nodeInternals)) && (n.draggable || nodesDraggable && typeof n.draggable === 'undefined');\n  }).map(function (n) {\n    var _n$positionAbsolute$x, _n$positionAbsolute, _n$positionAbsolute$y, _n$positionAbsolute2;\n    return {\n      id: n.id,\n      position: n.position || {\n        x: 0,\n        y: 0\n      },\n      positionAbsolute: n.positionAbsolute || {\n        x: 0,\n        y: 0\n      },\n      distance: {\n        x: mousePos.x - ((_n$positionAbsolute$x = (_n$positionAbsolute = n.positionAbsolute) === null || _n$positionAbsolute === void 0 ? void 0 : _n$positionAbsolute.x) !== null && _n$positionAbsolute$x !== void 0 ? _n$positionAbsolute$x : 0),\n        y: mousePos.y - ((_n$positionAbsolute$y = (_n$positionAbsolute2 = n.positionAbsolute) === null || _n$positionAbsolute2 === void 0 ? void 0 : _n$positionAbsolute2.y) !== null && _n$positionAbsolute$y !== void 0 ? _n$positionAbsolute$y : 0)\n      },\n      delta: {\n        x: 0,\n        y: 0\n      },\n      extent: n.extent,\n      parentNode: n.parentNode,\n      width: n.width,\n      height: n.height\n    };\n  });\n}\nfunction clampNodeExtent(node, extent) {\n  if (!extent || extent === 'parent') {\n    return extent;\n  }\n  return [extent[0], [extent[1][0] - (node.width || 0), extent[1][1] - (node.height || 0)]];\n}\nfunction calcNextPosition(node, nextPosition, nodeInternals, nodeExtent) {\n  var nodeOrigin = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [0, 0];\n  var onError = arguments.length > 5 ? arguments[5] : undefined;\n  var clampedNodeExtent = clampNodeExtent(node, node.extent || nodeExtent);\n  var currentExtent = clampedNodeExtent;\n  if (node.extent === 'parent') {\n    if (node.parentNode && node.width && node.height) {\n      var parent = nodeInternals.get(node.parentNode);\n      var _getNodePositionWithO3 = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute,\n        parentX = _getNodePositionWithO3.x,\n        parentY = _getNodePositionWithO3.y;\n      currentExtent = parent && isNumeric(parentX) && isNumeric(parentY) && isNumeric(parent.width) && isNumeric(parent.height) ? [[parentX + node.width * nodeOrigin[0], parentY + node.height * nodeOrigin[1]], [parentX + parent.width - node.width + node.width * nodeOrigin[0], parentY + parent.height - node.height + node.height * nodeOrigin[1]]] : currentExtent;\n    } else {\n      onError === null || onError === void 0 ? void 0 : onError('005', errorMessages['error005']());\n      currentExtent = clampedNodeExtent;\n    }\n  } else if (node.extent && node.parentNode) {\n    var _parent = nodeInternals.get(node.parentNode);\n    var _getNodePositionWithO4 = getNodePositionWithOrigin(_parent, nodeOrigin).positionAbsolute,\n      _parentX = _getNodePositionWithO4.x,\n      _parentY = _getNodePositionWithO4.y;\n    currentExtent = [[node.extent[0][0] + _parentX, node.extent[0][1] + _parentY], [node.extent[1][0] + _parentX, node.extent[1][1] + _parentY]];\n  }\n  var parentPosition = {\n    x: 0,\n    y: 0\n  };\n  if (node.parentNode) {\n    var parentNode = nodeInternals.get(node.parentNode);\n    parentPosition = getNodePositionWithOrigin(parentNode, nodeOrigin).positionAbsolute;\n  }\n  var positionAbsolute = currentExtent ? clampPosition(nextPosition, currentExtent) : nextPosition;\n  return {\n    position: {\n      x: positionAbsolute.x - parentPosition.x,\n      y: positionAbsolute.y - parentPosition.y\n    },\n    positionAbsolute: positionAbsolute\n  };\n}\n// returns two params:\n// 1. the dragged node (or the first of the list, if we are dragging a node selection)\n// 2. array of selected nodes (for multi selections)\nfunction getEventHandlerParams(_ref49) {\n  var nodeId = _ref49.nodeId,\n    dragItems = _ref49.dragItems,\n    nodeInternals = _ref49.nodeInternals;\n  var extentedDragItems = dragItems.map(function (n) {\n    var node = nodeInternals.get(n.id);\n    return _objectSpread(_objectSpread({}, node), {}, {\n      position: n.position,\n      positionAbsolute: n.positionAbsolute\n    });\n  });\n  return [nodeId ? extentedDragItems.find(function (n) {\n    return n.id === nodeId;\n  }) : extentedDragItems[0], extentedDragItems];\n}\nvar getHandleBounds = function getHandleBounds(selector, nodeElement, zoom, nodeOrigin) {\n  var handles = nodeElement.querySelectorAll(selector);\n  if (!handles || !handles.length) {\n    return null;\n  }\n  var handlesArray = Array.from(handles);\n  var nodeBounds = nodeElement.getBoundingClientRect();\n  var nodeOffset = {\n    x: nodeBounds.width * nodeOrigin[0],\n    y: nodeBounds.height * nodeOrigin[1]\n  };\n  return handlesArray.map(function (handle) {\n    var handleBounds = handle.getBoundingClientRect();\n    return _objectSpread({\n      id: handle.getAttribute('data-handleid'),\n      position: handle.getAttribute('data-handlepos'),\n      x: (handleBounds.left - nodeBounds.left - nodeOffset.x) / zoom,\n      y: (handleBounds.top - nodeBounds.top - nodeOffset.y) / zoom\n    }, getDimensions(handle));\n  });\n};\nfunction getMouseHandler(id, getState, handler) {\n  return handler === undefined ? handler : function (event) {\n    var node = getState().nodeInternals.get(id);\n    handler(event, _objectSpread({}, node));\n  };\n}\n// this handler is called by\n// 1. the click handler when node is not draggable or selectNodesOnDrag = false\n// or\n// 2. the on drag start handler when node is draggable and selectNodesOnDrag = true\nfunction handleNodeClick(_ref50) {\n  var id = _ref50.id,\n    store = _ref50.store,\n    _ref50$unselect = _ref50.unselect,\n    unselect = _ref50$unselect === void 0 ? false : _ref50$unselect,\n    nodeRef = _ref50.nodeRef;\n  var _store$getState9 = store.getState(),\n    addSelectedNodes = _store$getState9.addSelectedNodes,\n    unselectNodesAndEdges = _store$getState9.unselectNodesAndEdges,\n    multiSelectionActive = _store$getState9.multiSelectionActive,\n    nodeInternals = _store$getState9.nodeInternals;\n  var node = nodeInternals.get(id);\n  store.setState({\n    nodesSelectionActive: false\n  });\n  if (!node.selected) {\n    addSelectedNodes([id]);\n  } else if (unselect || node.selected && multiSelectionActive) {\n    unselectNodesAndEdges({\n      nodes: [node]\n    });\n    requestAnimationFrame(function () {\n      var _nodeRef$current;\n      return nodeRef === null || nodeRef === void 0 || (_nodeRef$current = nodeRef.current) === null || _nodeRef$current === void 0 ? void 0 : _nodeRef$current.blur();\n    });\n  }\n}\nfunction useGetPointerPosition() {\n  var store = useStoreApi();\n  // returns the pointer position projected to the RF coordinate system\n  var getPointerPosition = useCallback(function (_ref51) {\n    var sourceEvent = _ref51.sourceEvent;\n    var _store$getState10 = store.getState(),\n      transform = _store$getState10.transform,\n      snapGrid = _store$getState10.snapGrid,\n      snapToGrid = _store$getState10.snapToGrid;\n    var x = sourceEvent.touches ? sourceEvent.touches[0].clientX : sourceEvent.clientX;\n    var y = sourceEvent.touches ? sourceEvent.touches[0].clientY : sourceEvent.clientY;\n    var pointerPos = {\n      x: (x - transform[0]) / transform[2],\n      y: (y - transform[1]) / transform[2]\n    };\n    // we need the snapped position in order to be able to skip unnecessary drag events\n    return _objectSpread({\n      xSnapped: snapToGrid ? snapGrid[0] * Math.round(pointerPos.x / snapGrid[0]) : pointerPos.x,\n      ySnapped: snapToGrid ? snapGrid[1] * Math.round(pointerPos.y / snapGrid[1]) : pointerPos.y\n    }, pointerPos);\n  }, []);\n  return getPointerPosition;\n}\nfunction wrapSelectionDragFunc(selectionFunc) {\n  return function (event, _, nodes) {\n    return selectionFunc === null || selectionFunc === void 0 ? void 0 : selectionFunc(event, nodes);\n  };\n}\nfunction useDrag(_ref52) {\n  var nodeRef = _ref52.nodeRef,\n    _ref52$disabled = _ref52.disabled,\n    disabled = _ref52$disabled === void 0 ? false : _ref52$disabled,\n    noDragClassName = _ref52.noDragClassName,\n    handleSelector = _ref52.handleSelector,\n    nodeId = _ref52.nodeId,\n    isSelectable = _ref52.isSelectable,\n    selectNodesOnDrag = _ref52.selectNodesOnDrag;\n  var store = useStoreApi();\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    dragging = _useState8[0],\n    setDragging = _useState8[1];\n  var dragItems = useRef([]);\n  var lastPos = useRef({\n    x: null,\n    y: null\n  });\n  var autoPanId = useRef(0);\n  var containerBounds = useRef(null);\n  var mousePosition = useRef({\n    x: 0,\n    y: 0\n  });\n  var dragEvent = useRef(null);\n  var autoPanStarted = useRef(false);\n  var getPointerPosition = useGetPointerPosition();\n  useEffect(function () {\n    if (nodeRef !== null && nodeRef !== void 0 && nodeRef.current) {\n      var selection = select(nodeRef.current);\n      var updateNodes = function updateNodes(_ref53) {\n        var x = _ref53.x,\n          y = _ref53.y;\n        var _store$getState11 = store.getState(),\n          nodeInternals = _store$getState11.nodeInternals,\n          onNodeDrag = _store$getState11.onNodeDrag,\n          onSelectionDrag = _store$getState11.onSelectionDrag,\n          updateNodePositions = _store$getState11.updateNodePositions,\n          nodeExtent = _store$getState11.nodeExtent,\n          snapGrid = _store$getState11.snapGrid,\n          snapToGrid = _store$getState11.snapToGrid,\n          nodeOrigin = _store$getState11.nodeOrigin,\n          onError = _store$getState11.onError;\n        lastPos.current = {\n          x: x,\n          y: y\n        };\n        var hasChange = false;\n        dragItems.current = dragItems.current.map(function (n) {\n          var nextPosition = {\n            x: x - n.distance.x,\n            y: y - n.distance.y\n          };\n          if (snapToGrid) {\n            nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n            nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n          }\n          var updatedPos = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, nodeOrigin, onError);\n          // we want to make sure that we only fire a change event when there is a changes\n          hasChange = hasChange || n.position.x !== updatedPos.position.x || n.position.y !== updatedPos.position.y;\n          n.position = updatedPos.position;\n          n.positionAbsolute = updatedPos.positionAbsolute;\n          return n;\n        });\n        if (!hasChange) {\n          return;\n        }\n        updateNodePositions(dragItems.current, true, true);\n        setDragging(true);\n        var onDrag = nodeId ? onNodeDrag : wrapSelectionDragFunc(onSelectionDrag);\n        if (onDrag && dragEvent.current) {\n          var _getEventHandlerParam = getEventHandlerParams({\n              nodeId: nodeId,\n              dragItems: dragItems.current,\n              nodeInternals: nodeInternals\n            }),\n            _getEventHandlerParam2 = _slicedToArray(_getEventHandlerParam, 2),\n            currentNode = _getEventHandlerParam2[0],\n            nodes = _getEventHandlerParam2[1];\n          onDrag(dragEvent.current, currentNode, nodes);\n        }\n      };\n      var autoPan = function autoPan() {\n        if (!containerBounds.current) {\n          return;\n        }\n        var _calcAutoPan3 = calcAutoPan(mousePosition.current, containerBounds.current),\n          _calcAutoPan4 = _slicedToArray(_calcAutoPan3, 2),\n          xMovement = _calcAutoPan4[0],\n          yMovement = _calcAutoPan4[1];\n        if (xMovement !== 0 || yMovement !== 0) {\n          var _lastPos$current$x, _lastPos$current$y;\n          var _store$getState12 = store.getState(),\n            transform = _store$getState12.transform,\n            panBy = _store$getState12.panBy;\n          lastPos.current.x = ((_lastPos$current$x = lastPos.current.x) !== null && _lastPos$current$x !== void 0 ? _lastPos$current$x : 0) - xMovement / transform[2];\n          lastPos.current.y = ((_lastPos$current$y = lastPos.current.y) !== null && _lastPos$current$y !== void 0 ? _lastPos$current$y : 0) - yMovement / transform[2];\n          if (panBy({\n            x: xMovement,\n            y: yMovement\n          })) {\n            updateNodes(lastPos.current);\n          }\n        }\n        autoPanId.current = requestAnimationFrame(autoPan);\n      };\n      if (disabled) {\n        selection.on('.drag', null);\n      } else {\n        var dragHandler = drag().on('start', function (event) {\n          var _store$getState13 = store.getState(),\n            nodeInternals = _store$getState13.nodeInternals,\n            multiSelectionActive = _store$getState13.multiSelectionActive,\n            domNode = _store$getState13.domNode,\n            nodesDraggable = _store$getState13.nodesDraggable,\n            unselectNodesAndEdges = _store$getState13.unselectNodesAndEdges,\n            onNodeDragStart = _store$getState13.onNodeDragStart,\n            onSelectionDragStart = _store$getState13.onSelectionDragStart;\n          var onStart = nodeId ? onNodeDragStart : wrapSelectionDragFunc(onSelectionDragStart);\n          if (!selectNodesOnDrag && !multiSelectionActive && nodeId) {\n            var _nodeInternals$get;\n            if (!((_nodeInternals$get = nodeInternals.get(nodeId)) !== null && _nodeInternals$get !== void 0 && _nodeInternals$get.selected)) {\n              // we need to reset selected nodes when selectNodesOnDrag=false\n              unselectNodesAndEdges();\n            }\n          }\n          if (nodeId && isSelectable && selectNodesOnDrag) {\n            handleNodeClick({\n              id: nodeId,\n              store: store,\n              nodeRef: nodeRef\n            });\n          }\n          var pointerPos = getPointerPosition(event);\n          lastPos.current = pointerPos;\n          dragItems.current = getDragItems(nodeInternals, nodesDraggable, pointerPos, nodeId);\n          if (onStart && dragItems.current) {\n            var _getEventHandlerParam3 = getEventHandlerParams({\n                nodeId: nodeId,\n                dragItems: dragItems.current,\n                nodeInternals: nodeInternals\n              }),\n              _getEventHandlerParam4 = _slicedToArray(_getEventHandlerParam3, 2),\n              currentNode = _getEventHandlerParam4[0],\n              nodes = _getEventHandlerParam4[1];\n            onStart(event.sourceEvent, currentNode, nodes);\n          }\n          containerBounds.current = (domNode === null || domNode === void 0 ? void 0 : domNode.getBoundingClientRect()) || null;\n          mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n        }).on('drag', function (event) {\n          var pointerPos = getPointerPosition(event);\n          var _store$getState14 = store.getState(),\n            autoPanOnNodeDrag = _store$getState14.autoPanOnNodeDrag;\n          if (!autoPanStarted.current && autoPanOnNodeDrag) {\n            autoPanStarted.current = true;\n            autoPan();\n          }\n          // skip events without movement\n          if ((lastPos.current.x !== pointerPos.xSnapped || lastPos.current.y !== pointerPos.ySnapped) && dragItems.current) {\n            dragEvent.current = event.sourceEvent;\n            mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n            updateNodes(pointerPos);\n          }\n        }).on('end', function (event) {\n          setDragging(false);\n          autoPanStarted.current = false;\n          cancelAnimationFrame(autoPanId.current);\n          if (dragItems.current) {\n            var _store$getState15 = store.getState(),\n              updateNodePositions = _store$getState15.updateNodePositions,\n              nodeInternals = _store$getState15.nodeInternals,\n              onNodeDragStop = _store$getState15.onNodeDragStop,\n              onSelectionDragStop = _store$getState15.onSelectionDragStop;\n            var onStop = nodeId ? onNodeDragStop : wrapSelectionDragFunc(onSelectionDragStop);\n            updateNodePositions(dragItems.current, false, false);\n            if (onStop) {\n              var _getEventHandlerParam5 = getEventHandlerParams({\n                  nodeId: nodeId,\n                  dragItems: dragItems.current,\n                  nodeInternals: nodeInternals\n                }),\n                _getEventHandlerParam6 = _slicedToArray(_getEventHandlerParam5, 2),\n                currentNode = _getEventHandlerParam6[0],\n                nodes = _getEventHandlerParam6[1];\n              onStop(event.sourceEvent, currentNode, nodes);\n            }\n          }\n        }).filter(function (event) {\n          var target = event.target;\n          var isDraggable = !event.button && (!noDragClassName || !hasSelector(target, \".\".concat(noDragClassName), nodeRef)) && (!handleSelector || hasSelector(target, handleSelector, nodeRef));\n          return isDraggable;\n        });\n        selection.call(dragHandler);\n        return function () {\n          selection.on('.drag', null);\n        };\n      }\n    }\n  }, [nodeRef, disabled, noDragClassName, handleSelector, isSelectable, store, nodeId, selectNodesOnDrag, getPointerPosition]);\n  return dragging;\n}\nfunction useUpdateNodePositions() {\n  var store = useStoreApi();\n  var updatePositions = useCallback(function (params) {\n    var _store$getState16 = store.getState(),\n      nodeInternals = _store$getState16.nodeInternals,\n      nodeExtent = _store$getState16.nodeExtent,\n      updateNodePositions = _store$getState16.updateNodePositions,\n      getNodes = _store$getState16.getNodes,\n      snapToGrid = _store$getState16.snapToGrid,\n      snapGrid = _store$getState16.snapGrid,\n      onError = _store$getState16.onError,\n      nodesDraggable = _store$getState16.nodesDraggable;\n    var selectedNodes = getNodes().filter(function (n) {\n      return n.selected && (n.draggable || nodesDraggable && typeof n.draggable === 'undefined');\n    });\n    // by default a node moves 5px on each key press, or 20px if shift is pressed\n    // if snap grid is enabled, we use that for the velocity.\n    var xVelo = snapToGrid ? snapGrid[0] : 5;\n    var yVelo = snapToGrid ? snapGrid[1] : 5;\n    var factor = params.isShiftPressed ? 4 : 1;\n    var positionDiffX = params.x * xVelo * factor;\n    var positionDiffY = params.y * yVelo * factor;\n    var nodeUpdates = selectedNodes.map(function (n) {\n      if (n.positionAbsolute) {\n        var nextPosition = {\n          x: n.positionAbsolute.x + positionDiffX,\n          y: n.positionAbsolute.y + positionDiffY\n        };\n        if (snapToGrid) {\n          nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n          nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n        }\n        var _calcNextPosition = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, undefined, onError),\n          positionAbsolute = _calcNextPosition.positionAbsolute,\n          position = _calcNextPosition.position;\n        n.position = position;\n        n.positionAbsolute = positionAbsolute;\n      }\n      return n;\n    });\n    updateNodePositions(nodeUpdates, true, false);\n  }, []);\n  return updatePositions;\n}\nvar arrowKeyDiffs = {\n  ArrowUp: {\n    x: 0,\n    y: -1\n  },\n  ArrowDown: {\n    x: 0,\n    y: 1\n  },\n  ArrowLeft: {\n    x: -1,\n    y: 0\n  },\n  ArrowRight: {\n    x: 1,\n    y: 0\n  }\n};\nvar wrapNode = function wrapNode(NodeComponent) {\n  var NodeWrapper = function NodeWrapper(_ref54) {\n    var id = _ref54.id,\n      type = _ref54.type,\n      data = _ref54.data,\n      xPos = _ref54.xPos,\n      yPos = _ref54.yPos,\n      xPosOrigin = _ref54.xPosOrigin,\n      yPosOrigin = _ref54.yPosOrigin,\n      selected = _ref54.selected,\n      onClick = _ref54.onClick,\n      onMouseEnter = _ref54.onMouseEnter,\n      onMouseMove = _ref54.onMouseMove,\n      onMouseLeave = _ref54.onMouseLeave,\n      onContextMenu = _ref54.onContextMenu,\n      onDoubleClick = _ref54.onDoubleClick,\n      style = _ref54.style,\n      className = _ref54.className,\n      isDraggable = _ref54.isDraggable,\n      isSelectable = _ref54.isSelectable,\n      isConnectable = _ref54.isConnectable,\n      isFocusable = _ref54.isFocusable,\n      selectNodesOnDrag = _ref54.selectNodesOnDrag,\n      sourcePosition = _ref54.sourcePosition,\n      targetPosition = _ref54.targetPosition,\n      hidden = _ref54.hidden,\n      resizeObserver = _ref54.resizeObserver,\n      dragHandle = _ref54.dragHandle,\n      zIndex = _ref54.zIndex,\n      isParent = _ref54.isParent,\n      noDragClassName = _ref54.noDragClassName,\n      noPanClassName = _ref54.noPanClassName,\n      initialized = _ref54.initialized,\n      disableKeyboardA11y = _ref54.disableKeyboardA11y,\n      ariaLabel = _ref54.ariaLabel,\n      rfId = _ref54.rfId;\n    var store = useStoreApi();\n    var nodeRef = useRef(null);\n    var prevSourcePosition = useRef(sourcePosition);\n    var prevTargetPosition = useRef(targetPosition);\n    var prevType = useRef(type);\n    var hasPointerEvents = isSelectable || isDraggable || onClick || onMouseEnter || onMouseMove || onMouseLeave;\n    var updatePositions = useUpdateNodePositions();\n    var onMouseEnterHandler = getMouseHandler(id, store.getState, onMouseEnter);\n    var onMouseMoveHandler = getMouseHandler(id, store.getState, onMouseMove);\n    var onMouseLeaveHandler = getMouseHandler(id, store.getState, onMouseLeave);\n    var onContextMenuHandler = getMouseHandler(id, store.getState, onContextMenu);\n    var onDoubleClickHandler = getMouseHandler(id, store.getState, onDoubleClick);\n    var onSelectNodeHandler = function onSelectNodeHandler(event) {\n      if (isSelectable && (!selectNodesOnDrag || !isDraggable)) {\n        // this handler gets called within the drag start event when selectNodesOnDrag=true\n        handleNodeClick({\n          id: id,\n          store: store,\n          nodeRef: nodeRef\n        });\n      }\n      if (onClick) {\n        var node = store.getState().nodeInternals.get(id);\n        onClick(event, _objectSpread({}, node));\n      }\n    };\n    var onKeyDown = function onKeyDown(event) {\n      if (isInputDOMNode(event)) {\n        return;\n      }\n      if (elementSelectionKeys.includes(event.key) && isSelectable) {\n        var unselect = event.key === 'Escape';\n        handleNodeClick({\n          id: id,\n          store: store,\n          unselect: unselect,\n          nodeRef: nodeRef\n        });\n      } else if (!disableKeyboardA11y && isDraggable && selected && Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n        store.setState({\n          ariaLiveMessage: \"Moved selected node \".concat(event.key.replace('Arrow', '').toLowerCase(), \". New position, x: \").concat(~~xPos, \", y: \").concat(~~yPos)\n        });\n        updatePositions({\n          x: arrowKeyDiffs[event.key].x,\n          y: arrowKeyDiffs[event.key].y,\n          isShiftPressed: event.shiftKey\n        });\n      }\n    };\n    useEffect(function () {\n      if (nodeRef.current && !hidden) {\n        var currNode = nodeRef.current;\n        resizeObserver === null || resizeObserver === void 0 ? void 0 : resizeObserver.observe(currNode);\n        return function () {\n          return resizeObserver === null || resizeObserver === void 0 ? void 0 : resizeObserver.unobserve(currNode);\n        };\n      }\n    }, [hidden]);\n    useEffect(function () {\n      // when the user programmatically changes the source or handle position, we re-initialize the node\n      var typeChanged = prevType.current !== type;\n      var sourcePosChanged = prevSourcePosition.current !== sourcePosition;\n      var targetPosChanged = prevTargetPosition.current !== targetPosition;\n      if (nodeRef.current && (typeChanged || sourcePosChanged || targetPosChanged)) {\n        if (typeChanged) {\n          prevType.current = type;\n        }\n        if (sourcePosChanged) {\n          prevSourcePosition.current = sourcePosition;\n        }\n        if (targetPosChanged) {\n          prevTargetPosition.current = targetPosition;\n        }\n        store.getState().updateNodeDimensions([{\n          id: id,\n          nodeElement: nodeRef.current,\n          forceUpdate: true\n        }]);\n      }\n    }, [id, type, sourcePosition, targetPosition]);\n    var dragging = useDrag({\n      nodeRef: nodeRef,\n      disabled: hidden || !isDraggable,\n      noDragClassName: noDragClassName,\n      handleSelector: dragHandle,\n      nodeId: id,\n      isSelectable: isSelectable,\n      selectNodesOnDrag: selectNodesOnDrag\n    });\n    if (hidden) {\n      return null;\n    }\n    return jsx(\"div\", {\n      className: cc(['react-flow__node', \"react-flow__node-\".concat(type), _defineProperty({}, noPanClassName, isDraggable), className, {\n        selected: selected,\n        selectable: isSelectable,\n        parent: isParent,\n        dragging: dragging\n      }]),\n      ref: nodeRef,\n      style: _objectSpread({\n        zIndex: zIndex,\n        transform: \"translate(\".concat(xPosOrigin, \"px,\").concat(yPosOrigin, \"px)\"),\n        pointerEvents: hasPointerEvents ? 'all' : 'none',\n        visibility: initialized ? 'visible' : 'hidden'\n      }, style),\n      \"data-id\": id,\n      \"data-testid\": \"rf__node-\".concat(id),\n      onMouseEnter: onMouseEnterHandler,\n      onMouseMove: onMouseMoveHandler,\n      onMouseLeave: onMouseLeaveHandler,\n      onContextMenu: onContextMenuHandler,\n      onClick: onSelectNodeHandler,\n      onDoubleClick: onDoubleClickHandler,\n      onKeyDown: isFocusable ? onKeyDown : undefined,\n      tabIndex: isFocusable ? 0 : undefined,\n      role: isFocusable ? 'button' : undefined,\n      \"aria-describedby\": disableKeyboardA11y ? undefined : \"\".concat(ARIA_NODE_DESC_KEY, \"-\").concat(rfId),\n      \"aria-label\": ariaLabel,\n      children: jsx(Provider, {\n        value: id,\n        children: jsx(NodeComponent, {\n          id: id,\n          data: data,\n          type: type,\n          xPos: xPos,\n          yPos: yPos,\n          selected: selected,\n          isConnectable: isConnectable,\n          sourcePosition: sourcePosition,\n          targetPosition: targetPosition,\n          dragging: dragging,\n          dragHandle: dragHandle,\n          zIndex: zIndex\n        })\n      })\n    });\n  };\n  NodeWrapper.displayName = 'NodeWrapper';\n  return memo(NodeWrapper);\n};\nfunction createNodeTypes(nodeTypes) {\n  var standardTypes = {\n    input: wrapNode(nodeTypes.input || InputNode$1),\n    default: wrapNode(nodeTypes.default || DefaultNode$1),\n    output: wrapNode(nodeTypes.output || OutputNode$1),\n    group: wrapNode(nodeTypes.group || GroupNode)\n  };\n  var wrappedTypes = {};\n  var specialTypes = Object.keys(nodeTypes).filter(function (k) {\n    return !['input', 'default', 'output', 'group'].includes(k);\n  }).reduce(function (res, key) {\n    res[key] = wrapNode(nodeTypes[key] || DefaultNode$1);\n    return res;\n  }, wrappedTypes);\n  return _objectSpread(_objectSpread({}, standardTypes), specialTypes);\n}\nvar getPositionWithOrigin = function getPositionWithOrigin(_ref56) {\n  var x = _ref56.x,\n    y = _ref56.y,\n    width = _ref56.width,\n    height = _ref56.height,\n    origin = _ref56.origin;\n  if (!width || !height) {\n    return {\n      x: x,\n      y: y\n    };\n  }\n  if (origin[0] < 0 || origin[1] < 0 || origin[0] > 1 || origin[1] > 1) {\n    return {\n      x: x,\n      y: y\n    };\n  }\n  return {\n    x: x - width * origin[0],\n    y: y - height * origin[1]\n  };\n};\nvar doc = typeof document !== 'undefined' ? document : null;\n// the keycode can be a string 'a' or an array of strings ['a', 'a+d']\n// a string means a single key 'a' or a combination when '+' is used 'a+d'\n// an array means different possibilites. Explainer: ['a', 'd+s'] here the\n// user can use the single key 'a' or the combination 'd' + 's'\nvar useKeyPress = function useKeyPress() {\n  var keyCode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    target: doc\n  };\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    keyPressed = _useState10[0],\n    setKeyPressed = _useState10[1];\n  // we need to remember if a modifier key is pressed in order to track it\n  var modifierPressed = useRef(false);\n  // we need to remember the pressed keys in order to support combinations\n  var pressedKeys = useRef(new Set([]));\n  // keyCodes = array with single keys [['a']] or key combinations [['a', 's']]\n  // keysToWatch = array with all keys flattened ['a', 'd', 'ShiftLeft']\n  // used to check if we store event.code or event.key. When the code is in the list of keysToWatch\n  // we use the code otherwise the key. Explainer: When you press the left \"command\" key, the code is \"MetaLeft\"\n  // and the key is \"Meta\". We want users to be able to pass keys and codes so we assume that the key is meant when\n  // we can't find it in the list of keysToWatch.\n  var _useMemo = useMemo(function () {\n      if (keyCode !== null) {\n        var keyCodeArr = Array.isArray(keyCode) ? keyCode : [keyCode];\n        var keys = keyCodeArr.filter(function (kc) {\n          return typeof kc === 'string';\n        }).map(function (kc) {\n          return kc.split('+');\n        });\n        var keysFlat = keys.reduce(function (res, item) {\n          return res.concat.apply(res, _toConsumableArray(item));\n        }, []);\n        return [keys, keysFlat];\n      }\n      return [[], []];\n    }, [keyCode]),\n    _useMemo2 = _slicedToArray(_useMemo, 2),\n    keyCodes = _useMemo2[0],\n    keysToWatch = _useMemo2[1];\n  useEffect(function () {\n    if (keyCode !== null) {\n      var _options$target, _options$target2;\n      var downHandler = function downHandler(event) {\n        modifierPressed.current = event.ctrlKey || event.metaKey || event.shiftKey;\n        if (!modifierPressed.current && isInputDOMNode(event)) {\n          return false;\n        }\n        var keyOrCode = useKeyOrCode(event.code, keysToWatch);\n        pressedKeys.current.add(event[keyOrCode]);\n        if (isMatchingKey(keyCodes, pressedKeys.current, false)) {\n          event.preventDefault();\n          setKeyPressed(true);\n        }\n      };\n      var upHandler = function upHandler(event) {\n        if (!modifierPressed.current && isInputDOMNode(event)) {\n          return false;\n        }\n        var keyOrCode = useKeyOrCode(event.code, keysToWatch);\n        if (isMatchingKey(keyCodes, pressedKeys.current, true)) {\n          setKeyPressed(false);\n          pressedKeys.current.clear();\n        } else {\n          pressedKeys.current.delete(event[keyOrCode]);\n        }\n        modifierPressed.current = false;\n      };\n      var resetHandler = function resetHandler() {\n        pressedKeys.current.clear();\n        setKeyPressed(false);\n      };\n      options === null || options === void 0 || (_options$target = options.target) === null || _options$target === void 0 ? void 0 : _options$target.addEventListener('keydown', downHandler);\n      options === null || options === void 0 || (_options$target2 = options.target) === null || _options$target2 === void 0 ? void 0 : _options$target2.addEventListener('keyup', upHandler);\n      window.addEventListener('blur', resetHandler);\n      return function () {\n        var _options$target3, _options$target4;\n        options === null || options === void 0 || (_options$target3 = options.target) === null || _options$target3 === void 0 ? void 0 : _options$target3.removeEventListener('keydown', downHandler);\n        options === null || options === void 0 || (_options$target4 = options.target) === null || _options$target4 === void 0 ? void 0 : _options$target4.removeEventListener('keyup', upHandler);\n        window.removeEventListener('blur', resetHandler);\n      };\n    }\n  }, [keyCode, setKeyPressed]);\n  return keyPressed;\n};\n// utils\nfunction isMatchingKey(keyCodes, pressedKeys, isUp) {\n  return keyCodes\n  // we only want to compare same sizes of keyCode definitions\n  // and pressed keys. When the user specified 'Meta' as a key somewhere\n  // this would also be truthy without this filter when user presses 'Meta' + 'r'\n  .filter(function (keys) {\n    return isUp || keys.length === pressedKeys.size;\n  })\n  // since we want to support multiple possibilities only one of the\n  // combinations need to be part of the pressed keys\n  .some(function (keys) {\n    return keys.every(function (k) {\n      return pressedKeys.has(k);\n    });\n  });\n}\nfunction useKeyOrCode(eventCode, keysToWatch) {\n  return keysToWatch.includes(eventCode) ? 'code' : 'key';\n}\nfunction calculateXYZPosition(node, nodeInternals, result, nodeOrigin) {\n  var _result$x, _result$y, _parentNode$internals, _parentNode$internals2, _result$z, _parentNode$internals3, _parentNode$internals4, _result$z2;\n  if (!node.parentNode) {\n    return result;\n  }\n  var parentNode = nodeInternals.get(node.parentNode);\n  var parentNodePosition = getNodePositionWithOrigin(parentNode, nodeOrigin);\n  return calculateXYZPosition(parentNode, nodeInternals, {\n    x: ((_result$x = result.x) !== null && _result$x !== void 0 ? _result$x : 0) + parentNodePosition.x,\n    y: ((_result$y = result.y) !== null && _result$y !== void 0 ? _result$y : 0) + parentNodePosition.y,\n    z: ((_parentNode$internals = (_parentNode$internals2 = parentNode[internalsSymbol]) === null || _parentNode$internals2 === void 0 ? void 0 : _parentNode$internals2.z) !== null && _parentNode$internals !== void 0 ? _parentNode$internals : 0) > ((_result$z = result.z) !== null && _result$z !== void 0 ? _result$z : 0) ? (_parentNode$internals3 = (_parentNode$internals4 = parentNode[internalsSymbol]) === null || _parentNode$internals4 === void 0 ? void 0 : _parentNode$internals4.z) !== null && _parentNode$internals3 !== void 0 ? _parentNode$internals3 : 0 : (_result$z2 = result.z) !== null && _result$z2 !== void 0 ? _result$z2 : 0\n  }, nodeOrigin);\n}\nfunction updateAbsoluteNodePositions(nodeInternals, nodeOrigin, parentNodes) {\n  nodeInternals.forEach(function (node) {\n    if (node.parentNode && !nodeInternals.has(node.parentNode)) {\n      throw new Error(\"Parent node \".concat(node.parentNode, \" not found\"));\n    }\n    if (node.parentNode || parentNodes !== null && parentNodes !== void 0 && parentNodes[node.id]) {\n      var _node$internalsSymbol2, _node$internalsSymbol3;\n      var _calculateXYZPosition = calculateXYZPosition(node, nodeInternals, _objectSpread(_objectSpread({}, node.position), {}, {\n          z: (_node$internalsSymbol2 = (_node$internalsSymbol3 = node[internalsSymbol]) === null || _node$internalsSymbol3 === void 0 ? void 0 : _node$internalsSymbol3.z) !== null && _node$internalsSymbol2 !== void 0 ? _node$internalsSymbol2 : 0\n        }), nodeOrigin),\n        x = _calculateXYZPosition.x,\n        y = _calculateXYZPosition.y,\n        z = _calculateXYZPosition.z;\n      node.positionAbsolute = {\n        x: x,\n        y: y\n      };\n      node[internalsSymbol].z = z;\n      if (parentNodes !== null && parentNodes !== void 0 && parentNodes[node.id]) {\n        node[internalsSymbol].isParent = true;\n      }\n    }\n  });\n}\nfunction createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) {\n  var nextNodeInternals = new Map();\n  var parentNodes = {};\n  var selectedNodeZ = elevateNodesOnSelect ? 1000 : 0;\n  nodes.forEach(function (node) {\n    var _currInternals$intern;\n    var z = (isNumeric(node.zIndex) ? node.zIndex : 0) + (node.selected ? selectedNodeZ : 0);\n    var currInternals = nodeInternals.get(node.id);\n    var internals = _objectSpread(_objectSpread({\n      width: currInternals === null || currInternals === void 0 ? void 0 : currInternals.width,\n      height: currInternals === null || currInternals === void 0 ? void 0 : currInternals.height\n    }, node), {}, {\n      positionAbsolute: {\n        x: node.position.x,\n        y: node.position.y\n      }\n    });\n    if (node.parentNode) {\n      internals.parentNode = node.parentNode;\n      parentNodes[node.parentNode] = true;\n    }\n    Object.defineProperty(internals, internalsSymbol, {\n      enumerable: false,\n      value: {\n        handleBounds: currInternals === null || currInternals === void 0 || (_currInternals$intern = currInternals[internalsSymbol]) === null || _currInternals$intern === void 0 ? void 0 : _currInternals$intern.handleBounds,\n        z: z\n      }\n    });\n    nextNodeInternals.set(node.id, internals);\n  });\n  updateAbsoluteNodePositions(nextNodeInternals, nodeOrigin, parentNodes);\n  return nextNodeInternals;\n}\nfunction _fitView(get) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _get = get(),\n    getNodes = _get.getNodes,\n    width = _get.width,\n    height = _get.height,\n    minZoom = _get.minZoom,\n    maxZoom = _get.maxZoom,\n    d3Zoom = _get.d3Zoom,\n    d3Selection = _get.d3Selection,\n    fitViewOnInitDone = _get.fitViewOnInitDone,\n    fitViewOnInit = _get.fitViewOnInit,\n    nodeOrigin = _get.nodeOrigin;\n  var isInitialFitView = options.initial && !fitViewOnInitDone && fitViewOnInit;\n  var d3initialized = d3Zoom && d3Selection;\n  if (d3initialized && (isInitialFitView || !options.initial)) {\n    var nodes = getNodes().filter(function (n) {\n      var _options$nodes;\n      var isVisible = options.includeHiddenNodes ? n.width && n.height : !n.hidden;\n      if ((_options$nodes = options.nodes) !== null && _options$nodes !== void 0 && _options$nodes.length) {\n        return isVisible && options.nodes.some(function (optionNode) {\n          return optionNode.id === n.id;\n        });\n      }\n      return isVisible;\n    });\n    var nodesInitialized = nodes.every(function (n) {\n      return n.width && n.height;\n    });\n    if (nodes.length > 0 && nodesInitialized) {\n      var _options$minZoom, _options$maxZoom, _options$padding;\n      var bounds = getRectOfNodes(nodes, nodeOrigin);\n      var _getTransformForBound = getTransformForBounds(bounds, width, height, (_options$minZoom = options.minZoom) !== null && _options$minZoom !== void 0 ? _options$minZoom : minZoom, (_options$maxZoom = options.maxZoom) !== null && _options$maxZoom !== void 0 ? _options$maxZoom : maxZoom, (_options$padding = options.padding) !== null && _options$padding !== void 0 ? _options$padding : 0.1),\n        _getTransformForBound2 = _slicedToArray(_getTransformForBound, 3),\n        x = _getTransformForBound2[0],\n        y = _getTransformForBound2[1],\n        _zoom = _getTransformForBound2[2];\n      var nextTransform = zoomIdentity.translate(x, y).scale(_zoom);\n      if (typeof options.duration === 'number' && options.duration > 0) {\n        d3Zoom.transform(getD3Transition(d3Selection, options.duration), nextTransform);\n      } else {\n        d3Zoom.transform(d3Selection, nextTransform);\n      }\n      return true;\n    }\n  }\n  return false;\n}\nfunction handleControlledNodeSelectionChange(nodeChanges, nodeInternals) {\n  nodeChanges.forEach(function (change) {\n    var node = nodeInternals.get(change.id);\n    if (node) {\n      var _objectSpread2;\n      nodeInternals.set(node.id, _objectSpread(_objectSpread({}, node), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, internalsSymbol, node[internalsSymbol]), _defineProperty(_objectSpread2, \"selected\", change.selected), _objectSpread2)));\n    }\n  });\n  return new Map(nodeInternals);\n}\nfunction handleControlledEdgeSelectionChange(edgeChanges, edges) {\n  return edges.map(function (e) {\n    var change = edgeChanges.find(function (change) {\n      return change.id === e.id;\n    });\n    if (change) {\n      e.selected = change.selected;\n    }\n    return e;\n  });\n}\nfunction updateNodesAndEdgesSelections(_ref57) {\n  var changedNodes = _ref57.changedNodes,\n    changedEdges = _ref57.changedEdges,\n    get = _ref57.get,\n    set = _ref57.set;\n  var _get2 = get(),\n    nodeInternals = _get2.nodeInternals,\n    edges = _get2.edges,\n    onNodesChange = _get2.onNodesChange,\n    onEdgesChange = _get2.onEdgesChange,\n    hasDefaultNodes = _get2.hasDefaultNodes,\n    hasDefaultEdges = _get2.hasDefaultEdges;\n  if (changedNodes !== null && changedNodes !== void 0 && changedNodes.length) {\n    if (hasDefaultNodes) {\n      set({\n        nodeInternals: handleControlledNodeSelectionChange(changedNodes, nodeInternals)\n      });\n    }\n    onNodesChange === null || onNodesChange === void 0 ? void 0 : onNodesChange(changedNodes);\n  }\n  if (changedEdges !== null && changedEdges !== void 0 && changedEdges.length) {\n    if (hasDefaultEdges) {\n      set({\n        edges: handleControlledEdgeSelectionChange(changedEdges, edges)\n      });\n    }\n    onEdgesChange === null || onEdgesChange === void 0 ? void 0 : onEdgesChange(changedEdges);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nvar noop = function noop() {};\nvar initialViewportHelper = {\n  zoomIn: noop,\n  zoomOut: noop,\n  zoomTo: noop,\n  getZoom: function getZoom() {\n    return 1;\n  },\n  setViewport: noop,\n  getViewport: function getViewport() {\n    return {\n      x: 0,\n      y: 0,\n      zoom: 1\n    };\n  },\n  fitView: function fitView() {\n    return false;\n  },\n  setCenter: noop,\n  fitBounds: noop,\n  project: function project(position) {\n    return position;\n  },\n  viewportInitialized: false\n};\nvar selector$b = function selector$b(s) {\n  return {\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection\n  };\n};\nvar useViewportHelper = function useViewportHelper() {\n  var store = useStoreApi();\n  var _useStore5 = useStore(selector$b, shallow),\n    d3Zoom = _useStore5.d3Zoom,\n    d3Selection = _useStore5.d3Selection;\n  var viewportHelperFunctions = useMemo(function () {\n    if (d3Selection && d3Zoom) {\n      return {\n        zoomIn: function zoomIn(options) {\n          return d3Zoom.scaleBy(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), 1.2);\n        },\n        zoomOut: function zoomOut(options) {\n          return d3Zoom.scaleBy(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), 1 / 1.2);\n        },\n        zoomTo: function zoomTo(zoomLevel, options) {\n          return d3Zoom.scaleTo(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), zoomLevel);\n        },\n        getZoom: function getZoom() {\n          return store.getState().transform[2];\n        },\n        setViewport: function setViewport(transform, options) {\n          var _transform$x, _transform$y, _transform$zoom;\n          var _store$getState$trans = _slicedToArray(store.getState().transform, 3),\n            x = _store$getState$trans[0],\n            y = _store$getState$trans[1],\n            zoom = _store$getState$trans[2];\n          var nextTransform = zoomIdentity.translate((_transform$x = transform.x) !== null && _transform$x !== void 0 ? _transform$x : x, (_transform$y = transform.y) !== null && _transform$y !== void 0 ? _transform$y : y).scale((_transform$zoom = transform.zoom) !== null && _transform$zoom !== void 0 ? _transform$zoom : zoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), nextTransform);\n        },\n        getViewport: function getViewport() {\n          var _store$getState$trans2 = _slicedToArray(store.getState().transform, 3),\n            x = _store$getState$trans2[0],\n            y = _store$getState$trans2[1],\n            zoom = _store$getState$trans2[2];\n          return {\n            x: x,\n            y: y,\n            zoom: zoom\n          };\n        },\n        fitView: function fitView(options) {\n          return _fitView(store.getState, options);\n        },\n        setCenter: function setCenter(x, y, options) {\n          var _store$getState17 = store.getState(),\n            width = _store$getState17.width,\n            height = _store$getState17.height,\n            maxZoom = _store$getState17.maxZoom;\n          var nextZoom = typeof (options === null || options === void 0 ? void 0 : options.zoom) !== 'undefined' ? options.zoom : maxZoom;\n          var centerX = width / 2 - x * nextZoom;\n          var centerY = height / 2 - y * nextZoom;\n          var transform = zoomIdentity.translate(centerX, centerY).scale(nextZoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), transform);\n        },\n        fitBounds: function fitBounds(bounds, options) {\n          var _options$padding2;\n          var _store$getState18 = store.getState(),\n            width = _store$getState18.width,\n            height = _store$getState18.height,\n            minZoom = _store$getState18.minZoom,\n            maxZoom = _store$getState18.maxZoom;\n          var _getTransformForBound3 = getTransformForBounds(bounds, width, height, minZoom, maxZoom, (_options$padding2 = options === null || options === void 0 ? void 0 : options.padding) !== null && _options$padding2 !== void 0 ? _options$padding2 : 0.1),\n            _getTransformForBound4 = _slicedToArray(_getTransformForBound3, 3),\n            x = _getTransformForBound4[0],\n            y = _getTransformForBound4[1],\n            zoom = _getTransformForBound4[2];\n          var transform = zoomIdentity.translate(x, y).scale(zoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), transform);\n        },\n        project: function project(position) {\n          var _store$getState19 = store.getState(),\n            transform = _store$getState19.transform,\n            snapToGrid = _store$getState19.snapToGrid,\n            snapGrid = _store$getState19.snapGrid;\n          return pointToRendererPoint(position, transform, snapToGrid, snapGrid);\n        },\n        viewportInitialized: true\n      };\n    }\n    return initialViewportHelper;\n  }, [d3Zoom, d3Selection]);\n  return viewportHelperFunctions;\n};\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nfunction useReactFlow() {\n  var viewportHelper = useViewportHelper();\n  var store = useStoreApi();\n  var getNodes = useCallback(function () {\n    return store.getState().getNodes().map(function (n) {\n      return _objectSpread({}, n);\n    });\n  }, []);\n  var getNode = useCallback(function (id) {\n    return store.getState().nodeInternals.get(id);\n  }, []);\n  var getEdges = useCallback(function () {\n    var _store$getState20 = store.getState(),\n      _store$getState20$edg = _store$getState20.edges,\n      edges = _store$getState20$edg === void 0 ? [] : _store$getState20$edg;\n    return edges.map(function (e) {\n      return _objectSpread({}, e);\n    });\n  }, []);\n  var getEdge = useCallback(function (id) {\n    var _store$getState21 = store.getState(),\n      _store$getState21$edg = _store$getState21.edges,\n      edges = _store$getState21$edg === void 0 ? [] : _store$getState21$edg;\n    return edges.find(function (e) {\n      return e.id === id;\n    });\n  }, []);\n  var setNodes = useCallback(function (payload) {\n    var _store$getState22 = store.getState(),\n      getNodes = _store$getState22.getNodes,\n      setNodes = _store$getState22.setNodes,\n      hasDefaultNodes = _store$getState22.hasDefaultNodes,\n      onNodesChange = _store$getState22.onNodesChange;\n    var nodes = getNodes();\n    var nextNodes = typeof payload === 'function' ? payload(nodes) : payload;\n    if (hasDefaultNodes) {\n      setNodes(nextNodes);\n    } else if (onNodesChange) {\n      var changes = nextNodes.length === 0 ? nodes.map(function (node) {\n        return {\n          type: 'remove',\n          id: node.id\n        };\n      }) : nextNodes.map(function (node) {\n        return {\n          item: node,\n          type: 'reset'\n        };\n      });\n      onNodesChange(changes);\n    }\n  }, []);\n  var setEdges = useCallback(function (payload) {\n    var _store$getState23 = store.getState(),\n      _store$getState23$edg = _store$getState23.edges,\n      edges = _store$getState23$edg === void 0 ? [] : _store$getState23$edg,\n      setEdges = _store$getState23.setEdges,\n      hasDefaultEdges = _store$getState23.hasDefaultEdges,\n      onEdgesChange = _store$getState23.onEdgesChange;\n    var nextEdges = typeof payload === 'function' ? payload(edges) : payload;\n    if (hasDefaultEdges) {\n      setEdges(nextEdges);\n    } else if (onEdgesChange) {\n      var changes = nextEdges.length === 0 ? edges.map(function (edge) {\n        return {\n          type: 'remove',\n          id: edge.id\n        };\n      }) : nextEdges.map(function (edge) {\n        return {\n          item: edge,\n          type: 'reset'\n        };\n      });\n      onEdgesChange(changes);\n    }\n  }, []);\n  var addNodes = useCallback(function (payload) {\n    var nodes = Array.isArray(payload) ? payload : [payload];\n    var _store$getState24 = store.getState(),\n      getNodes = _store$getState24.getNodes,\n      setNodes = _store$getState24.setNodes,\n      hasDefaultNodes = _store$getState24.hasDefaultNodes,\n      onNodesChange = _store$getState24.onNodesChange;\n    if (hasDefaultNodes) {\n      var currentNodes = getNodes();\n      var nextNodes = [].concat(_toConsumableArray(currentNodes), _toConsumableArray(nodes));\n      setNodes(nextNodes);\n    } else if (onNodesChange) {\n      var changes = nodes.map(function (node) {\n        return {\n          item: node,\n          type: 'add'\n        };\n      });\n      onNodesChange(changes);\n    }\n  }, []);\n  var addEdges = useCallback(function (payload) {\n    var nextEdges = Array.isArray(payload) ? payload : [payload];\n    var _store$getState25 = store.getState(),\n      _store$getState25$edg = _store$getState25.edges,\n      edges = _store$getState25$edg === void 0 ? [] : _store$getState25$edg,\n      setEdges = _store$getState25.setEdges,\n      hasDefaultEdges = _store$getState25.hasDefaultEdges,\n      onEdgesChange = _store$getState25.onEdgesChange;\n    if (hasDefaultEdges) {\n      setEdges([].concat(_toConsumableArray(edges), _toConsumableArray(nextEdges)));\n    } else if (onEdgesChange) {\n      var changes = nextEdges.map(function (edge) {\n        return {\n          item: edge,\n          type: 'add'\n        };\n      });\n      onEdgesChange(changes);\n    }\n  }, []);\n  var toObject = useCallback(function () {\n    var _store$getState26 = store.getState(),\n      getNodes = _store$getState26.getNodes,\n      _store$getState26$edg = _store$getState26.edges,\n      edges = _store$getState26$edg === void 0 ? [] : _store$getState26$edg,\n      transform = _store$getState26.transform;\n    var _transform = _slicedToArray(transform, 3),\n      x = _transform[0],\n      y = _transform[1],\n      zoom = _transform[2];\n    return {\n      nodes: getNodes().map(function (n) {\n        return _objectSpread({}, n);\n      }),\n      edges: edges.map(function (e) {\n        return _objectSpread({}, e);\n      }),\n      viewport: {\n        x: x,\n        y: y,\n        zoom: zoom\n      }\n    };\n  }, []);\n  var deleteElements = useCallback(function (_ref58) {\n    var nodesDeleted = _ref58.nodes,\n      edgesDeleted = _ref58.edges;\n    var _store$getState27 = store.getState(),\n      nodeInternals = _store$getState27.nodeInternals,\n      getNodes = _store$getState27.getNodes,\n      edges = _store$getState27.edges,\n      hasDefaultNodes = _store$getState27.hasDefaultNodes,\n      hasDefaultEdges = _store$getState27.hasDefaultEdges,\n      onNodesDelete = _store$getState27.onNodesDelete,\n      onEdgesDelete = _store$getState27.onEdgesDelete,\n      onNodesChange = _store$getState27.onNodesChange,\n      onEdgesChange = _store$getState27.onEdgesChange;\n    var nodeIds = (nodesDeleted || []).map(function (node) {\n      return node.id;\n    });\n    var edgeIds = (edgesDeleted || []).map(function (edge) {\n      return edge.id;\n    });\n    var nodesToRemove = getNodes().reduce(function (res, node) {\n      var parentHit = !nodeIds.includes(node.id) && node.parentNode && res.find(function (n) {\n        return n.id === node.parentNode;\n      });\n      var deletable = typeof node.deletable === 'boolean' ? node.deletable : true;\n      if (deletable && (nodeIds.includes(node.id) || parentHit)) {\n        res.push(node);\n      }\n      return res;\n    }, []);\n    var deletableEdges = edges.filter(function (e) {\n      return typeof e.deletable === 'boolean' ? e.deletable : true;\n    });\n    var initialHitEdges = deletableEdges.filter(function (e) {\n      return edgeIds.includes(e.id);\n    });\n    if (nodesToRemove || initialHitEdges) {\n      var connectedEdges = getConnectedEdges(nodesToRemove, deletableEdges);\n      var edgesToRemove = [].concat(_toConsumableArray(initialHitEdges), _toConsumableArray(connectedEdges));\n      var edgeIdsToRemove = edgesToRemove.reduce(function (res, edge) {\n        if (!res.includes(edge.id)) {\n          res.push(edge.id);\n        }\n        return res;\n      }, []);\n      if (hasDefaultEdges || hasDefaultNodes) {\n        if (hasDefaultEdges) {\n          store.setState({\n            edges: edges.filter(function (e) {\n              return !edgeIdsToRemove.includes(e.id);\n            })\n          });\n        }\n        if (hasDefaultNodes) {\n          nodesToRemove.forEach(function (node) {\n            nodeInternals.delete(node.id);\n          });\n          store.setState({\n            nodeInternals: new Map(nodeInternals)\n          });\n        }\n      }\n      if (edgeIdsToRemove.length > 0) {\n        onEdgesDelete === null || onEdgesDelete === void 0 ? void 0 : onEdgesDelete(edgesToRemove);\n        if (onEdgesChange) {\n          onEdgesChange(edgeIdsToRemove.map(function (id) {\n            return {\n              id: id,\n              type: 'remove'\n            };\n          }));\n        }\n      }\n      if (nodesToRemove.length > 0) {\n        onNodesDelete === null || onNodesDelete === void 0 ? void 0 : onNodesDelete(nodesToRemove);\n        if (onNodesChange) {\n          var nodeChanges = nodesToRemove.map(function (n) {\n            return {\n              id: n.id,\n              type: 'remove'\n            };\n          });\n          onNodesChange(nodeChanges);\n        }\n      }\n    }\n  }, []);\n  var getNodeRect = useCallback(function (nodeOrRect) {\n    var isRect = isRectObject(nodeOrRect);\n    var node = isRect ? null : store.getState().nodeInternals.get(nodeOrRect.id);\n    var nodeRect = isRect ? nodeOrRect : nodeToRect(node);\n    return [nodeRect, node, isRect];\n  }, []);\n  var getIntersectingNodes = useCallback(function (nodeOrRect) {\n    var partially = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var nodes = arguments.length > 2 ? arguments[2] : undefined;\n    var _getNodeRect = getNodeRect(nodeOrRect),\n      _getNodeRect2 = _slicedToArray(_getNodeRect, 3),\n      nodeRect = _getNodeRect2[0],\n      node = _getNodeRect2[1],\n      isRect = _getNodeRect2[2];\n    if (!nodeRect) {\n      return [];\n    }\n    return (nodes || store.getState().getNodes()).filter(function (n) {\n      if (!isRect && (n.id === node.id || !n.positionAbsolute)) {\n        return false;\n      }\n      var currNodeRect = nodeToRect(n);\n      var overlappingArea = getOverlappingArea(currNodeRect, nodeRect);\n      var partiallyVisible = partially && overlappingArea > 0;\n      return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n    });\n  }, []);\n  var isNodeIntersecting = useCallback(function (nodeOrRect, area) {\n    var partially = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var _getNodeRect3 = getNodeRect(nodeOrRect),\n      _getNodeRect4 = _slicedToArray(_getNodeRect3, 1),\n      nodeRect = _getNodeRect4[0];\n    if (!nodeRect) {\n      return false;\n    }\n    var overlappingArea = getOverlappingArea(nodeRect, area);\n    var partiallyVisible = partially && overlappingArea > 0;\n    return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n  }, []);\n  return useMemo(function () {\n    return _objectSpread(_objectSpread({}, viewportHelper), {}, {\n      getNodes: getNodes,\n      getNode: getNode,\n      getEdges: getEdges,\n      getEdge: getEdge,\n      setNodes: setNodes,\n      setEdges: setEdges,\n      addNodes: addNodes,\n      addEdges: addEdges,\n      toObject: toObject,\n      deleteElements: deleteElements,\n      getIntersectingNodes: getIntersectingNodes,\n      isNodeIntersecting: isNodeIntersecting\n    });\n  }, [viewportHelper, getNodes, getNode, getEdges, getEdge, setNodes, setEdges, addNodes, addEdges, toObject, deleteElements, getIntersectingNodes, isNodeIntersecting]);\n}\nvar useGlobalKeyHandler = function useGlobalKeyHandler(_ref59) {\n  var deleteKeyCode = _ref59.deleteKeyCode,\n    multiSelectionKeyCode = _ref59.multiSelectionKeyCode;\n  var store = useStoreApi();\n  var _useReactFlow = useReactFlow(),\n    deleteElements = _useReactFlow.deleteElements;\n  var deleteKeyPressed = useKeyPress(deleteKeyCode);\n  var multiSelectionKeyPressed = useKeyPress(multiSelectionKeyCode);\n  useEffect(function () {\n    if (deleteKeyPressed) {\n      var _store$getState28 = store.getState(),\n        edges = _store$getState28.edges,\n        getNodes = _store$getState28.getNodes;\n      var selectedNodes = getNodes().filter(function (node) {\n        return node.selected;\n      });\n      var selectedEdges = edges.filter(function (edge) {\n        return edge.selected;\n      });\n      deleteElements({\n        nodes: selectedNodes,\n        edges: selectedEdges\n      });\n      store.setState({\n        nodesSelectionActive: false\n      });\n    }\n  }, [deleteKeyPressed]);\n  useEffect(function () {\n    store.setState({\n      multiSelectionActive: multiSelectionKeyPressed\n    });\n  }, [multiSelectionKeyPressed]);\n};\nfunction useResizeHandler(rendererNode) {\n  var store = useStoreApi();\n  useEffect(function () {\n    var resizeObserver;\n    var updateDimensions = function updateDimensions() {\n      if (!rendererNode.current) {\n        return;\n      }\n      var size = getDimensions(rendererNode.current);\n      if (size.height === 0 || size.width === 0) {\n        var _store$getState$onErr2, _store$getState29;\n        (_store$getState$onErr2 = (_store$getState29 = store.getState()).onError) === null || _store$getState$onErr2 === void 0 ? void 0 : _store$getState$onErr2.call(_store$getState29, '004', errorMessages['error004']());\n      }\n      store.setState({\n        width: size.width || 500,\n        height: size.height || 500\n      });\n    };\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n    if (rendererNode.current) {\n      resizeObserver = new ResizeObserver(function () {\n        return updateDimensions();\n      });\n      resizeObserver.observe(rendererNode.current);\n    }\n    return function () {\n      window.removeEventListener('resize', updateDimensions);\n      if (resizeObserver && rendererNode.current) {\n        resizeObserver.unobserve(rendererNode.current);\n      }\n    };\n  }, []);\n}\nvar containerStyle = {\n  position: 'absolute',\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0\n};\nvar viewChanged = function viewChanged(prevViewport, eventViewport) {\n  return prevViewport.x !== eventViewport.x || prevViewport.y !== eventViewport.y || prevViewport.zoom !== eventViewport.k;\n};\nvar eventToFlowTransform = function eventToFlowTransform(eventViewport) {\n  return {\n    x: eventViewport.x,\n    y: eventViewport.y,\n    zoom: eventViewport.k\n  };\n};\nvar isWrappedWithClass = function isWrappedWithClass(event, className) {\n  return event.target.closest(\".\".concat(className));\n};\nvar isRightClickPan = function isRightClickPan(panOnDrag, usedButton) {\n  return usedButton === 2 && Array.isArray(panOnDrag) && panOnDrag.includes(2);\n};\nvar selector$a = function selector$a(s) {\n  return {\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection,\n    d3ZoomHandler: s.d3ZoomHandler,\n    userSelectionActive: s.userSelectionActive\n  };\n};\nvar ZoomPane = function ZoomPane(_ref60) {\n  var onMove = _ref60.onMove,\n    onMoveStart = _ref60.onMoveStart,\n    onMoveEnd = _ref60.onMoveEnd,\n    onPaneContextMenu = _ref60.onPaneContextMenu,\n    _ref60$zoomOnScroll = _ref60.zoomOnScroll,\n    zoomOnScroll = _ref60$zoomOnScroll === void 0 ? true : _ref60$zoomOnScroll,\n    _ref60$zoomOnPinch = _ref60.zoomOnPinch,\n    zoomOnPinch = _ref60$zoomOnPinch === void 0 ? true : _ref60$zoomOnPinch,\n    _ref60$panOnScroll = _ref60.panOnScroll,\n    panOnScroll = _ref60$panOnScroll === void 0 ? false : _ref60$panOnScroll,\n    _ref60$panOnScrollSpe = _ref60.panOnScrollSpeed,\n    panOnScrollSpeed = _ref60$panOnScrollSpe === void 0 ? 0.5 : _ref60$panOnScrollSpe,\n    _ref60$panOnScrollMod = _ref60.panOnScrollMode,\n    panOnScrollMode = _ref60$panOnScrollMod === void 0 ? PanOnScrollMode.Free : _ref60$panOnScrollMod,\n    _ref60$zoomOnDoubleCl = _ref60.zoomOnDoubleClick,\n    zoomOnDoubleClick = _ref60$zoomOnDoubleCl === void 0 ? true : _ref60$zoomOnDoubleCl,\n    elementsSelectable = _ref60.elementsSelectable,\n    _ref60$panOnDrag = _ref60.panOnDrag,\n    panOnDrag = _ref60$panOnDrag === void 0 ? true : _ref60$panOnDrag,\n    defaultViewport = _ref60.defaultViewport,\n    translateExtent = _ref60.translateExtent,\n    minZoom = _ref60.minZoom,\n    maxZoom = _ref60.maxZoom,\n    zoomActivationKeyCode = _ref60.zoomActivationKeyCode,\n    _ref60$preventScrolli = _ref60.preventScrolling,\n    preventScrolling = _ref60$preventScrolli === void 0 ? true : _ref60$preventScrolli,\n    children = _ref60.children,\n    noWheelClassName = _ref60.noWheelClassName,\n    noPanClassName = _ref60.noPanClassName;\n  var timerId = useRef();\n  var store = useStoreApi();\n  var isZoomingOrPanning = useRef(false);\n  var zoomedWithRightMouseButton = useRef(false);\n  var zoomPane = useRef(null);\n  var prevTransform = useRef({\n    x: 0,\n    y: 0,\n    zoom: 0\n  });\n  var _useStore6 = useStore(selector$a, shallow),\n    d3Zoom = _useStore6.d3Zoom,\n    d3Selection = _useStore6.d3Selection,\n    d3ZoomHandler = _useStore6.d3ZoomHandler,\n    userSelectionActive = _useStore6.userSelectionActive;\n  var zoomActivationKeyPressed = useKeyPress(zoomActivationKeyCode);\n  var mouseButton = useRef(0);\n  useResizeHandler(zoomPane);\n  useEffect(function () {\n    if (zoomPane.current) {\n      var bbox = zoomPane.current.getBoundingClientRect();\n      var d3ZoomInstance = zoom().scaleExtent([minZoom, maxZoom]).translateExtent(translateExtent);\n      var selection = select(zoomPane.current).call(d3ZoomInstance);\n      var updatedTransform = zoomIdentity.translate(defaultViewport.x, defaultViewport.y).scale(clamp(defaultViewport.zoom, minZoom, maxZoom));\n      var extent = [[0, 0], [bbox.width, bbox.height]];\n      var constrainedTransform = d3ZoomInstance.constrain()(updatedTransform, extent, translateExtent);\n      d3ZoomInstance.transform(selection, constrainedTransform);\n      store.setState({\n        d3Zoom: d3ZoomInstance,\n        d3Selection: selection,\n        d3ZoomHandler: selection.on('wheel.zoom'),\n        // we need to pass transform because zoom handler is not registered when we set the initial transform\n        transform: [constrainedTransform.x, constrainedTransform.y, constrainedTransform.k],\n        domNode: zoomPane.current.closest('.react-flow')\n      });\n    }\n  }, []);\n  useEffect(function () {\n    if (d3Selection && d3Zoom) {\n      if (panOnScroll && !zoomActivationKeyPressed && !userSelectionActive) {\n        d3Selection.on('wheel.zoom', function (event) {\n          if (isWrappedWithClass(event, noWheelClassName)) {\n            return false;\n          }\n          event.preventDefault();\n          event.stopImmediatePropagation();\n          var currentZoom = d3Selection.property('__zoom').k || 1;\n          if (event.ctrlKey && zoomOnPinch) {\n            var point = pointer(event);\n            // taken from https://github.com/d3/d3-zoom/blob/master/src/zoom.js\n            var pinchDelta = -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * 10;\n            var _zoom2 = currentZoom * Math.pow(2, pinchDelta);\n            d3Zoom.scaleTo(d3Selection, _zoom2, point);\n            return;\n          }\n          // increase scroll speed in firefox\n          // firefox: deltaMode === 1; chrome: deltaMode === 0\n          var deltaNormalize = event.deltaMode === 1 ? 20 : 1;\n          var deltaX = panOnScrollMode === PanOnScrollMode.Vertical ? 0 : event.deltaX * deltaNormalize;\n          var deltaY = panOnScrollMode === PanOnScrollMode.Horizontal ? 0 : event.deltaY * deltaNormalize;\n          d3Zoom.translateBy(d3Selection, -(deltaX / currentZoom) * panOnScrollSpeed, -(deltaY / currentZoom) * panOnScrollSpeed);\n        }, {\n          passive: false\n        });\n      } else if (typeof d3ZoomHandler !== 'undefined') {\n        d3Selection.on('wheel.zoom', function (event, d) {\n          if (!preventScrolling || isWrappedWithClass(event, noWheelClassName)) {\n            return null;\n          }\n          event.preventDefault();\n          d3ZoomHandler.call(this, event, d);\n        }, {\n          passive: false\n        });\n      }\n    }\n  }, [userSelectionActive, panOnScroll, panOnScrollMode, d3Selection, d3Zoom, d3ZoomHandler, zoomActivationKeyPressed, zoomOnPinch, preventScrolling, noWheelClassName]);\n  useEffect(function () {\n    if (d3Zoom) {\n      d3Zoom.on('start', function (event) {\n        var _event$sourceEvent;\n        if (!event.sourceEvent) {\n          return null;\n        }\n        // we need to remember it here, because it's always 0 in the \"zoom\" event\n        mouseButton.current = event.sourceEvent.button;\n        var _store$getState30 = store.getState(),\n          onViewportChangeStart = _store$getState30.onViewportChangeStart;\n        isZoomingOrPanning.current = true;\n        if (((_event$sourceEvent = event.sourceEvent) === null || _event$sourceEvent === void 0 ? void 0 : _event$sourceEvent.type) === 'mousedown') {\n          store.setState({\n            paneDragging: true\n          });\n        }\n        if (onMoveStart || onViewportChangeStart) {\n          var flowTransform = eventToFlowTransform(event.transform);\n          prevTransform.current = flowTransform;\n          onViewportChangeStart === null || onViewportChangeStart === void 0 ? void 0 : onViewportChangeStart(flowTransform);\n          onMoveStart === null || onMoveStart === void 0 ? void 0 : onMoveStart(event.sourceEvent, flowTransform);\n        }\n      });\n    }\n  }, [d3Zoom, onMoveStart]);\n  useEffect(function () {\n    if (d3Zoom) {\n      if (userSelectionActive && !isZoomingOrPanning.current) {\n        d3Zoom.on('zoom', null);\n      } else if (!userSelectionActive) {\n        d3Zoom.on('zoom', function (event) {\n          var _mouseButton$current;\n          var _store$getState31 = store.getState(),\n            onViewportChange = _store$getState31.onViewportChange;\n          store.setState({\n            transform: [event.transform.x, event.transform.y, event.transform.k]\n          });\n          zoomedWithRightMouseButton.current = !!(onPaneContextMenu && isRightClickPan(panOnDrag, (_mouseButton$current = mouseButton.current) !== null && _mouseButton$current !== void 0 ? _mouseButton$current : 0));\n          if (onMove || onViewportChange) {\n            var flowTransform = eventToFlowTransform(event.transform);\n            onViewportChange === null || onViewportChange === void 0 ? void 0 : onViewportChange(flowTransform);\n            onMove === null || onMove === void 0 ? void 0 : onMove(event.sourceEvent, flowTransform);\n          }\n        });\n      }\n    }\n  }, [userSelectionActive, d3Zoom, onMove, panOnDrag, onPaneContextMenu]);\n  useEffect(function () {\n    if (d3Zoom) {\n      d3Zoom.on('end', function (event) {\n        var _mouseButton$current2;\n        if (!event.sourceEvent) {\n          return null;\n        }\n        var _store$getState32 = store.getState(),\n          onViewportChangeEnd = _store$getState32.onViewportChangeEnd;\n        isZoomingOrPanning.current = false;\n        store.setState({\n          paneDragging: false\n        });\n        if (onPaneContextMenu && isRightClickPan(panOnDrag, (_mouseButton$current2 = mouseButton.current) !== null && _mouseButton$current2 !== void 0 ? _mouseButton$current2 : 0) && !zoomedWithRightMouseButton.current) {\n          onPaneContextMenu(event.sourceEvent);\n        }\n        zoomedWithRightMouseButton.current = false;\n        if ((onMoveEnd || onViewportChangeEnd) && viewChanged(prevTransform.current, event.transform)) {\n          var flowTransform = eventToFlowTransform(event.transform);\n          prevTransform.current = flowTransform;\n          clearTimeout(timerId.current);\n          timerId.current = setTimeout(function () {\n            onViewportChangeEnd === null || onViewportChangeEnd === void 0 ? void 0 : onViewportChangeEnd(flowTransform);\n            onMoveEnd === null || onMoveEnd === void 0 ? void 0 : onMoveEnd(event.sourceEvent, flowTransform);\n          }, panOnScroll ? 150 : 0);\n        }\n      });\n    }\n  }, [d3Zoom, panOnScroll, panOnDrag, onMoveEnd, onPaneContextMenu]);\n  useEffect(function () {\n    if (d3Zoom) {\n      d3Zoom.filter(function (event) {\n        var zoomScroll = zoomActivationKeyPressed || zoomOnScroll;\n        var pinchZoom = zoomOnPinch && event.ctrlKey;\n        if (event.button === 1 && event.type === 'mousedown' && (isWrappedWithClass(event, 'react-flow__node') || isWrappedWithClass(event, 'react-flow__edge'))) {\n          return true;\n        }\n        // if all interactions are disabled, we prevent all zoom events\n        if (!panOnDrag && !zoomScroll && !panOnScroll && !zoomOnDoubleClick && !zoomOnPinch) {\n          return false;\n        }\n        // during a selection we prevent all other interactions\n        if (userSelectionActive) {\n          return false;\n        }\n        // if zoom on double click is disabled, we prevent the double click event\n        if (!zoomOnDoubleClick && event.type === 'dblclick') {\n          return false;\n        }\n        // if the target element is inside an element with the nowheel class, we prevent zooming\n        if (isWrappedWithClass(event, noWheelClassName) && event.type === 'wheel') {\n          return false;\n        }\n        // if the target element is inside an element with the nopan class, we prevent panning\n        if (isWrappedWithClass(event, noPanClassName) && event.type !== 'wheel') {\n          return false;\n        }\n        if (!zoomOnPinch && event.ctrlKey && event.type === 'wheel') {\n          return false;\n        }\n        // when there is no scroll handling enabled, we prevent all wheel events\n        if (!zoomScroll && !panOnScroll && !pinchZoom && event.type === 'wheel') {\n          return false;\n        }\n        // if the pane is not movable, we prevent dragging it with mousestart or touchstart\n        if (!panOnDrag && (event.type === 'mousedown' || event.type === 'touchstart')) {\n          return false;\n        }\n        // if the pane is only movable using allowed clicks\n        if (Array.isArray(panOnDrag) && !panOnDrag.includes(event.button) && (event.type === 'mousedown' || event.type === 'touchstart')) {\n          return false;\n        }\n        // We only allow right clicks if pan on drag is set to right click\n        var buttonAllowed = Array.isArray(panOnDrag) && panOnDrag.includes(event.button) || !event.button || event.button <= 1;\n        // default filter for d3-zoom\n        return (!event.ctrlKey || event.type === 'wheel') && buttonAllowed;\n      });\n    }\n  }, [userSelectionActive, d3Zoom, zoomOnScroll, zoomOnPinch, panOnScroll, zoomOnDoubleClick, panOnDrag, elementsSelectable, zoomActivationKeyPressed]);\n  return jsx(\"div\", {\n    className: \"react-flow__renderer\",\n    ref: zoomPane,\n    style: containerStyle,\n    children: children\n  });\n};\nvar selector$9 = function selector$9(s) {\n  return {\n    userSelectionActive: s.userSelectionActive,\n    userSelectionRect: s.userSelectionRect\n  };\n};\nfunction UserSelection() {\n  var _useStore7 = useStore(selector$9, shallow),\n    userSelectionActive = _useStore7.userSelectionActive,\n    userSelectionRect = _useStore7.userSelectionRect;\n  var isActive = userSelectionActive && userSelectionRect;\n  if (!isActive) {\n    return null;\n  }\n  return jsx(\"div\", {\n    className: \"react-flow__selection react-flow__container\",\n    style: {\n      width: userSelectionRect.width,\n      height: userSelectionRect.height,\n      transform: \"translate(\".concat(userSelectionRect.x, \"px, \").concat(userSelectionRect.y, \"px)\")\n    }\n  });\n}\nfunction handleParentExpand(res, updateItem) {\n  var parent = res.find(function (e) {\n    return e.id === updateItem.parentNode;\n  });\n  if (parent) {\n    var extendWidth = updateItem.position.x + updateItem.width - parent.width;\n    var extendHeight = updateItem.position.y + updateItem.height - parent.height;\n    if (extendWidth > 0 || extendHeight > 0 || updateItem.position.x < 0 || updateItem.position.y < 0) {\n      var _parent$style$width, _parent$style$height;\n      parent.style = _objectSpread({}, parent.style) || {};\n      parent.style.width = (_parent$style$width = parent.style.width) !== null && _parent$style$width !== void 0 ? _parent$style$width : parent.width;\n      parent.style.height = (_parent$style$height = parent.style.height) !== null && _parent$style$height !== void 0 ? _parent$style$height : parent.height;\n      if (extendWidth > 0) {\n        parent.style.width += extendWidth;\n      }\n      if (extendHeight > 0) {\n        parent.style.height += extendHeight;\n      }\n      if (updateItem.position.x < 0) {\n        var xDiff = Math.abs(updateItem.position.x);\n        parent.position.x = parent.position.x - xDiff;\n        parent.style.width += xDiff;\n        updateItem.position.x = 0;\n      }\n      if (updateItem.position.y < 0) {\n        var yDiff = Math.abs(updateItem.position.y);\n        parent.position.y = parent.position.y - yDiff;\n        parent.style.height += yDiff;\n        updateItem.position.y = 0;\n      }\n      parent.width = parent.style.width;\n      parent.height = parent.style.height;\n    }\n  }\n}\nfunction applyChanges(changes, elements) {\n  // we need this hack to handle the setNodes and setEdges function of the useReactFlow hook for controlled flows\n  if (changes.some(function (c) {\n    return c.type === 'reset';\n  })) {\n    return changes.filter(function (c) {\n      return c.type === 'reset';\n    }).map(function (c) {\n      return c.item;\n    });\n  }\n  var initElements = changes.filter(function (c) {\n    return c.type === 'add';\n  }).map(function (c) {\n    return c.item;\n  });\n  return elements.reduce(function (res, item) {\n    var currentChanges = changes.filter(function (c) {\n      return c.id === item.id;\n    });\n    if (currentChanges.length === 0) {\n      res.push(item);\n      return res;\n    }\n    var updateItem = _objectSpread({}, item);\n    var _iterator = _createForOfIteratorHelper(currentChanges),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var currentChange = _step.value;\n        if (currentChange) {\n          switch (currentChange.type) {\n            case 'select':\n              {\n                updateItem.selected = currentChange.selected;\n                break;\n              }\n            case 'position':\n              {\n                if (typeof currentChange.position !== 'undefined') {\n                  updateItem.position = currentChange.position;\n                }\n                if (typeof currentChange.positionAbsolute !== 'undefined') {\n                  updateItem.positionAbsolute = currentChange.positionAbsolute;\n                }\n                if (typeof currentChange.dragging !== 'undefined') {\n                  updateItem.dragging = currentChange.dragging;\n                }\n                if (updateItem.expandParent) {\n                  handleParentExpand(res, updateItem);\n                }\n                break;\n              }\n            case 'dimensions':\n              {\n                if (typeof currentChange.dimensions !== 'undefined') {\n                  updateItem.width = currentChange.dimensions.width;\n                  updateItem.height = currentChange.dimensions.height;\n                }\n                if (typeof currentChange.updateStyle !== 'undefined') {\n                  updateItem.style = _objectSpread(_objectSpread({}, updateItem.style || {}), currentChange.dimensions);\n                }\n                if (typeof currentChange.resizing === 'boolean') {\n                  updateItem.resizing = currentChange.resizing;\n                }\n                if (updateItem.expandParent) {\n                  handleParentExpand(res, updateItem);\n                }\n                break;\n              }\n            case 'remove':\n              {\n                return res;\n              }\n          }\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    res.push(updateItem);\n    return res;\n  }, initElements);\n}\nfunction applyNodeChanges(changes, nodes) {\n  return applyChanges(changes, nodes);\n}\nfunction applyEdgeChanges(changes, edges) {\n  return applyChanges(changes, edges);\n}\nvar createSelectionChange = function createSelectionChange(id, selected) {\n  return {\n    id: id,\n    type: 'select',\n    selected: selected\n  };\n};\nfunction getSelectionChanges(items, selectedIds) {\n  return items.reduce(function (res, item) {\n    var willBeSelected = selectedIds.includes(item.id);\n    if (!item.selected && willBeSelected) {\n      item.selected = true;\n      res.push(createSelectionChange(item.id, true));\n    } else if (item.selected && !willBeSelected) {\n      item.selected = false;\n      res.push(createSelectionChange(item.id, false));\n    }\n    return res;\n  }, []);\n}\nvar wrapHandler = function wrapHandler(handler, containerRef) {\n  return function (event) {\n    if (event.target !== containerRef.current) {\n      return;\n    }\n    handler === null || handler === void 0 ? void 0 : handler(event);\n  };\n};\nvar selector$8 = function selector$8(s) {\n  return {\n    userSelectionActive: s.userSelectionActive,\n    elementsSelectable: s.elementsSelectable,\n    dragging: s.paneDragging\n  };\n};\nvar Pane = memo(function (_ref61) {\n  var isSelecting = _ref61.isSelecting,\n    _ref61$selectionMode = _ref61.selectionMode,\n    selectionMode = _ref61$selectionMode === void 0 ? SelectionMode.Full : _ref61$selectionMode,\n    panOnDrag = _ref61.panOnDrag,\n    onSelectionStart = _ref61.onSelectionStart,\n    onSelectionEnd = _ref61.onSelectionEnd,\n    onPaneClick = _ref61.onPaneClick,\n    onPaneContextMenu = _ref61.onPaneContextMenu,\n    onPaneScroll = _ref61.onPaneScroll,\n    onPaneMouseEnter = _ref61.onPaneMouseEnter,\n    onPaneMouseMove = _ref61.onPaneMouseMove,\n    onPaneMouseLeave = _ref61.onPaneMouseLeave,\n    children = _ref61.children;\n  var container = useRef(null);\n  var store = useStoreApi();\n  var prevSelectedNodesCount = useRef(0);\n  var prevSelectedEdgesCount = useRef(0);\n  var containerBounds = useRef();\n  var _useStore8 = useStore(selector$8, shallow),\n    userSelectionActive = _useStore8.userSelectionActive,\n    elementsSelectable = _useStore8.elementsSelectable,\n    dragging = _useStore8.dragging;\n  var resetUserSelection = function resetUserSelection() {\n    store.setState({\n      userSelectionActive: false,\n      userSelectionRect: null\n    });\n    prevSelectedNodesCount.current = 0;\n    prevSelectedEdgesCount.current = 0;\n  };\n  var onClick = function onClick(event) {\n    onPaneClick === null || onPaneClick === void 0 ? void 0 : onPaneClick(event);\n    store.getState().resetSelectedElements();\n    store.setState({\n      nodesSelectionActive: false\n    });\n  };\n  var onContextMenu = function onContextMenu(event) {\n    if (Array.isArray(panOnDrag) && panOnDrag !== null && panOnDrag !== void 0 && panOnDrag.includes(2)) {\n      event.preventDefault();\n      return;\n    }\n    onPaneContextMenu === null || onPaneContextMenu === void 0 ? void 0 : onPaneContextMenu(event);\n  };\n  var onWheel = onPaneScroll ? function (event) {\n    return onPaneScroll(event);\n  } : undefined;\n  var onMouseDown = function onMouseDown(event) {\n    var _store$getState33 = store.getState(),\n      resetSelectedElements = _store$getState33.resetSelectedElements,\n      domNode = _store$getState33.domNode;\n    containerBounds.current = domNode === null || domNode === void 0 ? void 0 : domNode.getBoundingClientRect();\n    if (!elementsSelectable || !isSelecting || event.button !== 0 || event.target !== container.current || !containerBounds.current) {\n      return;\n    }\n    var _getEventPosition3 = getEventPosition(event, containerBounds.current),\n      x = _getEventPosition3.x,\n      y = _getEventPosition3.y;\n    resetSelectedElements();\n    store.setState({\n      userSelectionRect: {\n        width: 0,\n        height: 0,\n        startX: x,\n        startY: y,\n        x: x,\n        y: y\n      }\n    });\n    onSelectionStart === null || onSelectionStart === void 0 ? void 0 : onSelectionStart(event);\n  };\n  var onMouseMove = function onMouseMove(event) {\n    var _userSelectionRect$st, _userSelectionRect$st2;\n    var _store$getState34 = store.getState(),\n      userSelectionRect = _store$getState34.userSelectionRect,\n      nodeInternals = _store$getState34.nodeInternals,\n      edges = _store$getState34.edges,\n      transform = _store$getState34.transform,\n      onNodesChange = _store$getState34.onNodesChange,\n      onEdgesChange = _store$getState34.onEdgesChange,\n      nodeOrigin = _store$getState34.nodeOrigin,\n      getNodes = _store$getState34.getNodes;\n    if (!isSelecting || !containerBounds.current || !userSelectionRect) {\n      return;\n    }\n    store.setState({\n      userSelectionActive: true,\n      nodesSelectionActive: false\n    });\n    var mousePos = getEventPosition(event, containerBounds.current);\n    var startX = (_userSelectionRect$st = userSelectionRect.startX) !== null && _userSelectionRect$st !== void 0 ? _userSelectionRect$st : 0;\n    var startY = (_userSelectionRect$st2 = userSelectionRect.startY) !== null && _userSelectionRect$st2 !== void 0 ? _userSelectionRect$st2 : 0;\n    var nextUserSelectRect = _objectSpread(_objectSpread({}, userSelectionRect), {}, {\n      x: mousePos.x < startX ? mousePos.x : startX,\n      y: mousePos.y < startY ? mousePos.y : startY,\n      width: Math.abs(mousePos.x - startX),\n      height: Math.abs(mousePos.y - startY)\n    });\n    var nodes = getNodes();\n    var selectedNodes = getNodesInside(nodeInternals, nextUserSelectRect, transform, selectionMode === SelectionMode.Partial, true, nodeOrigin);\n    var selectedEdgeIds = getConnectedEdges(selectedNodes, edges).map(function (e) {\n      return e.id;\n    });\n    var selectedNodeIds = selectedNodes.map(function (n) {\n      return n.id;\n    });\n    if (prevSelectedNodesCount.current !== selectedNodeIds.length) {\n      prevSelectedNodesCount.current = selectedNodeIds.length;\n      var changes = getSelectionChanges(nodes, selectedNodeIds);\n      if (changes.length) {\n        onNodesChange === null || onNodesChange === void 0 ? void 0 : onNodesChange(changes);\n      }\n    }\n    if (prevSelectedEdgesCount.current !== selectedEdgeIds.length) {\n      prevSelectedEdgesCount.current = selectedEdgeIds.length;\n      var _changes = getSelectionChanges(edges, selectedEdgeIds);\n      if (_changes.length) {\n        onEdgesChange === null || onEdgesChange === void 0 ? void 0 : onEdgesChange(_changes);\n      }\n    }\n    store.setState({\n      userSelectionRect: nextUserSelectRect\n    });\n  };\n  var onMouseUp = function onMouseUp(event) {\n    if (event.button !== 0) {\n      return;\n    }\n    var _store$getState35 = store.getState(),\n      userSelectionRect = _store$getState35.userSelectionRect;\n    // We only want to trigger click functions when in selection mode if\n    // the user did not move the mouse.\n    if (!userSelectionActive && userSelectionRect && event.target === container.current) {\n      onClick === null || onClick === void 0 ? void 0 : onClick(event);\n    }\n    store.setState({\n      nodesSelectionActive: prevSelectedNodesCount.current > 0\n    });\n    resetUserSelection();\n    onSelectionEnd === null || onSelectionEnd === void 0 ? void 0 : onSelectionEnd(event);\n  };\n  var onMouseLeave = function onMouseLeave(event) {\n    if (userSelectionActive) {\n      store.setState({\n        nodesSelectionActive: prevSelectedNodesCount.current > 0\n      });\n      onSelectionEnd === null || onSelectionEnd === void 0 ? void 0 : onSelectionEnd(event);\n    }\n    resetUserSelection();\n  };\n  var hasActiveSelection = elementsSelectable && (isSelecting || userSelectionActive);\n  return jsxs(\"div\", {\n    className: cc(['react-flow__pane', {\n      dragging: dragging,\n      selection: isSelecting\n    }]),\n    onClick: hasActiveSelection ? undefined : wrapHandler(onClick, container),\n    onContextMenu: wrapHandler(onContextMenu, container),\n    onWheel: wrapHandler(onWheel, container),\n    onMouseEnter: hasActiveSelection ? undefined : onPaneMouseEnter,\n    onMouseDown: hasActiveSelection ? onMouseDown : undefined,\n    onMouseMove: hasActiveSelection ? onMouseMove : onPaneMouseMove,\n    onMouseUp: hasActiveSelection ? onMouseUp : undefined,\n    onMouseLeave: hasActiveSelection ? onMouseLeave : onPaneMouseLeave,\n    ref: container,\n    style: containerStyle,\n    children: [children, jsx(UserSelection, {})]\n  });\n});\nPane.displayName = 'Pane';\nvar selector$7 = function selector$7(s) {\n  var selectedNodes = s.getNodes().filter(function (n) {\n    return n.selected;\n  });\n  return _objectSpread(_objectSpread({}, getRectOfNodes(selectedNodes, s.nodeOrigin)), {}, {\n    transformString: \"translate(\".concat(s.transform[0], \"px,\").concat(s.transform[1], \"px) scale(\").concat(s.transform[2], \")\"),\n    userSelectionActive: s.userSelectionActive\n  });\n};\nfunction NodesSelection(_ref62) {\n  var onSelectionContextMenu = _ref62.onSelectionContextMenu,\n    noPanClassName = _ref62.noPanClassName,\n    disableKeyboardA11y = _ref62.disableKeyboardA11y;\n  var store = useStoreApi();\n  var _useStore9 = useStore(selector$7, shallow),\n    width = _useStore9.width,\n    height = _useStore9.height,\n    left = _useStore9.x,\n    top = _useStore9.y,\n    transformString = _useStore9.transformString,\n    userSelectionActive = _useStore9.userSelectionActive;\n  var updatePositions = useUpdateNodePositions();\n  var nodeRef = useRef(null);\n  useEffect(function () {\n    if (!disableKeyboardA11y) {\n      var _nodeRef$current2;\n      (_nodeRef$current2 = nodeRef.current) === null || _nodeRef$current2 === void 0 ? void 0 : _nodeRef$current2.focus({\n        preventScroll: true\n      });\n    }\n  }, [disableKeyboardA11y]);\n  useDrag({\n    nodeRef: nodeRef\n  });\n  if (userSelectionActive || !width || !height) {\n    return null;\n  }\n  var onContextMenu = onSelectionContextMenu ? function (event) {\n    var selectedNodes = store.getState().getNodes().filter(function (n) {\n      return n.selected;\n    });\n    onSelectionContextMenu(event, selectedNodes);\n  } : undefined;\n  var onKeyDown = function onKeyDown(event) {\n    if (Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n      updatePositions({\n        x: arrowKeyDiffs[event.key].x,\n        y: arrowKeyDiffs[event.key].y,\n        isShiftPressed: event.shiftKey\n      });\n    }\n  };\n  return jsx(\"div\", {\n    className: cc(['react-flow__nodesselection', 'react-flow__container', noPanClassName]),\n    style: {\n      transform: transformString\n    },\n    children: jsx(\"div\", {\n      ref: nodeRef,\n      className: \"react-flow__nodesselection-rect\",\n      onContextMenu: onContextMenu,\n      tabIndex: disableKeyboardA11y ? undefined : -1,\n      onKeyDown: disableKeyboardA11y ? undefined : onKeyDown,\n      style: {\n        width: width,\n        height: height,\n        top: top,\n        left: left\n      }\n    })\n  });\n}\nvar NodesSelection$1 = memo(NodesSelection);\nvar selector$6 = function selector$6(s) {\n  return s.nodesSelectionActive;\n};\nvar FlowRenderer = function FlowRenderer(_ref63) {\n  var children = _ref63.children,\n    onPaneClick = _ref63.onPaneClick,\n    onPaneMouseEnter = _ref63.onPaneMouseEnter,\n    onPaneMouseMove = _ref63.onPaneMouseMove,\n    onPaneMouseLeave = _ref63.onPaneMouseLeave,\n    onPaneContextMenu = _ref63.onPaneContextMenu,\n    onPaneScroll = _ref63.onPaneScroll,\n    deleteKeyCode = _ref63.deleteKeyCode,\n    onMove = _ref63.onMove,\n    onMoveStart = _ref63.onMoveStart,\n    onMoveEnd = _ref63.onMoveEnd,\n    selectionKeyCode = _ref63.selectionKeyCode,\n    selectionOnDrag = _ref63.selectionOnDrag,\n    selectionMode = _ref63.selectionMode,\n    onSelectionStart = _ref63.onSelectionStart,\n    onSelectionEnd = _ref63.onSelectionEnd,\n    multiSelectionKeyCode = _ref63.multiSelectionKeyCode,\n    panActivationKeyCode = _ref63.panActivationKeyCode,\n    zoomActivationKeyCode = _ref63.zoomActivationKeyCode,\n    elementsSelectable = _ref63.elementsSelectable,\n    zoomOnScroll = _ref63.zoomOnScroll,\n    zoomOnPinch = _ref63.zoomOnPinch,\n    panOnScroll = _ref63.panOnScroll,\n    panOnScrollSpeed = _ref63.panOnScrollSpeed,\n    panOnScrollMode = _ref63.panOnScrollMode,\n    zoomOnDoubleClick = _ref63.zoomOnDoubleClick,\n    _panOnDrag = _ref63.panOnDrag,\n    defaultViewport = _ref63.defaultViewport,\n    translateExtent = _ref63.translateExtent,\n    minZoom = _ref63.minZoom,\n    maxZoom = _ref63.maxZoom,\n    preventScrolling = _ref63.preventScrolling,\n    onSelectionContextMenu = _ref63.onSelectionContextMenu,\n    noWheelClassName = _ref63.noWheelClassName,\n    noPanClassName = _ref63.noPanClassName,\n    disableKeyboardA11y = _ref63.disableKeyboardA11y;\n  var nodesSelectionActive = useStore(selector$6);\n  var selectionKeyPressed = useKeyPress(selectionKeyCode);\n  var panActivationKeyPressed = useKeyPress(panActivationKeyCode);\n  var panOnDrag = panActivationKeyPressed || _panOnDrag;\n  var isSelecting = selectionKeyPressed || selectionOnDrag && panOnDrag !== true;\n  useGlobalKeyHandler({\n    deleteKeyCode: deleteKeyCode,\n    multiSelectionKeyCode: multiSelectionKeyCode\n  });\n  return jsx(ZoomPane, {\n    onMove: onMove,\n    onMoveStart: onMoveStart,\n    onMoveEnd: onMoveEnd,\n    onPaneContextMenu: onPaneContextMenu,\n    elementsSelectable: elementsSelectable,\n    zoomOnScroll: zoomOnScroll,\n    zoomOnPinch: zoomOnPinch,\n    panOnScroll: panOnScroll,\n    panOnScrollSpeed: panOnScrollSpeed,\n    panOnScrollMode: panOnScrollMode,\n    zoomOnDoubleClick: zoomOnDoubleClick,\n    panOnDrag: !selectionKeyPressed && panOnDrag,\n    defaultViewport: defaultViewport,\n    translateExtent: translateExtent,\n    minZoom: minZoom,\n    maxZoom: maxZoom,\n    zoomActivationKeyCode: zoomActivationKeyCode,\n    preventScrolling: preventScrolling,\n    noWheelClassName: noWheelClassName,\n    noPanClassName: noPanClassName,\n    children: jsxs(Pane, {\n      onSelectionStart: onSelectionStart,\n      onSelectionEnd: onSelectionEnd,\n      onPaneClick: onPaneClick,\n      onPaneMouseEnter: onPaneMouseEnter,\n      onPaneMouseMove: onPaneMouseMove,\n      onPaneMouseLeave: onPaneMouseLeave,\n      onPaneContextMenu: onPaneContextMenu,\n      onPaneScroll: onPaneScroll,\n      panOnDrag: panOnDrag,\n      isSelecting: !!isSelecting,\n      selectionMode: selectionMode,\n      children: [children, nodesSelectionActive && jsx(NodesSelection$1, {\n        onSelectionContextMenu: onSelectionContextMenu,\n        noPanClassName: noPanClassName,\n        disableKeyboardA11y: disableKeyboardA11y\n      })]\n    })\n  });\n};\nFlowRenderer.displayName = 'FlowRenderer';\nvar FlowRenderer$1 = memo(FlowRenderer);\nfunction useVisibleNodes(onlyRenderVisible) {\n  var nodes = useStore(useCallback(function (s) {\n    return onlyRenderVisible ? getNodesInside(s.nodeInternals, {\n      x: 0,\n      y: 0,\n      width: s.width,\n      height: s.height\n    }, s.transform, true) : s.getNodes();\n  }, [onlyRenderVisible]));\n  return nodes;\n}\nvar selector$5 = function selector$5(s) {\n  return {\n    nodesDraggable: s.nodesDraggable,\n    nodesConnectable: s.nodesConnectable,\n    nodesFocusable: s.nodesFocusable,\n    elementsSelectable: s.elementsSelectable,\n    updateNodeDimensions: s.updateNodeDimensions,\n    onError: s.onError\n  };\n};\nvar NodeRenderer = function NodeRenderer(props) {\n  var _useStore10 = useStore(selector$5, shallow),\n    nodesDraggable = _useStore10.nodesDraggable,\n    nodesConnectable = _useStore10.nodesConnectable,\n    nodesFocusable = _useStore10.nodesFocusable,\n    elementsSelectable = _useStore10.elementsSelectable,\n    updateNodeDimensions = _useStore10.updateNodeDimensions,\n    onError = _useStore10.onError;\n  var nodes = useVisibleNodes(props.onlyRenderVisibleElements);\n  var resizeObserverRef = useRef();\n  var resizeObserver = useMemo(function () {\n    if (typeof ResizeObserver === 'undefined') {\n      return null;\n    }\n    var observer = new ResizeObserver(function (entries) {\n      var updates = entries.map(function (entry) {\n        return {\n          id: entry.target.getAttribute('data-id'),\n          nodeElement: entry.target,\n          forceUpdate: true\n        };\n      });\n      updateNodeDimensions(updates);\n    });\n    resizeObserverRef.current = observer;\n    return observer;\n  }, []);\n  useEffect(function () {\n    return function () {\n      var _resizeObserverRef$cu;\n      resizeObserverRef === null || resizeObserverRef === void 0 || (_resizeObserverRef$cu = resizeObserverRef.current) === null || _resizeObserverRef$cu === void 0 ? void 0 : _resizeObserverRef$cu.disconnect();\n    };\n  }, []);\n  return jsx(\"div\", {\n    className: \"react-flow__nodes\",\n    style: containerStyle,\n    children: nodes.map(function (node) {\n      var _clampedPosition$x, _clampedPosition$y, _node$width2, _node$height2, _node$internalsSymbol4, _node$internalsSymbol5, _node$internalsSymbol6;\n      var nodeType = node.type || 'default';\n      if (!props.nodeTypes[nodeType]) {\n        onError === null || onError === void 0 ? void 0 : onError('003', errorMessages['error003'](nodeType));\n        nodeType = 'default';\n      }\n      var NodeComponent = props.nodeTypes[nodeType] || props.nodeTypes.default;\n      var isDraggable = !!(node.draggable || nodesDraggable && typeof node.draggable === 'undefined');\n      var isSelectable = !!(node.selectable || elementsSelectable && typeof node.selectable === 'undefined');\n      var isConnectable = !!(node.connectable || nodesConnectable && typeof node.connectable === 'undefined');\n      var isFocusable = !!(node.focusable || nodesFocusable && typeof node.focusable === 'undefined');\n      var clampedPosition = props.nodeExtent ? clampPosition(node.positionAbsolute, props.nodeExtent) : node.positionAbsolute;\n      var posX = (_clampedPosition$x = clampedPosition === null || clampedPosition === void 0 ? void 0 : clampedPosition.x) !== null && _clampedPosition$x !== void 0 ? _clampedPosition$x : 0;\n      var posY = (_clampedPosition$y = clampedPosition === null || clampedPosition === void 0 ? void 0 : clampedPosition.y) !== null && _clampedPosition$y !== void 0 ? _clampedPosition$y : 0;\n      var posOrigin = getPositionWithOrigin({\n        x: posX,\n        y: posY,\n        width: (_node$width2 = node.width) !== null && _node$width2 !== void 0 ? _node$width2 : 0,\n        height: (_node$height2 = node.height) !== null && _node$height2 !== void 0 ? _node$height2 : 0,\n        origin: props.nodeOrigin\n      });\n      return jsx(NodeComponent, {\n        id: node.id,\n        className: node.className,\n        style: node.style,\n        type: nodeType,\n        data: node.data,\n        sourcePosition: node.sourcePosition || Position.Bottom,\n        targetPosition: node.targetPosition || Position.Top,\n        hidden: node.hidden,\n        xPos: posX,\n        yPos: posY,\n        xPosOrigin: posOrigin.x,\n        yPosOrigin: posOrigin.y,\n        selectNodesOnDrag: props.selectNodesOnDrag,\n        onClick: props.onNodeClick,\n        onMouseEnter: props.onNodeMouseEnter,\n        onMouseMove: props.onNodeMouseMove,\n        onMouseLeave: props.onNodeMouseLeave,\n        onContextMenu: props.onNodeContextMenu,\n        onDoubleClick: props.onNodeDoubleClick,\n        selected: !!node.selected,\n        isDraggable: isDraggable,\n        isSelectable: isSelectable,\n        isConnectable: isConnectable,\n        isFocusable: isFocusable,\n        resizeObserver: resizeObserver,\n        dragHandle: node.dragHandle,\n        zIndex: (_node$internalsSymbol4 = (_node$internalsSymbol5 = node[internalsSymbol]) === null || _node$internalsSymbol5 === void 0 ? void 0 : _node$internalsSymbol5.z) !== null && _node$internalsSymbol4 !== void 0 ? _node$internalsSymbol4 : 0,\n        isParent: !!((_node$internalsSymbol6 = node[internalsSymbol]) !== null && _node$internalsSymbol6 !== void 0 && _node$internalsSymbol6.isParent),\n        noDragClassName: props.noDragClassName,\n        noPanClassName: props.noPanClassName,\n        initialized: !!node.width && !!node.height,\n        rfId: props.rfId,\n        disableKeyboardA11y: props.disableKeyboardA11y,\n        ariaLabel: node.ariaLabel\n      }, node.id);\n    })\n  });\n};\nNodeRenderer.displayName = 'NodeRenderer';\nvar NodeRenderer$1 = memo(NodeRenderer);\nvar defaultEdgeTree = [{\n  level: 0,\n  isMaxLevel: true,\n  edges: []\n}];\nfunction groupEdgesByZLevel(edges, nodeInternals) {\n  var elevateEdgesOnSelect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var maxLevel = -1;\n  var levelLookup = edges.reduce(function (tree, edge) {\n    var hasZIndex = isNumeric(edge.zIndex);\n    var z = hasZIndex ? edge.zIndex : 0;\n    if (elevateEdgesOnSelect) {\n      var _sourceNode$internals, _targetNode$internals;\n      var targetNode = nodeInternals.get(edge.target);\n      var sourceNode = nodeInternals.get(edge.source);\n      var edgeOrConnectedNodeSelected = edge.selected || (targetNode === null || targetNode === void 0 ? void 0 : targetNode.selected) || (sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.selected);\n      var selectedZIndex = Math.max((sourceNode === null || sourceNode === void 0 || (_sourceNode$internals = sourceNode[internalsSymbol]) === null || _sourceNode$internals === void 0 ? void 0 : _sourceNode$internals.z) || 0, (targetNode === null || targetNode === void 0 || (_targetNode$internals = targetNode[internalsSymbol]) === null || _targetNode$internals === void 0 ? void 0 : _targetNode$internals.z) || 0, 1000);\n      z = (hasZIndex ? edge.zIndex : 0) + (edgeOrConnectedNodeSelected ? selectedZIndex : 0);\n    }\n    if (tree[z]) {\n      tree[z].push(edge);\n    } else {\n      tree[z] = [edge];\n    }\n    maxLevel = z > maxLevel ? z : maxLevel;\n    return tree;\n  }, {});\n  var edgeTree = Object.entries(levelLookup).map(function (_ref64) {\n    var _ref65 = _slicedToArray(_ref64, 2),\n      key = _ref65[0],\n      edges = _ref65[1];\n    var level = +key;\n    return {\n      edges: edges,\n      level: level,\n      isMaxLevel: level === maxLevel\n    };\n  });\n  if (edgeTree.length === 0) {\n    return defaultEdgeTree;\n  }\n  return edgeTree;\n}\nfunction useVisibleEdges(onlyRenderVisible, nodeInternals, elevateEdgesOnSelect) {\n  var edges = useStore(useCallback(function (s) {\n    if (!onlyRenderVisible) {\n      return s.edges;\n    }\n    return s.edges.filter(function (e) {\n      var sourceNode = nodeInternals.get(e.source);\n      var targetNode = nodeInternals.get(e.target);\n      return (sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.width) && (sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.height) && (targetNode === null || targetNode === void 0 ? void 0 : targetNode.width) && (targetNode === null || targetNode === void 0 ? void 0 : targetNode.height) && isEdgeVisible({\n        sourcePos: sourceNode.positionAbsolute || {\n          x: 0,\n          y: 0\n        },\n        targetPos: targetNode.positionAbsolute || {\n          x: 0,\n          y: 0\n        },\n        sourceWidth: sourceNode.width,\n        sourceHeight: sourceNode.height,\n        targetWidth: targetNode.width,\n        targetHeight: targetNode.height,\n        width: s.width,\n        height: s.height,\n        transform: s.transform\n      });\n    });\n  }, [onlyRenderVisible, nodeInternals]));\n  return groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect);\n}\nvar ArrowSymbol = function ArrowSymbol(_ref66) {\n  var _ref66$color = _ref66.color,\n    color = _ref66$color === void 0 ? 'none' : _ref66$color,\n    _ref66$strokeWidth = _ref66.strokeWidth,\n    strokeWidth = _ref66$strokeWidth === void 0 ? 1 : _ref66$strokeWidth;\n  return jsx(\"polyline\", {\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: strokeWidth,\n    fill: \"none\",\n    points: \"-5,-4 0,0 -5,4\"\n  });\n};\nvar ArrowClosedSymbol = function ArrowClosedSymbol(_ref67) {\n  var _ref67$color = _ref67.color,\n    color = _ref67$color === void 0 ? 'none' : _ref67$color,\n    _ref67$strokeWidth = _ref67.strokeWidth,\n    strokeWidth = _ref67$strokeWidth === void 0 ? 1 : _ref67$strokeWidth;\n  return jsx(\"polyline\", {\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: strokeWidth,\n    fill: color,\n    points: \"-5,-4 0,0 -5,4 -5,-4\"\n  });\n};\nvar MarkerSymbols = (_MarkerSymbols = {}, _defineProperty(_MarkerSymbols, MarkerType.Arrow, ArrowSymbol), _defineProperty(_MarkerSymbols, MarkerType.ArrowClosed, ArrowClosedSymbol), _MarkerSymbols);\nfunction useMarkerSymbol(type) {\n  var store = useStoreApi();\n  var symbol = useMemo(function () {\n    var symbolExists = Object.prototype.hasOwnProperty.call(MarkerSymbols, type);\n    if (!symbolExists) {\n      var _store$getState$onErr3, _store$getState36;\n      (_store$getState$onErr3 = (_store$getState36 = store.getState()).onError) === null || _store$getState$onErr3 === void 0 ? void 0 : _store$getState$onErr3.call(_store$getState36, '009', errorMessages['error009'](type));\n      return null;\n    }\n    return MarkerSymbols[type];\n  }, [type]);\n  return symbol;\n}\nvar Marker = function Marker(_ref68) {\n  var id = _ref68.id,\n    type = _ref68.type,\n    color = _ref68.color,\n    _ref68$width = _ref68.width,\n    width = _ref68$width === void 0 ? 12.5 : _ref68$width,\n    _ref68$height = _ref68.height,\n    height = _ref68$height === void 0 ? 12.5 : _ref68$height,\n    _ref68$markerUnits = _ref68.markerUnits,\n    markerUnits = _ref68$markerUnits === void 0 ? 'strokeWidth' : _ref68$markerUnits,\n    strokeWidth = _ref68.strokeWidth,\n    _ref68$orient = _ref68.orient,\n    orient = _ref68$orient === void 0 ? 'auto-start-reverse' : _ref68$orient;\n  var Symbol = useMarkerSymbol(type);\n  if (!Symbol) {\n    return null;\n  }\n  return jsx(\"marker\", {\n    className: \"react-flow__arrowhead\",\n    id: id,\n    markerWidth: \"\".concat(width),\n    markerHeight: \"\".concat(height),\n    viewBox: \"-10 -10 20 20\",\n    markerUnits: markerUnits,\n    orient: orient,\n    refX: \"0\",\n    refY: \"0\",\n    children: jsx(Symbol, {\n      color: color,\n      strokeWidth: strokeWidth\n    })\n  });\n};\nvar markerSelector = function markerSelector(_ref69) {\n  var defaultColor = _ref69.defaultColor,\n    rfId = _ref69.rfId;\n  return function (s) {\n    var ids = [];\n    return s.edges.reduce(function (markers, edge) {\n      [edge.markerStart, edge.markerEnd].forEach(function (marker) {\n        if (marker && typeof marker === 'object') {\n          var markerId = getMarkerId(marker, rfId);\n          if (!ids.includes(markerId)) {\n            markers.push(_objectSpread({\n              id: markerId,\n              color: marker.color || defaultColor\n            }, marker));\n            ids.push(markerId);\n          }\n        }\n      });\n      return markers;\n    }, []).sort(function (a, b) {\n      return a.id.localeCompare(b.id);\n    });\n  };\n};\n// when you have multiple flows on a page and you hide the first one, the other ones have no markers anymore\n// when they do have markers with the same ids. To prevent this the user can pass a unique id to the react flow wrapper\n// that we can then use for creating our unique marker ids\nvar MarkerDefinitions = function MarkerDefinitions(_ref70) {\n  var defaultColor = _ref70.defaultColor,\n    rfId = _ref70.rfId;\n  var markers = useStore(useCallback(markerSelector({\n    defaultColor: defaultColor,\n    rfId: rfId\n  }), [defaultColor, rfId]),\n  // the id includes all marker options, so we just need to look at that part of the marker\n  function (a, b) {\n    return !(a.length !== b.length || a.some(function (m, i) {\n      return m.id !== b[i].id;\n    }));\n  });\n  return jsx(\"defs\", {\n    children: markers.map(function (marker) {\n      return jsx(Marker, {\n        id: marker.id,\n        type: marker.type,\n        color: marker.color,\n        width: marker.width,\n        height: marker.height,\n        markerUnits: marker.markerUnits,\n        strokeWidth: marker.strokeWidth,\n        orient: marker.orient\n      }, marker.id);\n    })\n  });\n};\nMarkerDefinitions.displayName = 'MarkerDefinitions';\nvar MarkerDefinitions$1 = memo(MarkerDefinitions);\nvar selector$4 = function selector$4(s) {\n  return {\n    nodesConnectable: s.nodesConnectable,\n    edgesFocusable: s.edgesFocusable,\n    edgesUpdatable: s.edgesUpdatable,\n    elementsSelectable: s.elementsSelectable,\n    width: s.width,\n    height: s.height,\n    connectionMode: s.connectionMode,\n    nodeInternals: s.nodeInternals,\n    onError: s.onError\n  };\n};\nvar EdgeRenderer = function EdgeRenderer(_ref71) {\n  var defaultMarkerColor = _ref71.defaultMarkerColor,\n    onlyRenderVisibleElements = _ref71.onlyRenderVisibleElements,\n    elevateEdgesOnSelect = _ref71.elevateEdgesOnSelect,\n    rfId = _ref71.rfId,\n    edgeTypes = _ref71.edgeTypes,\n    noPanClassName = _ref71.noPanClassName,\n    onEdgeUpdate = _ref71.onEdgeUpdate,\n    onEdgeContextMenu = _ref71.onEdgeContextMenu,\n    onEdgeMouseEnter = _ref71.onEdgeMouseEnter,\n    onEdgeMouseMove = _ref71.onEdgeMouseMove,\n    onEdgeMouseLeave = _ref71.onEdgeMouseLeave,\n    onEdgeClick = _ref71.onEdgeClick,\n    edgeUpdaterRadius = _ref71.edgeUpdaterRadius,\n    onEdgeDoubleClick = _ref71.onEdgeDoubleClick,\n    onEdgeUpdateStart = _ref71.onEdgeUpdateStart,\n    onEdgeUpdateEnd = _ref71.onEdgeUpdateEnd,\n    children = _ref71.children;\n  var _useStore11 = useStore(selector$4, shallow),\n    edgesFocusable = _useStore11.edgesFocusable,\n    edgesUpdatable = _useStore11.edgesUpdatable,\n    elementsSelectable = _useStore11.elementsSelectable,\n    width = _useStore11.width,\n    height = _useStore11.height,\n    connectionMode = _useStore11.connectionMode,\n    nodeInternals = _useStore11.nodeInternals,\n    onError = _useStore11.onError;\n  var edgeTree = useVisibleEdges(onlyRenderVisibleElements, nodeInternals, elevateEdgesOnSelect);\n  if (!width) {\n    return null;\n  }\n  return jsxs(Fragment, {\n    children: [edgeTree.map(function (_ref72) {\n      var level = _ref72.level,\n        edges = _ref72.edges,\n        isMaxLevel = _ref72.isMaxLevel;\n      return jsxs(\"svg\", {\n        style: {\n          zIndex: level\n        },\n        width: width,\n        height: height,\n        className: \"react-flow__edges react-flow__container\",\n        children: [isMaxLevel && jsx(MarkerDefinitions$1, {\n          defaultColor: defaultMarkerColor,\n          rfId: rfId\n        }), jsx(\"g\", {\n          children: edges.map(function (edge) {\n            var _targetHandleBounds$t, _targetHandleBounds$s;\n            var _getNodeData = getNodeData(nodeInternals.get(edge.source)),\n              _getNodeData2 = _slicedToArray(_getNodeData, 3),\n              sourceNodeRect = _getNodeData2[0],\n              sourceHandleBounds = _getNodeData2[1],\n              sourceIsValid = _getNodeData2[2];\n            var _getNodeData3 = getNodeData(nodeInternals.get(edge.target)),\n              _getNodeData4 = _slicedToArray(_getNodeData3, 3),\n              targetNodeRect = _getNodeData4[0],\n              targetHandleBounds = _getNodeData4[1],\n              targetIsValid = _getNodeData4[2];\n            if (!sourceIsValid || !targetIsValid) {\n              return null;\n            }\n            var edgeType = edge.type || 'default';\n            if (!edgeTypes[edgeType]) {\n              onError === null || onError === void 0 ? void 0 : onError('011', errorMessages['error011'](edgeType));\n              edgeType = 'default';\n            }\n            var EdgeComponent = edgeTypes[edgeType] || edgeTypes.default;\n            // when connection type is loose we can define all handles as sources and connect source -> source\n            var targetNodeHandles = connectionMode === ConnectionMode.Strict ? targetHandleBounds.target : ((_targetHandleBounds$t = targetHandleBounds.target) !== null && _targetHandleBounds$t !== void 0 ? _targetHandleBounds$t : []).concat((_targetHandleBounds$s = targetHandleBounds.source) !== null && _targetHandleBounds$s !== void 0 ? _targetHandleBounds$s : []);\n            var sourceHandle = getHandle(sourceHandleBounds.source, edge.sourceHandle);\n            var targetHandle = getHandle(targetNodeHandles, edge.targetHandle);\n            var sourcePosition = (sourceHandle === null || sourceHandle === void 0 ? void 0 : sourceHandle.position) || Position.Bottom;\n            var targetPosition = (targetHandle === null || targetHandle === void 0 ? void 0 : targetHandle.position) || Position.Top;\n            var isFocusable = !!(edge.focusable || edgesFocusable && typeof edge.focusable === 'undefined');\n            var isUpdatable = typeof onEdgeUpdate !== 'undefined' && (edge.updatable || edgesUpdatable && typeof edge.updatable === 'undefined');\n            if (!sourceHandle || !targetHandle) {\n              onError === null || onError === void 0 ? void 0 : onError('008', errorMessages['error008'](sourceHandle, edge));\n              return null;\n            }\n            var _getEdgePositions = getEdgePositions(sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition),\n              sourceX = _getEdgePositions.sourceX,\n              sourceY = _getEdgePositions.sourceY,\n              targetX = _getEdgePositions.targetX,\n              targetY = _getEdgePositions.targetY;\n            return jsx(EdgeComponent, {\n              id: edge.id,\n              className: cc([edge.className, noPanClassName]),\n              type: edgeType,\n              data: edge.data,\n              selected: !!edge.selected,\n              animated: !!edge.animated,\n              hidden: !!edge.hidden,\n              label: edge.label,\n              labelStyle: edge.labelStyle,\n              labelShowBg: edge.labelShowBg,\n              labelBgStyle: edge.labelBgStyle,\n              labelBgPadding: edge.labelBgPadding,\n              labelBgBorderRadius: edge.labelBgBorderRadius,\n              style: edge.style,\n              source: edge.source,\n              target: edge.target,\n              sourceHandleId: edge.sourceHandle,\n              targetHandleId: edge.targetHandle,\n              markerEnd: edge.markerEnd,\n              markerStart: edge.markerStart,\n              sourceX: sourceX,\n              sourceY: sourceY,\n              targetX: targetX,\n              targetY: targetY,\n              sourcePosition: sourcePosition,\n              targetPosition: targetPosition,\n              elementsSelectable: elementsSelectable,\n              onEdgeUpdate: onEdgeUpdate,\n              onContextMenu: onEdgeContextMenu,\n              onMouseEnter: onEdgeMouseEnter,\n              onMouseMove: onEdgeMouseMove,\n              onMouseLeave: onEdgeMouseLeave,\n              onClick: onEdgeClick,\n              edgeUpdaterRadius: edgeUpdaterRadius,\n              onEdgeDoubleClick: onEdgeDoubleClick,\n              onEdgeUpdateStart: onEdgeUpdateStart,\n              onEdgeUpdateEnd: onEdgeUpdateEnd,\n              rfId: rfId,\n              ariaLabel: edge.ariaLabel,\n              isFocusable: isFocusable,\n              isUpdatable: isUpdatable,\n              pathOptions: 'pathOptions' in edge ? edge.pathOptions : undefined,\n              interactionWidth: edge.interactionWidth\n            }, edge.id);\n          })\n        })]\n      }, level);\n    }), children]\n  });\n};\nEdgeRenderer.displayName = 'EdgeRenderer';\nvar EdgeRenderer$1 = memo(EdgeRenderer);\nvar selector$3 = function selector$3(s) {\n  return \"translate(\".concat(s.transform[0], \"px,\").concat(s.transform[1], \"px) scale(\").concat(s.transform[2], \")\");\n};\nfunction Viewport(_ref73) {\n  var children = _ref73.children;\n  var transform = useStore(selector$3);\n  return jsx(\"div\", {\n    className: \"react-flow__viewport react-flow__container\",\n    style: {\n      transform: transform\n    },\n    children: children\n  });\n}\nfunction useOnInitHandler(onInit) {\n  var rfInstance = useReactFlow();\n  var isInitialized = useRef(false);\n  useEffect(function () {\n    if (!isInitialized.current && rfInstance.viewportInitialized && onInit) {\n      setTimeout(function () {\n        return onInit(rfInstance);\n      }, 1);\n      isInitialized.current = true;\n    }\n  }, [onInit, rfInstance.viewportInitialized]);\n}\nvar oppositePosition = (_oppositePosition = {}, _defineProperty(_oppositePosition, Position.Left, Position.Right), _defineProperty(_oppositePosition, Position.Right, Position.Left), _defineProperty(_oppositePosition, Position.Top, Position.Bottom), _defineProperty(_oppositePosition, Position.Bottom, Position.Top), _oppositePosition);\nvar ConnectionLine = function ConnectionLine(_ref74) {\n  var _fromNode$internalsSy, _fromNode$width, _fromNode$height, _fromNode$positionAbs, _fromNode$positionAbs2, _fromNode$positionAbs3, _fromNode$positionAbs4;\n  var nodeId = _ref74.nodeId,\n    handleType = _ref74.handleType,\n    style = _ref74.style,\n    _ref74$type = _ref74.type,\n    type = _ref74$type === void 0 ? ConnectionLineType.Bezier : _ref74$type,\n    CustomComponent = _ref74.CustomComponent,\n    connectionStatus = _ref74.connectionStatus;\n  var _useStore12 = useStore(useCallback(function (s) {\n      return {\n        fromNode: s.nodeInternals.get(nodeId),\n        handleId: s.connectionHandleId,\n        toX: (s.connectionPosition.x - s.transform[0]) / s.transform[2],\n        toY: (s.connectionPosition.y - s.transform[1]) / s.transform[2],\n        connectionMode: s.connectionMode\n      };\n    }, [nodeId]), shallow),\n    fromNode = _useStore12.fromNode,\n    handleId = _useStore12.handleId,\n    toX = _useStore12.toX,\n    toY = _useStore12.toY,\n    connectionMode = _useStore12.connectionMode;\n  var fromHandleBounds = fromNode === null || fromNode === void 0 || (_fromNode$internalsSy = fromNode[internalsSymbol]) === null || _fromNode$internalsSy === void 0 ? void 0 : _fromNode$internalsSy.handleBounds;\n  var handleBounds = fromHandleBounds === null || fromHandleBounds === void 0 ? void 0 : fromHandleBounds[handleType];\n  if (connectionMode === ConnectionMode.Loose) {\n    handleBounds = handleBounds ? handleBounds : fromHandleBounds === null || fromHandleBounds === void 0 ? void 0 : fromHandleBounds[handleType === 'source' ? 'target' : 'source'];\n  }\n  if (!fromNode || !handleBounds) {\n    return null;\n  }\n  var fromHandle = handleId ? handleBounds.find(function (d) {\n    return d.id === handleId;\n  }) : handleBounds[0];\n  var fromHandleX = fromHandle ? fromHandle.x + fromHandle.width / 2 : ((_fromNode$width = fromNode.width) !== null && _fromNode$width !== void 0 ? _fromNode$width : 0) / 2;\n  var fromHandleY = fromHandle ? fromHandle.y + fromHandle.height / 2 : (_fromNode$height = fromNode.height) !== null && _fromNode$height !== void 0 ? _fromNode$height : 0;\n  var fromX = ((_fromNode$positionAbs = (_fromNode$positionAbs2 = fromNode.positionAbsolute) === null || _fromNode$positionAbs2 === void 0 ? void 0 : _fromNode$positionAbs2.x) !== null && _fromNode$positionAbs !== void 0 ? _fromNode$positionAbs : 0) + fromHandleX;\n  var fromY = ((_fromNode$positionAbs3 = (_fromNode$positionAbs4 = fromNode.positionAbsolute) === null || _fromNode$positionAbs4 === void 0 ? void 0 : _fromNode$positionAbs4.y) !== null && _fromNode$positionAbs3 !== void 0 ? _fromNode$positionAbs3 : 0) + fromHandleY;\n  var fromPosition = fromHandle === null || fromHandle === void 0 ? void 0 : fromHandle.position;\n  var toPosition = fromPosition ? oppositePosition[fromPosition] : null;\n  if (!fromPosition || !toPosition) {\n    return null;\n  }\n  if (CustomComponent) {\n    return jsx(CustomComponent, {\n      connectionLineType: type,\n      connectionLineStyle: style,\n      fromNode: fromNode,\n      fromHandle: fromHandle,\n      fromX: fromX,\n      fromY: fromY,\n      toX: toX,\n      toY: toY,\n      fromPosition: fromPosition,\n      toPosition: toPosition,\n      connectionStatus: connectionStatus\n    });\n  }\n  var dAttr = '';\n  var pathParams = {\n    sourceX: fromX,\n    sourceY: fromY,\n    sourcePosition: fromPosition,\n    targetX: toX,\n    targetY: toY,\n    targetPosition: toPosition\n  };\n  if (type === ConnectionLineType.Bezier) {\n    // we assume the destination position is opposite to the source position\n    var _getBezierPath3 = getBezierPath(pathParams);\n    var _getBezierPath4 = _slicedToArray(_getBezierPath3, 1);\n    dAttr = _getBezierPath4[0];\n  } else if (type === ConnectionLineType.Step) {\n    var _getSmoothStepPath3 = getSmoothStepPath(_objectSpread(_objectSpread({}, pathParams), {}, {\n      borderRadius: 0\n    }));\n    var _getSmoothStepPath4 = _slicedToArray(_getSmoothStepPath3, 1);\n    dAttr = _getSmoothStepPath4[0];\n  } else if (type === ConnectionLineType.SmoothStep) {\n    var _getSmoothStepPath5 = getSmoothStepPath(pathParams);\n    var _getSmoothStepPath6 = _slicedToArray(_getSmoothStepPath5, 1);\n    dAttr = _getSmoothStepPath6[0];\n  } else if (type === ConnectionLineType.SimpleBezier) {\n    var _getSimpleBezierPath3 = getSimpleBezierPath(pathParams);\n    var _getSimpleBezierPath4 = _slicedToArray(_getSimpleBezierPath3, 1);\n    dAttr = _getSimpleBezierPath4[0];\n  } else {\n    dAttr = \"M\".concat(fromX, \",\").concat(fromY, \" \").concat(toX, \",\").concat(toY);\n  }\n  return jsx(\"path\", {\n    d: dAttr,\n    fill: \"none\",\n    className: \"react-flow__connection-path\",\n    style: style\n  });\n};\nConnectionLine.displayName = 'ConnectionLine';\nvar selector$2 = function selector$2(s) {\n  return {\n    nodeId: s.connectionNodeId,\n    handleType: s.connectionHandleType,\n    nodesConnectable: s.nodesConnectable,\n    connectionStatus: s.connectionStatus,\n    width: s.width,\n    height: s.height\n  };\n};\nfunction ConnectionLineWrapper(_ref75) {\n  var containerStyle = _ref75.containerStyle,\n    style = _ref75.style,\n    type = _ref75.type,\n    component = _ref75.component;\n  var _useStore13 = useStore(selector$2, shallow),\n    nodeId = _useStore13.nodeId,\n    handleType = _useStore13.handleType,\n    nodesConnectable = _useStore13.nodesConnectable,\n    width = _useStore13.width,\n    height = _useStore13.height,\n    connectionStatus = _useStore13.connectionStatus;\n  var isValid = !!(nodeId && handleType && width && nodesConnectable);\n  if (!isValid) {\n    return null;\n  }\n  return jsx(\"svg\", {\n    style: containerStyle,\n    width: width,\n    height: height,\n    className: \"react-flow__edges react-flow__connectionline react-flow__container\",\n    children: jsx(\"g\", {\n      className: cc(['react-flow__connection', connectionStatus]),\n      children: jsx(ConnectionLine, {\n        nodeId: nodeId,\n        handleType: handleType,\n        style: style,\n        type: type,\n        CustomComponent: component,\n        connectionStatus: connectionStatus\n      })\n    })\n  });\n}\nvar GraphView = function GraphView(_ref76) {\n  var nodeTypes = _ref76.nodeTypes,\n    edgeTypes = _ref76.edgeTypes,\n    onMove = _ref76.onMove,\n    onMoveStart = _ref76.onMoveStart,\n    onMoveEnd = _ref76.onMoveEnd,\n    onInit = _ref76.onInit,\n    onNodeClick = _ref76.onNodeClick,\n    onEdgeClick = _ref76.onEdgeClick,\n    onNodeDoubleClick = _ref76.onNodeDoubleClick,\n    onEdgeDoubleClick = _ref76.onEdgeDoubleClick,\n    onNodeMouseEnter = _ref76.onNodeMouseEnter,\n    onNodeMouseMove = _ref76.onNodeMouseMove,\n    onNodeMouseLeave = _ref76.onNodeMouseLeave,\n    onNodeContextMenu = _ref76.onNodeContextMenu,\n    onSelectionContextMenu = _ref76.onSelectionContextMenu,\n    onSelectionStart = _ref76.onSelectionStart,\n    onSelectionEnd = _ref76.onSelectionEnd,\n    connectionLineType = _ref76.connectionLineType,\n    connectionLineStyle = _ref76.connectionLineStyle,\n    connectionLineComponent = _ref76.connectionLineComponent,\n    connectionLineContainerStyle = _ref76.connectionLineContainerStyle,\n    selectionKeyCode = _ref76.selectionKeyCode,\n    selectionOnDrag = _ref76.selectionOnDrag,\n    selectionMode = _ref76.selectionMode,\n    multiSelectionKeyCode = _ref76.multiSelectionKeyCode,\n    panActivationKeyCode = _ref76.panActivationKeyCode,\n    zoomActivationKeyCode = _ref76.zoomActivationKeyCode,\n    deleteKeyCode = _ref76.deleteKeyCode,\n    onlyRenderVisibleElements = _ref76.onlyRenderVisibleElements,\n    elementsSelectable = _ref76.elementsSelectable,\n    selectNodesOnDrag = _ref76.selectNodesOnDrag,\n    defaultViewport = _ref76.defaultViewport,\n    translateExtent = _ref76.translateExtent,\n    minZoom = _ref76.minZoom,\n    maxZoom = _ref76.maxZoom,\n    preventScrolling = _ref76.preventScrolling,\n    defaultMarkerColor = _ref76.defaultMarkerColor,\n    zoomOnScroll = _ref76.zoomOnScroll,\n    zoomOnPinch = _ref76.zoomOnPinch,\n    panOnScroll = _ref76.panOnScroll,\n    panOnScrollSpeed = _ref76.panOnScrollSpeed,\n    panOnScrollMode = _ref76.panOnScrollMode,\n    zoomOnDoubleClick = _ref76.zoomOnDoubleClick,\n    panOnDrag = _ref76.panOnDrag,\n    onPaneClick = _ref76.onPaneClick,\n    onPaneMouseEnter = _ref76.onPaneMouseEnter,\n    onPaneMouseMove = _ref76.onPaneMouseMove,\n    onPaneMouseLeave = _ref76.onPaneMouseLeave,\n    onPaneScroll = _ref76.onPaneScroll,\n    onPaneContextMenu = _ref76.onPaneContextMenu,\n    onEdgeUpdate = _ref76.onEdgeUpdate,\n    onEdgeContextMenu = _ref76.onEdgeContextMenu,\n    onEdgeMouseEnter = _ref76.onEdgeMouseEnter,\n    onEdgeMouseMove = _ref76.onEdgeMouseMove,\n    onEdgeMouseLeave = _ref76.onEdgeMouseLeave,\n    edgeUpdaterRadius = _ref76.edgeUpdaterRadius,\n    onEdgeUpdateStart = _ref76.onEdgeUpdateStart,\n    onEdgeUpdateEnd = _ref76.onEdgeUpdateEnd,\n    noDragClassName = _ref76.noDragClassName,\n    noWheelClassName = _ref76.noWheelClassName,\n    noPanClassName = _ref76.noPanClassName,\n    elevateEdgesOnSelect = _ref76.elevateEdgesOnSelect,\n    disableKeyboardA11y = _ref76.disableKeyboardA11y,\n    nodeOrigin = _ref76.nodeOrigin,\n    nodeExtent = _ref76.nodeExtent,\n    rfId = _ref76.rfId;\n  useOnInitHandler(onInit);\n  return jsx(FlowRenderer$1, {\n    onPaneClick: onPaneClick,\n    onPaneMouseEnter: onPaneMouseEnter,\n    onPaneMouseMove: onPaneMouseMove,\n    onPaneMouseLeave: onPaneMouseLeave,\n    onPaneContextMenu: onPaneContextMenu,\n    onPaneScroll: onPaneScroll,\n    deleteKeyCode: deleteKeyCode,\n    selectionKeyCode: selectionKeyCode,\n    selectionOnDrag: selectionOnDrag,\n    selectionMode: selectionMode,\n    onSelectionStart: onSelectionStart,\n    onSelectionEnd: onSelectionEnd,\n    multiSelectionKeyCode: multiSelectionKeyCode,\n    panActivationKeyCode: panActivationKeyCode,\n    zoomActivationKeyCode: zoomActivationKeyCode,\n    elementsSelectable: elementsSelectable,\n    onMove: onMove,\n    onMoveStart: onMoveStart,\n    onMoveEnd: onMoveEnd,\n    zoomOnScroll: zoomOnScroll,\n    zoomOnPinch: zoomOnPinch,\n    zoomOnDoubleClick: zoomOnDoubleClick,\n    panOnScroll: panOnScroll,\n    panOnScrollSpeed: panOnScrollSpeed,\n    panOnScrollMode: panOnScrollMode,\n    panOnDrag: panOnDrag,\n    defaultViewport: defaultViewport,\n    translateExtent: translateExtent,\n    minZoom: minZoom,\n    maxZoom: maxZoom,\n    onSelectionContextMenu: onSelectionContextMenu,\n    preventScrolling: preventScrolling,\n    noDragClassName: noDragClassName,\n    noWheelClassName: noWheelClassName,\n    noPanClassName: noPanClassName,\n    disableKeyboardA11y: disableKeyboardA11y,\n    children: jsxs(Viewport, {\n      children: [jsx(EdgeRenderer$1, {\n        edgeTypes: edgeTypes,\n        onEdgeClick: onEdgeClick,\n        onEdgeDoubleClick: onEdgeDoubleClick,\n        onEdgeUpdate: onEdgeUpdate,\n        onlyRenderVisibleElements: onlyRenderVisibleElements,\n        onEdgeContextMenu: onEdgeContextMenu,\n        onEdgeMouseEnter: onEdgeMouseEnter,\n        onEdgeMouseMove: onEdgeMouseMove,\n        onEdgeMouseLeave: onEdgeMouseLeave,\n        onEdgeUpdateStart: onEdgeUpdateStart,\n        onEdgeUpdateEnd: onEdgeUpdateEnd,\n        edgeUpdaterRadius: edgeUpdaterRadius,\n        defaultMarkerColor: defaultMarkerColor,\n        noPanClassName: noPanClassName,\n        elevateEdgesOnSelect: !!elevateEdgesOnSelect,\n        disableKeyboardA11y: disableKeyboardA11y,\n        rfId: rfId,\n        children: jsx(ConnectionLineWrapper, {\n          style: connectionLineStyle,\n          type: connectionLineType,\n          component: connectionLineComponent,\n          containerStyle: connectionLineContainerStyle\n        })\n      }), jsx(\"div\", {\n        className: \"react-flow__edgelabel-renderer\"\n      }), jsx(NodeRenderer$1, {\n        nodeTypes: nodeTypes,\n        onNodeClick: onNodeClick,\n        onNodeDoubleClick: onNodeDoubleClick,\n        onNodeMouseEnter: onNodeMouseEnter,\n        onNodeMouseMove: onNodeMouseMove,\n        onNodeMouseLeave: onNodeMouseLeave,\n        onNodeContextMenu: onNodeContextMenu,\n        selectNodesOnDrag: selectNodesOnDrag,\n        onlyRenderVisibleElements: onlyRenderVisibleElements,\n        noPanClassName: noPanClassName,\n        noDragClassName: noDragClassName,\n        disableKeyboardA11y: disableKeyboardA11y,\n        nodeOrigin: nodeOrigin,\n        nodeExtent: nodeExtent,\n        rfId: rfId\n      })]\n    })\n  });\n};\nGraphView.displayName = 'GraphView';\nvar GraphView$1 = memo(GraphView);\nvar infiniteExtent = [[Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY], [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY]];\nvar initialState = {\n  rfId: '1',\n  width: 0,\n  height: 0,\n  transform: [0, 0, 1],\n  nodeInternals: new Map(),\n  edges: [],\n  onNodesChange: null,\n  onEdgesChange: null,\n  hasDefaultNodes: false,\n  hasDefaultEdges: false,\n  d3Zoom: null,\n  d3Selection: null,\n  d3ZoomHandler: undefined,\n  minZoom: 0.5,\n  maxZoom: 2,\n  translateExtent: infiniteExtent,\n  nodeExtent: infiniteExtent,\n  nodesSelectionActive: false,\n  userSelectionActive: false,\n  userSelectionRect: null,\n  connectionNodeId: null,\n  connectionHandleId: null,\n  connectionHandleType: 'source',\n  connectionPosition: {\n    x: 0,\n    y: 0\n  },\n  connectionStatus: null,\n  connectionMode: ConnectionMode.Strict,\n  domNode: null,\n  paneDragging: false,\n  noPanClassName: 'nopan',\n  nodeOrigin: [0, 0],\n  snapGrid: [15, 15],\n  snapToGrid: false,\n  nodesDraggable: true,\n  nodesConnectable: true,\n  nodesFocusable: true,\n  edgesFocusable: true,\n  edgesUpdatable: true,\n  elementsSelectable: true,\n  elevateNodesOnSelect: true,\n  fitViewOnInit: false,\n  fitViewOnInitDone: false,\n  fitViewOnInitOptions: undefined,\n  multiSelectionActive: false,\n  connectionStartHandle: null,\n  connectionEndHandle: null,\n  connectionClickStartHandle: null,\n  connectOnClick: true,\n  ariaLiveMessage: '',\n  autoPanOnConnect: true,\n  autoPanOnNodeDrag: true,\n  connectionRadius: 20,\n  onError: devWarn,\n  isValidConnection: undefined\n};\nvar createRFStore = function createRFStore() {\n  return createStore(function (set, get) {\n    return _objectSpread(_objectSpread({}, initialState), {}, {\n      setNodes: function setNodes(nodes) {\n        var _get3 = get(),\n          nodeInternals = _get3.nodeInternals,\n          nodeOrigin = _get3.nodeOrigin,\n          elevateNodesOnSelect = _get3.elevateNodesOnSelect;\n        set({\n          nodeInternals: createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect)\n        });\n      },\n      getNodes: function getNodes() {\n        return Array.from(get().nodeInternals.values());\n      },\n      setEdges: function setEdges(edges) {\n        var _get4 = get(),\n          _get4$defaultEdgeOpti = _get4.defaultEdgeOptions,\n          defaultEdgeOptions = _get4$defaultEdgeOpti === void 0 ? {} : _get4$defaultEdgeOpti;\n        set({\n          edges: edges.map(function (e) {\n            return _objectSpread(_objectSpread({}, defaultEdgeOptions), e);\n          })\n        });\n      },\n      setDefaultNodesAndEdges: function setDefaultNodesAndEdges(nodes, edges) {\n        var hasDefaultNodes = typeof nodes !== 'undefined';\n        var hasDefaultEdges = typeof edges !== 'undefined';\n        var nodeInternals = hasDefaultNodes ? createNodeInternals(nodes, new Map(), get().nodeOrigin, get().elevateNodesOnSelect) : new Map();\n        var nextEdges = hasDefaultEdges ? edges : [];\n        set({\n          nodeInternals: nodeInternals,\n          edges: nextEdges,\n          hasDefaultNodes: hasDefaultNodes,\n          hasDefaultEdges: hasDefaultEdges\n        });\n      },\n      updateNodeDimensions: function updateNodeDimensions(updates) {\n        var _get5 = get(),\n          onNodesChange = _get5.onNodesChange,\n          nodeInternals = _get5.nodeInternals,\n          fitViewOnInit = _get5.fitViewOnInit,\n          fitViewOnInitDone = _get5.fitViewOnInitDone,\n          fitViewOnInitOptions = _get5.fitViewOnInitOptions,\n          domNode = _get5.domNode,\n          nodeOrigin = _get5.nodeOrigin;\n        var viewportNode = domNode === null || domNode === void 0 ? void 0 : domNode.querySelector('.react-flow__viewport');\n        if (!viewportNode) {\n          return;\n        }\n        var style = window.getComputedStyle(viewportNode);\n        var _window$DOMMatrixRead = new window.DOMMatrixReadOnly(style.transform),\n          zoom = _window$DOMMatrixRead.m22;\n        var changes = updates.reduce(function (res, update) {\n          var node = nodeInternals.get(update.id);\n          if (node) {\n            var dimensions = getDimensions(update.nodeElement);\n            var doUpdate = !!(dimensions.width && dimensions.height && (node.width !== dimensions.width || node.height !== dimensions.height || update.forceUpdate));\n            if (doUpdate) {\n              nodeInternals.set(node.id, _objectSpread(_objectSpread({}, node), {}, _defineProperty({}, internalsSymbol, _objectSpread(_objectSpread({}, node[internalsSymbol]), {}, {\n                handleBounds: {\n                  source: getHandleBounds('.source', update.nodeElement, zoom, nodeOrigin),\n                  target: getHandleBounds('.target', update.nodeElement, zoom, nodeOrigin)\n                }\n              })), dimensions));\n              res.push({\n                id: node.id,\n                type: 'dimensions',\n                dimensions: dimensions\n              });\n            }\n          }\n          return res;\n        }, []);\n        updateAbsoluteNodePositions(nodeInternals, nodeOrigin);\n        var nextFitViewOnInitDone = fitViewOnInitDone || fitViewOnInit && !fitViewOnInitDone && _fitView(get, _objectSpread({\n          initial: true\n        }, fitViewOnInitOptions));\n        set({\n          nodeInternals: new Map(nodeInternals),\n          fitViewOnInitDone: nextFitViewOnInitDone\n        });\n        if ((changes === null || changes === void 0 ? void 0 : changes.length) > 0) {\n          onNodesChange === null || onNodesChange === void 0 ? void 0 : onNodesChange(changes);\n        }\n      },\n      updateNodePositions: function updateNodePositions(nodeDragItems) {\n        var positionChanged = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var dragging = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var _get6 = get(),\n          triggerNodeChanges = _get6.triggerNodeChanges;\n        var changes = nodeDragItems.map(function (node) {\n          var change = {\n            id: node.id,\n            type: 'position',\n            dragging: dragging\n          };\n          if (positionChanged) {\n            change.positionAbsolute = node.positionAbsolute;\n            change.position = node.position;\n          }\n          return change;\n        });\n        triggerNodeChanges(changes);\n      },\n      triggerNodeChanges: function triggerNodeChanges(changes) {\n        var _get7 = get(),\n          onNodesChange = _get7.onNodesChange,\n          nodeInternals = _get7.nodeInternals,\n          hasDefaultNodes = _get7.hasDefaultNodes,\n          nodeOrigin = _get7.nodeOrigin,\n          getNodes = _get7.getNodes,\n          elevateNodesOnSelect = _get7.elevateNodesOnSelect;\n        if (changes !== null && changes !== void 0 && changes.length) {\n          if (hasDefaultNodes) {\n            var nodes = applyNodeChanges(changes, getNodes());\n            var nextNodeInternals = createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect);\n            set({\n              nodeInternals: nextNodeInternals\n            });\n          }\n          onNodesChange === null || onNodesChange === void 0 ? void 0 : onNodesChange(changes);\n        }\n      },\n      addSelectedNodes: function addSelectedNodes(selectedNodeIds) {\n        var _get8 = get(),\n          multiSelectionActive = _get8.multiSelectionActive,\n          edges = _get8.edges,\n          getNodes = _get8.getNodes;\n        var changedNodes;\n        var changedEdges = null;\n        if (multiSelectionActive) {\n          changedNodes = selectedNodeIds.map(function (nodeId) {\n            return createSelectionChange(nodeId, true);\n          });\n        } else {\n          changedNodes = getSelectionChanges(getNodes(), selectedNodeIds);\n          changedEdges = getSelectionChanges(edges, []);\n        }\n        updateNodesAndEdgesSelections({\n          changedNodes: changedNodes,\n          changedEdges: changedEdges,\n          get: get,\n          set: set\n        });\n      },\n      addSelectedEdges: function addSelectedEdges(selectedEdgeIds) {\n        var _get9 = get(),\n          multiSelectionActive = _get9.multiSelectionActive,\n          edges = _get9.edges,\n          getNodes = _get9.getNodes;\n        var changedEdges;\n        var changedNodes = null;\n        if (multiSelectionActive) {\n          changedEdges = selectedEdgeIds.map(function (edgeId) {\n            return createSelectionChange(edgeId, true);\n          });\n        } else {\n          changedEdges = getSelectionChanges(edges, selectedEdgeIds);\n          changedNodes = getSelectionChanges(getNodes(), []);\n        }\n        updateNodesAndEdgesSelections({\n          changedNodes: changedNodes,\n          changedEdges: changedEdges,\n          get: get,\n          set: set\n        });\n      },\n      unselectNodesAndEdges: function unselectNodesAndEdges() {\n        var _ref77 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          nodes = _ref77.nodes,\n          edges = _ref77.edges;\n        var _get10 = get(),\n          storeEdges = _get10.edges,\n          getNodes = _get10.getNodes;\n        var nodesToUnselect = nodes ? nodes : getNodes();\n        var edgesToUnselect = edges ? edges : storeEdges;\n        var changedNodes = nodesToUnselect.map(function (n) {\n          n.selected = false;\n          return createSelectionChange(n.id, false);\n        });\n        var changedEdges = edgesToUnselect.map(function (edge) {\n          return createSelectionChange(edge.id, false);\n        });\n        updateNodesAndEdgesSelections({\n          changedNodes: changedNodes,\n          changedEdges: changedEdges,\n          get: get,\n          set: set\n        });\n      },\n      setMinZoom: function setMinZoom(minZoom) {\n        var _get11 = get(),\n          d3Zoom = _get11.d3Zoom,\n          maxZoom = _get11.maxZoom;\n        d3Zoom === null || d3Zoom === void 0 ? void 0 : d3Zoom.scaleExtent([minZoom, maxZoom]);\n        set({\n          minZoom: minZoom\n        });\n      },\n      setMaxZoom: function setMaxZoom(maxZoom) {\n        var _get12 = get(),\n          d3Zoom = _get12.d3Zoom,\n          minZoom = _get12.minZoom;\n        d3Zoom === null || d3Zoom === void 0 ? void 0 : d3Zoom.scaleExtent([minZoom, maxZoom]);\n        set({\n          maxZoom: maxZoom\n        });\n      },\n      setTranslateExtent: function setTranslateExtent(translateExtent) {\n        var _get$d3Zoom;\n        (_get$d3Zoom = get().d3Zoom) === null || _get$d3Zoom === void 0 ? void 0 : _get$d3Zoom.translateExtent(translateExtent);\n        set({\n          translateExtent: translateExtent\n        });\n      },\n      resetSelectedElements: function resetSelectedElements() {\n        var _get13 = get(),\n          edges = _get13.edges,\n          getNodes = _get13.getNodes;\n        var nodes = getNodes();\n        var nodesToUnselect = nodes.filter(function (e) {\n          return e.selected;\n        }).map(function (n) {\n          return createSelectionChange(n.id, false);\n        });\n        var edgesToUnselect = edges.filter(function (e) {\n          return e.selected;\n        }).map(function (e) {\n          return createSelectionChange(e.id, false);\n        });\n        updateNodesAndEdgesSelections({\n          changedNodes: nodesToUnselect,\n          changedEdges: edgesToUnselect,\n          get: get,\n          set: set\n        });\n      },\n      setNodeExtent: function setNodeExtent(nodeExtent) {\n        var _get14 = get(),\n          nodeInternals = _get14.nodeInternals;\n        nodeInternals.forEach(function (node) {\n          node.positionAbsolute = clampPosition(node.position, nodeExtent);\n        });\n        set({\n          nodeExtent: nodeExtent,\n          nodeInternals: new Map(nodeInternals)\n        });\n      },\n      panBy: function panBy(delta) {\n        var _get15 = get(),\n          transform = _get15.transform,\n          width = _get15.width,\n          height = _get15.height,\n          d3Zoom = _get15.d3Zoom,\n          d3Selection = _get15.d3Selection,\n          translateExtent = _get15.translateExtent;\n        if (!d3Zoom || !d3Selection || !delta.x && !delta.y) {\n          return false;\n        }\n        var nextTransform = zoomIdentity.translate(transform[0] + delta.x, transform[1] + delta.y).scale(transform[2]);\n        var extent = [[0, 0], [width, height]];\n        var constrainedTransform = d3Zoom === null || d3Zoom === void 0 ? void 0 : d3Zoom.constrain()(nextTransform, extent, translateExtent);\n        d3Zoom.transform(d3Selection, constrainedTransform);\n        var transformChanged = transform[0] !== constrainedTransform.x || transform[1] !== constrainedTransform.y || transform[2] !== constrainedTransform.k;\n        return transformChanged;\n      },\n      cancelConnection: function cancelConnection() {\n        return set({\n          connectionNodeId: initialState.connectionNodeId,\n          connectionHandleId: initialState.connectionHandleId,\n          connectionHandleType: initialState.connectionHandleType,\n          connectionStatus: initialState.connectionStatus,\n          connectionStartHandle: initialState.connectionStartHandle,\n          connectionEndHandle: initialState.connectionEndHandle\n        });\n      },\n      reset: function reset() {\n        return set(_objectSpread({}, initialState));\n      }\n    });\n  });\n};\nvar ReactFlowProvider = function ReactFlowProvider(_ref78) {\n  var children = _ref78.children;\n  var storeRef = useRef(null);\n  if (!storeRef.current) {\n    storeRef.current = createRFStore();\n  }\n  return jsx(Provider$1, {\n    value: storeRef.current,\n    children: children\n  });\n};\nReactFlowProvider.displayName = 'ReactFlowProvider';\nvar Wrapper = function Wrapper(_ref79) {\n  var children = _ref79.children;\n  var isWrapped = useContext(StoreContext);\n  if (isWrapped) {\n    // we need to wrap it with a fragment because it's not allowed for children to be a ReactNode\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18051\n    return jsx(Fragment, {\n      children: children\n    });\n  }\n  return jsx(ReactFlowProvider, {\n    children: children\n  });\n};\nWrapper.displayName = 'ReactFlowWrapper';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useNodeOrEdgeTypes(nodeOrEdgeTypes, createTypes) {\n  var typesKeysRef = useRef(null);\n  var typesParsed = useMemo(function () {\n    if (process.env.NODE_ENV === 'development') {\n      var typeKeys = Object.keys(nodeOrEdgeTypes);\n      if (shallow(typesKeysRef.current, typeKeys)) {\n        devWarn('002', errorMessages['error002']());\n      }\n      typesKeysRef.current = typeKeys;\n    }\n    return createTypes(nodeOrEdgeTypes);\n  }, [nodeOrEdgeTypes]);\n  return typesParsed;\n}\nvar defaultNodeTypes = {\n  input: InputNode$1,\n  default: DefaultNode$1,\n  output: OutputNode$1,\n  group: GroupNode\n};\nvar defaultEdgeTypes = {\n  default: BezierEdge,\n  straight: StraightEdge,\n  step: StepEdge,\n  smoothstep: SmoothStepEdge,\n  simplebezier: SimpleBezierEdge\n};\nvar initNodeOrigin = [0, 0];\nvar initSnapGrid = [15, 15];\nvar initDefaultViewport = {\n  x: 0,\n  y: 0,\n  zoom: 1\n};\nvar wrapperStyle = {\n  width: '100%',\n  height: '100%',\n  overflow: 'hidden',\n  position: 'relative',\n  zIndex: 0\n};\nvar ReactFlow = forwardRef(function (_ref80, ref) {\n  var nodes = _ref80.nodes,\n    edges = _ref80.edges,\n    defaultNodes = _ref80.defaultNodes,\n    defaultEdges = _ref80.defaultEdges,\n    className = _ref80.className,\n    _ref80$nodeTypes = _ref80.nodeTypes,\n    nodeTypes = _ref80$nodeTypes === void 0 ? defaultNodeTypes : _ref80$nodeTypes,\n    _ref80$edgeTypes = _ref80.edgeTypes,\n    edgeTypes = _ref80$edgeTypes === void 0 ? defaultEdgeTypes : _ref80$edgeTypes,\n    onNodeClick = _ref80.onNodeClick,\n    onEdgeClick = _ref80.onEdgeClick,\n    onInit = _ref80.onInit,\n    onMove = _ref80.onMove,\n    onMoveStart = _ref80.onMoveStart,\n    onMoveEnd = _ref80.onMoveEnd,\n    onConnect = _ref80.onConnect,\n    onConnectStart = _ref80.onConnectStart,\n    onConnectEnd = _ref80.onConnectEnd,\n    onClickConnectStart = _ref80.onClickConnectStart,\n    onClickConnectEnd = _ref80.onClickConnectEnd,\n    onNodeMouseEnter = _ref80.onNodeMouseEnter,\n    onNodeMouseMove = _ref80.onNodeMouseMove,\n    onNodeMouseLeave = _ref80.onNodeMouseLeave,\n    onNodeContextMenu = _ref80.onNodeContextMenu,\n    onNodeDoubleClick = _ref80.onNodeDoubleClick,\n    onNodeDragStart = _ref80.onNodeDragStart,\n    onNodeDrag = _ref80.onNodeDrag,\n    onNodeDragStop = _ref80.onNodeDragStop,\n    onNodesDelete = _ref80.onNodesDelete,\n    onEdgesDelete = _ref80.onEdgesDelete,\n    onSelectionChange = _ref80.onSelectionChange,\n    onSelectionDragStart = _ref80.onSelectionDragStart,\n    onSelectionDrag = _ref80.onSelectionDrag,\n    onSelectionDragStop = _ref80.onSelectionDragStop,\n    onSelectionContextMenu = _ref80.onSelectionContextMenu,\n    onSelectionStart = _ref80.onSelectionStart,\n    onSelectionEnd = _ref80.onSelectionEnd,\n    _ref80$connectionMode = _ref80.connectionMode,\n    connectionMode = _ref80$connectionMode === void 0 ? ConnectionMode.Strict : _ref80$connectionMode,\n    _ref80$connectionLine = _ref80.connectionLineType,\n    connectionLineType = _ref80$connectionLine === void 0 ? ConnectionLineType.Bezier : _ref80$connectionLine,\n    connectionLineStyle = _ref80.connectionLineStyle,\n    connectionLineComponent = _ref80.connectionLineComponent,\n    connectionLineContainerStyle = _ref80.connectionLineContainerStyle,\n    _ref80$deleteKeyCode = _ref80.deleteKeyCode,\n    deleteKeyCode = _ref80$deleteKeyCode === void 0 ? 'Backspace' : _ref80$deleteKeyCode,\n    _ref80$selectionKeyCo = _ref80.selectionKeyCode,\n    selectionKeyCode = _ref80$selectionKeyCo === void 0 ? 'Shift' : _ref80$selectionKeyCo,\n    _ref80$selectionOnDra = _ref80.selectionOnDrag,\n    selectionOnDrag = _ref80$selectionOnDra === void 0 ? false : _ref80$selectionOnDra,\n    _ref80$selectionMode = _ref80.selectionMode,\n    selectionMode = _ref80$selectionMode === void 0 ? SelectionMode.Full : _ref80$selectionMode,\n    _ref80$panActivationK = _ref80.panActivationKeyCode,\n    panActivationKeyCode = _ref80$panActivationK === void 0 ? 'Space' : _ref80$panActivationK,\n    _ref80$multiSelection = _ref80.multiSelectionKeyCode,\n    multiSelectionKeyCode = _ref80$multiSelection === void 0 ? 'Meta' : _ref80$multiSelection,\n    _ref80$zoomActivation = _ref80.zoomActivationKeyCode,\n    zoomActivationKeyCode = _ref80$zoomActivation === void 0 ? 'Meta' : _ref80$zoomActivation,\n    _ref80$snapToGrid = _ref80.snapToGrid,\n    snapToGrid = _ref80$snapToGrid === void 0 ? false : _ref80$snapToGrid,\n    _ref80$snapGrid = _ref80.snapGrid,\n    snapGrid = _ref80$snapGrid === void 0 ? initSnapGrid : _ref80$snapGrid,\n    _ref80$onlyRenderVisi = _ref80.onlyRenderVisibleElements,\n    onlyRenderVisibleElements = _ref80$onlyRenderVisi === void 0 ? false : _ref80$onlyRenderVisi,\n    _ref80$selectNodesOnD = _ref80.selectNodesOnDrag,\n    selectNodesOnDrag = _ref80$selectNodesOnD === void 0 ? true : _ref80$selectNodesOnD,\n    nodesDraggable = _ref80.nodesDraggable,\n    nodesConnectable = _ref80.nodesConnectable,\n    nodesFocusable = _ref80.nodesFocusable,\n    _ref80$nodeOrigin = _ref80.nodeOrigin,\n    nodeOrigin = _ref80$nodeOrigin === void 0 ? initNodeOrigin : _ref80$nodeOrigin,\n    edgesFocusable = _ref80.edgesFocusable,\n    edgesUpdatable = _ref80.edgesUpdatable,\n    elementsSelectable = _ref80.elementsSelectable,\n    _ref80$defaultViewpor = _ref80.defaultViewport,\n    defaultViewport = _ref80$defaultViewpor === void 0 ? initDefaultViewport : _ref80$defaultViewpor,\n    _ref80$minZoom = _ref80.minZoom,\n    minZoom = _ref80$minZoom === void 0 ? 0.5 : _ref80$minZoom,\n    _ref80$maxZoom = _ref80.maxZoom,\n    maxZoom = _ref80$maxZoom === void 0 ? 2 : _ref80$maxZoom,\n    _ref80$translateExten = _ref80.translateExtent,\n    translateExtent = _ref80$translateExten === void 0 ? infiniteExtent : _ref80$translateExten,\n    _ref80$preventScrolli = _ref80.preventScrolling,\n    preventScrolling = _ref80$preventScrolli === void 0 ? true : _ref80$preventScrolli,\n    nodeExtent = _ref80.nodeExtent,\n    _ref80$defaultMarkerC = _ref80.defaultMarkerColor,\n    defaultMarkerColor = _ref80$defaultMarkerC === void 0 ? '#b1b1b7' : _ref80$defaultMarkerC,\n    _ref80$zoomOnScroll = _ref80.zoomOnScroll,\n    zoomOnScroll = _ref80$zoomOnScroll === void 0 ? true : _ref80$zoomOnScroll,\n    _ref80$zoomOnPinch = _ref80.zoomOnPinch,\n    zoomOnPinch = _ref80$zoomOnPinch === void 0 ? true : _ref80$zoomOnPinch,\n    _ref80$panOnScroll = _ref80.panOnScroll,\n    panOnScroll = _ref80$panOnScroll === void 0 ? false : _ref80$panOnScroll,\n    _ref80$panOnScrollSpe = _ref80.panOnScrollSpeed,\n    panOnScrollSpeed = _ref80$panOnScrollSpe === void 0 ? 0.5 : _ref80$panOnScrollSpe,\n    _ref80$panOnScrollMod = _ref80.panOnScrollMode,\n    panOnScrollMode = _ref80$panOnScrollMod === void 0 ? PanOnScrollMode.Free : _ref80$panOnScrollMod,\n    _ref80$zoomOnDoubleCl = _ref80.zoomOnDoubleClick,\n    zoomOnDoubleClick = _ref80$zoomOnDoubleCl === void 0 ? true : _ref80$zoomOnDoubleCl,\n    _ref80$panOnDrag = _ref80.panOnDrag,\n    panOnDrag = _ref80$panOnDrag === void 0 ? true : _ref80$panOnDrag,\n    onPaneClick = _ref80.onPaneClick,\n    onPaneMouseEnter = _ref80.onPaneMouseEnter,\n    onPaneMouseMove = _ref80.onPaneMouseMove,\n    onPaneMouseLeave = _ref80.onPaneMouseLeave,\n    onPaneScroll = _ref80.onPaneScroll,\n    onPaneContextMenu = _ref80.onPaneContextMenu,\n    children = _ref80.children,\n    onEdgeUpdate = _ref80.onEdgeUpdate,\n    onEdgeContextMenu = _ref80.onEdgeContextMenu,\n    onEdgeDoubleClick = _ref80.onEdgeDoubleClick,\n    onEdgeMouseEnter = _ref80.onEdgeMouseEnter,\n    onEdgeMouseMove = _ref80.onEdgeMouseMove,\n    onEdgeMouseLeave = _ref80.onEdgeMouseLeave,\n    onEdgeUpdateStart = _ref80.onEdgeUpdateStart,\n    onEdgeUpdateEnd = _ref80.onEdgeUpdateEnd,\n    _ref80$edgeUpdaterRad = _ref80.edgeUpdaterRadius,\n    edgeUpdaterRadius = _ref80$edgeUpdaterRad === void 0 ? 10 : _ref80$edgeUpdaterRad,\n    onNodesChange = _ref80.onNodesChange,\n    onEdgesChange = _ref80.onEdgesChange,\n    _ref80$noDragClassNam = _ref80.noDragClassName,\n    noDragClassName = _ref80$noDragClassNam === void 0 ? 'nodrag' : _ref80$noDragClassNam,\n    _ref80$noWheelClassNa = _ref80.noWheelClassName,\n    noWheelClassName = _ref80$noWheelClassNa === void 0 ? 'nowheel' : _ref80$noWheelClassNa,\n    _ref80$noPanClassName = _ref80.noPanClassName,\n    noPanClassName = _ref80$noPanClassName === void 0 ? 'nopan' : _ref80$noPanClassName,\n    _ref80$fitView = _ref80.fitView,\n    fitView = _ref80$fitView === void 0 ? false : _ref80$fitView,\n    fitViewOptions = _ref80.fitViewOptions,\n    _ref80$connectOnClick = _ref80.connectOnClick,\n    connectOnClick = _ref80$connectOnClick === void 0 ? true : _ref80$connectOnClick,\n    attributionPosition = _ref80.attributionPosition,\n    proOptions = _ref80.proOptions,\n    defaultEdgeOptions = _ref80.defaultEdgeOptions,\n    _ref80$elevateNodesOn = _ref80.elevateNodesOnSelect,\n    elevateNodesOnSelect = _ref80$elevateNodesOn === void 0 ? true : _ref80$elevateNodesOn,\n    _ref80$elevateEdgesOn = _ref80.elevateEdgesOnSelect,\n    elevateEdgesOnSelect = _ref80$elevateEdgesOn === void 0 ? false : _ref80$elevateEdgesOn,\n    _ref80$disableKeyboar = _ref80.disableKeyboardA11y,\n    disableKeyboardA11y = _ref80$disableKeyboar === void 0 ? false : _ref80$disableKeyboar,\n    _ref80$autoPanOnConne = _ref80.autoPanOnConnect,\n    autoPanOnConnect = _ref80$autoPanOnConne === void 0 ? true : _ref80$autoPanOnConne,\n    _ref80$autoPanOnNodeD = _ref80.autoPanOnNodeDrag,\n    autoPanOnNodeDrag = _ref80$autoPanOnNodeD === void 0 ? true : _ref80$autoPanOnNodeD,\n    _ref80$connectionRadi = _ref80.connectionRadius,\n    connectionRadius = _ref80$connectionRadi === void 0 ? 20 : _ref80$connectionRadi,\n    isValidConnection = _ref80.isValidConnection,\n    onError = _ref80.onError,\n    style = _ref80.style,\n    id = _ref80.id,\n    rest = _objectWithoutProperties(_ref80, _excluded5);\n  var nodeTypesWrapped = useNodeOrEdgeTypes(nodeTypes, createNodeTypes);\n  var edgeTypesWrapped = useNodeOrEdgeTypes(edgeTypes, createEdgeTypes);\n  var rfId = id || '1';\n  return jsx(\"div\", _objectSpread(_objectSpread({}, rest), {}, {\n    style: _objectSpread(_objectSpread({}, style), wrapperStyle),\n    ref: ref,\n    className: cc(['react-flow', className]),\n    \"data-testid\": \"rf__wrapper\",\n    id: id,\n    children: jsxs(Wrapper, {\n      children: [jsx(GraphView$1, {\n        onInit: onInit,\n        onMove: onMove,\n        onMoveStart: onMoveStart,\n        onMoveEnd: onMoveEnd,\n        onNodeClick: onNodeClick,\n        onEdgeClick: onEdgeClick,\n        onNodeMouseEnter: onNodeMouseEnter,\n        onNodeMouseMove: onNodeMouseMove,\n        onNodeMouseLeave: onNodeMouseLeave,\n        onNodeContextMenu: onNodeContextMenu,\n        onNodeDoubleClick: onNodeDoubleClick,\n        nodeTypes: nodeTypesWrapped,\n        edgeTypes: edgeTypesWrapped,\n        connectionLineType: connectionLineType,\n        connectionLineStyle: connectionLineStyle,\n        connectionLineComponent: connectionLineComponent,\n        connectionLineContainerStyle: connectionLineContainerStyle,\n        selectionKeyCode: selectionKeyCode,\n        selectionOnDrag: selectionOnDrag,\n        selectionMode: selectionMode,\n        deleteKeyCode: deleteKeyCode,\n        multiSelectionKeyCode: multiSelectionKeyCode,\n        panActivationKeyCode: panActivationKeyCode,\n        zoomActivationKeyCode: zoomActivationKeyCode,\n        onlyRenderVisibleElements: onlyRenderVisibleElements,\n        selectNodesOnDrag: selectNodesOnDrag,\n        defaultViewport: defaultViewport,\n        translateExtent: translateExtent,\n        minZoom: minZoom,\n        maxZoom: maxZoom,\n        preventScrolling: preventScrolling,\n        zoomOnScroll: zoomOnScroll,\n        zoomOnPinch: zoomOnPinch,\n        zoomOnDoubleClick: zoomOnDoubleClick,\n        panOnScroll: panOnScroll,\n        panOnScrollSpeed: panOnScrollSpeed,\n        panOnScrollMode: panOnScrollMode,\n        panOnDrag: panOnDrag,\n        onPaneClick: onPaneClick,\n        onPaneMouseEnter: onPaneMouseEnter,\n        onPaneMouseMove: onPaneMouseMove,\n        onPaneMouseLeave: onPaneMouseLeave,\n        onPaneScroll: onPaneScroll,\n        onPaneContextMenu: onPaneContextMenu,\n        onSelectionContextMenu: onSelectionContextMenu,\n        onSelectionStart: onSelectionStart,\n        onSelectionEnd: onSelectionEnd,\n        onEdgeUpdate: onEdgeUpdate,\n        onEdgeContextMenu: onEdgeContextMenu,\n        onEdgeDoubleClick: onEdgeDoubleClick,\n        onEdgeMouseEnter: onEdgeMouseEnter,\n        onEdgeMouseMove: onEdgeMouseMove,\n        onEdgeMouseLeave: onEdgeMouseLeave,\n        onEdgeUpdateStart: onEdgeUpdateStart,\n        onEdgeUpdateEnd: onEdgeUpdateEnd,\n        edgeUpdaterRadius: edgeUpdaterRadius,\n        defaultMarkerColor: defaultMarkerColor,\n        noDragClassName: noDragClassName,\n        noWheelClassName: noWheelClassName,\n        noPanClassName: noPanClassName,\n        elevateEdgesOnSelect: elevateEdgesOnSelect,\n        rfId: rfId,\n        disableKeyboardA11y: disableKeyboardA11y,\n        nodeOrigin: nodeOrigin,\n        nodeExtent: nodeExtent\n      }), jsx(StoreUpdater, {\n        nodes: nodes,\n        edges: edges,\n        defaultNodes: defaultNodes,\n        defaultEdges: defaultEdges,\n        onConnect: onConnect,\n        onConnectStart: onConnectStart,\n        onConnectEnd: onConnectEnd,\n        onClickConnectStart: onClickConnectStart,\n        onClickConnectEnd: onClickConnectEnd,\n        nodesDraggable: nodesDraggable,\n        nodesConnectable: nodesConnectable,\n        nodesFocusable: nodesFocusable,\n        edgesFocusable: edgesFocusable,\n        edgesUpdatable: edgesUpdatable,\n        elementsSelectable: elementsSelectable,\n        elevateNodesOnSelect: elevateNodesOnSelect,\n        minZoom: minZoom,\n        maxZoom: maxZoom,\n        nodeExtent: nodeExtent,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        snapToGrid: snapToGrid,\n        snapGrid: snapGrid,\n        connectionMode: connectionMode,\n        translateExtent: translateExtent,\n        connectOnClick: connectOnClick,\n        defaultEdgeOptions: defaultEdgeOptions,\n        fitView: fitView,\n        fitViewOptions: fitViewOptions,\n        onNodesDelete: onNodesDelete,\n        onEdgesDelete: onEdgesDelete,\n        onNodeDragStart: onNodeDragStart,\n        onNodeDrag: onNodeDrag,\n        onNodeDragStop: onNodeDragStop,\n        onSelectionDrag: onSelectionDrag,\n        onSelectionDragStart: onSelectionDragStart,\n        onSelectionDragStop: onSelectionDragStop,\n        noPanClassName: noPanClassName,\n        nodeOrigin: nodeOrigin,\n        rfId: rfId,\n        autoPanOnConnect: autoPanOnConnect,\n        autoPanOnNodeDrag: autoPanOnNodeDrag,\n        onError: onError,\n        connectionRadius: connectionRadius,\n        isValidConnection: isValidConnection\n      }), jsx(Wrapper$1, {\n        onSelectionChange: onSelectionChange\n      }), children, jsx(Attribution, {\n        proOptions: proOptions,\n        position: attributionPosition\n      }), jsx(A11yDescriptions, {\n        rfId: rfId,\n        disableKeyboardA11y: disableKeyboardA11y\n      })]\n    })\n  }));\n});\nReactFlow.displayName = 'ReactFlow';\nvar selector$1 = function selector$1(s) {\n  var _s$domNode;\n  return (_s$domNode = s.domNode) === null || _s$domNode === void 0 ? void 0 : _s$domNode.querySelector('.react-flow__edgelabel-renderer');\n};\nfunction EdgeLabelRenderer(_ref81) {\n  var children = _ref81.children;\n  var edgeLabelRenderer = useStore(selector$1);\n  if (!edgeLabelRenderer) {\n    return null;\n  }\n  return createPortal(children, edgeLabelRenderer);\n}\nfunction useUpdateNodeInternals() {\n  var store = useStoreApi();\n  return useCallback(function (id) {\n    var _store$getState37 = store.getState(),\n      domNode = _store$getState37.domNode,\n      updateNodeDimensions = _store$getState37.updateNodeDimensions;\n    var updateIds = Array.isArray(id) ? id : [id];\n    var updates = updateIds.reduce(function (res, updateId) {\n      var nodeElement = domNode === null || domNode === void 0 ? void 0 : domNode.querySelector(\".react-flow__node[data-id=\\\"\".concat(updateId, \"\\\"]\"));\n      if (nodeElement) {\n        res.push({\n          id: updateId,\n          nodeElement: nodeElement,\n          forceUpdate: true\n        });\n      }\n      return res;\n    }, []);\n    requestAnimationFrame(function () {\n      return updateNodeDimensions(updates);\n    });\n  }, []);\n}\nvar nodesSelector = function nodesSelector(state) {\n  return state.getNodes();\n};\nfunction useNodes() {\n  var nodes = useStore(nodesSelector, shallow);\n  return nodes;\n}\nvar edgesSelector = function edgesSelector(state) {\n  return state.edges;\n};\nfunction useEdges() {\n  var edges = useStore(edgesSelector, shallow);\n  return edges;\n}\nvar viewportSelector = function viewportSelector(state) {\n  return {\n    x: state.transform[0],\n    y: state.transform[1],\n    zoom: state.transform[2]\n  };\n};\nfunction useViewport() {\n  var viewport = useStore(viewportSelector, shallow);\n  return viewport;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction createUseItemsState(applyChanges) {\n  return function (initialItems) {\n    var _useState11 = useState(initialItems),\n      _useState12 = _slicedToArray(_useState11, 2),\n      items = _useState12[0],\n      setItems = _useState12[1];\n    var onItemsChange = useCallback(function (changes) {\n      return setItems(function (items) {\n        return applyChanges(changes, items);\n      });\n    }, []);\n    return [items, setItems, onItemsChange];\n  };\n}\nvar useNodesState = createUseItemsState(applyNodeChanges);\nvar useEdgesState = createUseItemsState(applyEdgeChanges);\nfunction useOnViewportChange(_ref82) {\n  var onStart = _ref82.onStart,\n    onChange = _ref82.onChange,\n    onEnd = _ref82.onEnd;\n  var store = useStoreApi();\n  useEffect(function () {\n    store.setState({\n      onViewportChangeStart: onStart\n    });\n  }, [onStart]);\n  useEffect(function () {\n    store.setState({\n      onViewportChange: onChange\n    });\n  }, [onChange]);\n  useEffect(function () {\n    store.setState({\n      onViewportChangeEnd: onEnd\n    });\n  }, [onEnd]);\n}\nfunction useOnSelectionChange(_ref83) {\n  var onChange = _ref83.onChange;\n  var store = useStoreApi();\n  useEffect(function () {\n    store.setState({\n      onSelectionChange: onChange\n    });\n  }, [onChange]);\n}\nvar selector = function selector(options) {\n  return function (s) {\n    if (s.nodeInternals.size === 0) {\n      return false;\n    }\n    return s.getNodes().filter(function (n) {\n      return options.includeHiddenNodes ? true : !n.hidden;\n    }).every(function (n) {\n      var _n$internalsSymbol;\n      return ((_n$internalsSymbol = n[internalsSymbol]) === null || _n$internalsSymbol === void 0 ? void 0 : _n$internalsSymbol.handleBounds) !== undefined;\n    });\n  };\n};\nvar defaultOptions = {\n  includeHiddenNodes: false\n};\nfunction useNodesInitialized() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOptions;\n  var initialized = useStore(selector(options));\n  return initialized;\n}\nexport { BaseEdge, BezierEdge, ConnectionLineType, ConnectionMode, EdgeLabelRenderer, EdgeText$1 as EdgeText, Handle$1 as Handle, MarkerType, PanOnScrollMode, Panel, Position, ReactFlow, ReactFlowProvider, SelectionMode, SimpleBezierEdge, SmoothStepEdge, StepEdge, StraightEdge, addEdge, applyEdgeChanges, applyNodeChanges, boxToRect, clamp, getBezierPath, getBoundsOfRects, getConnectedEdges, getIncomers, getMarkerEnd, getNodePositionWithOrigin, getOutgoers, getRectOfNodes, getSimpleBezierPath, getSmoothStepPath, getStraightPath, getTransformForBounds, internalsSymbol, isEdge, isNode, rectToBox, updateEdge, useEdges, useEdgesState, useGetPointerPosition, useKeyPress, useNodeId, useNodes, useNodesInitialized, useNodesState, useOnSelectionChange, useOnViewportChange, useReactFlow, useStore, useStoreApi, useUpdateNodeInternals, useViewport };","map":{"version":3,"names":["jsx","jsxs","Fragment","createContext","useContext","useMemo","memo","useRef","useState","useEffect","forwardRef","useCallback","cc","useStore","useStore$1","createStore","shallow","drag","select","pointer","zoomIdentity","zoom","createPortal","StoreContext","Provider$1","Provider","errorMessages","error001","error002","error003","nodeType","concat","error004","error005","error006","error007","id","error009","type","error008","sourceHandle","edge","targetHandle","error010","error011","edgeType","zustandErrorMessage","selector","equalityFn","store","Error","useStoreApi","getState","setState","subscribe","destroy","selector$g","s","userSelectionActive","Panel","_ref","position","children","className","style","rest","_objectWithoutProperties","_excluded","pointerEvents","positionClasses","split","_objectSpread","_toConsumableArray","Attribution","_ref2","proOptions","_ref2$position","hideAttribution","href","target","rel","EdgeText","_ref3","x","y","label","_ref3$labelStyle","labelStyle","_ref3$labelShowBg","labelShowBg","_ref3$labelBgStyle","labelBgStyle","_ref3$labelBgPadding","labelBgPadding","_ref3$labelBgBorderRa","labelBgBorderRadius","_excluded2","edgeRef","_useState","width","height","_useState2","_slicedToArray","edgeTextBbox","setEdgeTextBbox","edgeTextClasses","current","textBbox","getBBox","transform","visibility","rx","ry","dy","ref","EdgeText$1","getDimensions","node","offsetWidth","offsetHeight","clamp","val","min","arguments","length","undefined","max","Math","clampPosition","extent","calcAutoPanVelocity","value","abs","calcAutoPan","pos","bounds","xMovement","yMovement","getHostForElement","element","_element$getRootNode","_window","getRootNode","call","window","document","getBoundsOfBoxes","box1","box2","x2","y2","rectToBox","_ref4","boxToRect","_ref5","nodeToRect","positionAbsolute","getBoundsOfRects","rect1","rect2","getOverlappingArea","rectA","rectB","xOverlap","yOverlap","ceil","isRectObject","obj","isNumeric","n","isNaN","isFinite","internalsSymbol","Symbol","for","elementSelectionKeys","devWarn","message","process","env","NODE_ENV","console","warn","isReactKeyboardEvent","event","isInputDOMNode","_kbEvent$composedPath","kbEvent","nativeEvent","composedPath","isInput","includes","nodeName","hasAttribute","closest","isMouseEvent","getEventPosition","_event$touches","_event$touches2","_bounds$left","_bounds$top","isMouseTriggered","evtX","clientX","touches","evtY","clientY","left","top","BaseEdge","_ref6","path","labelX","labelY","markerEnd","markerStart","_ref6$interactionWidt","interactionWidth","d","fill","strokeOpacity","strokeWidth","displayName","getMarkerEnd","markerType","markerEndId","getMouseHandler$1","handler","edges","find","e","getEdgeCenter","_ref7","sourceX","sourceY","targetX","targetY","xOffset","centerX","yOffset","centerY","getBezierEdgeCenter","_ref8","sourceControlX","sourceControlY","targetControlX","targetControlY","offsetX","offsetY","ConnectionMode","PanOnScrollMode","SelectionMode","ConnectionLineType","MarkerType","Position","getControl","_ref9","x1","y1","Left","Right","getSimpleBezierPath","_ref10","_ref10$sourcePosition","sourcePosition","Bottom","_ref10$targetPosition","targetPosition","Top","_getControl","_getControl2","_getControl3","_getControl4","_getBezierEdgeCenter","_getBezierEdgeCenter2","SimpleBezierEdge","_ref11","_ref11$sourcePosition","_ref11$targetPosition","_getSimpleBezierPath","_getSimpleBezierPath2","handleDirections","_handleDirections","_defineProperty","getDirection","_ref12","source","_ref12$sourcePosition","distance","a","b","sqrt","pow","getPoints","_ref13","_ref13$sourcePosition","_ref13$targetPosition","center","offset","sourceDir","targetDir","sourceGapped","targetGapped","dir","dirAccessor","currDir","points","_getEdgeCenter","_getEdgeCenter2","defaultCenterX","defaultCenterY","defaultOffsetX","defaultOffsetY","verticalSplit","horizontalSplit","sourceTarget","targetSource","dirAccessorOpposite","isSameDir","sourceGtTargetOppo","sourceLtTargetOppo","flipSourceTarget","pathPoints","getBend","c","size","bendSize","xDir","yDir","getSmoothStepPath","_ref14","_ref14$sourcePosition","_ref14$targetPosition","_ref14$borderRadius","borderRadius","_ref14$offset","_getPoints","_getPoints2","reduce","res","p","i","segment","SmoothStepEdge","_ref15","_ref15$sourcePosition","_ref15$targetPosition","pathOptions","_getSmoothStepPath","_getSmoothStepPath2","StepEdge","props","_props$pathOptions2","_props$pathOptions","getStraightPath","_ref16","_getEdgeCenter3","_getEdgeCenter4","StraightEdge","_ref17","_getStraightPath","_getStraightPath2","calculateControlOffset","curvature","getControlWithCurvature","_ref18","getBezierPath","_ref19","_ref19$sourcePosition","_ref19$targetPosition","_ref19$curvature","_getControlWithCurvat","_getControlWithCurvat2","_getControlWithCurvat3","_getControlWithCurvat4","_getBezierEdgeCenter3","_getBezierEdgeCenter4","BezierEdge","_ref20","_ref20$sourcePosition","_ref20$targetPosition","_getBezierPath","_getBezierPath2","NodeIdContext","Consumer","useNodeId","nodeId","isEdge","isNode","getOutgoers","nodes","outgoerIds","filter","map","getIncomers","incomersIds","getEdgeId","_ref21","getMarkerId","marker","rfId","idPrefix","Object","keys","sort","key","join","connectionExists","some","el","addEdge","edgeParams","updateEdge","oldEdge","newConnection","options","shouldReplaceId","oldEdgeId","_excluded3","foundEdge","pointToRendererPoint","_ref22","_ref23","snapToGrid","_ref24","_ref25","tx","ty","tScale","_ref26","snapX","snapY","round","rendererPointToPoint","_ref27","_ref28","_ref29","getNodePositionWithOrigin","_node$width","_node$height","nodeOrigin","getRectOfNodes","box","currBox","_getNodePositionWithO","Infinity","getNodesInside","nodeInternals","rect","_ref30","_ref31","partially","excludeNonSelectableNodes","paneRect","visibleNodes","forEach","_node$selectable","selectable","_node$hidden","hidden","_getNodePositionWithO2","nodeRect","overlappingArea","notInitialized","partiallyVisible","area","isVisible","dragging","push","getConnectedEdges","nodeIds","getTransformForBounds","minZoom","maxZoom","padding","xZoom","yZoom","clampedZoom","boundsCenterX","boundsCenterY","getD3Transition","selection","duration","transition","getHandles","handleBounds","currentHandle","h","_node$positionAbsolut","_node$positionAbsolut2","_node$positionAbsolut3","_node$positionAbsolut4","getClosestHandle","doc","connectionRadius","handles","validator","_getEventPosition","domNodes","elementsFromPoint","handleBelow","classList","contains","handleNodeId","getAttribute","handleType","getHandleType","handleId","validHandleResult","handle","closestHandles","minDistance","defaultResult","hasValidHandle","_ref32","isValid","hasTargetHandle","_ref33","_ref34","nullConnection","handleDomNode","connection","endHandle","isValidHandle","connectionMode","fromNodeId","fromHandleId","fromType","isValidConnection","isTarget","handleToCheck","querySelector","result","connectable","connectableEnd","isConnectable","Strict","getHandleLookup","_ref35","sourceHandles","targetHandles","apply","edgeUpdaterType","resetRecentHandle","remove","getConnectionStatus","isInsideConnectionRadius","isHandleValid","connectionStatus","handlePointerDown","_ref36","onConnect","onEdgeUpdateEnd","_getState","domNode","autoPanOnConnect","onConnectStart","panBy","getNodes","cancelConnection","autoPanId","closestHandle","_getEventPosition2","clickedHandle","elementFromPoint","containerBounds","getBoundingClientRect","prevActiveHandle","connectionPosition","autoPanStarted","handleLookup","autoPan","_calcAutoPan","_calcAutoPan2","requestAnimationFrame","connectionNodeId","connectionHandleId","connectionHandleType","connectionStartHandle","connectionEndHandle","onPointerMove","_getState2","_getClosestHandle","add","toggle","onPointerUp","_getState$onConnectEn","_getState3","onConnectEnd","cancelAnimationFrame","removeEventListener","addEventListener","alwaysValid","selector$f","connectOnClick","noPanClassName","connectingSelector","state","startHandle","clickHandle","connectionClickStartHandle","connecting","clickConnecting","Handle","_ref37","_ref37$type","_ref37$position","_ref37$isConnectable","_ref37$isConnectableS","isConnectableStart","_ref37$isConnectableE","isConnectableEnd","onMouseDown","onTouchStart","_excluded4","_useStore","_useStore2","_store$getState$onErr","_store$getState","onError","onConnectExtended","params","_store$getState2","defaultEdgeOptions","onConnectAction","hasDefaultEdges","_store$getState3","setEdges","onPointerDown","button","onClick","_store$getState4","onClickConnectStart","onClickConnectEnd","isValidConnectionStore","isValidConnectionHandler","_isValidHandle","connectablestart","connectableend","connectionindicator","Handle$1","DefaultNode","_ref38","data","_ref38$targetPosition","_ref38$sourcePosition","DefaultNode$1","InputNode","_ref39","_ref39$sourcePosition","InputNode$1","OutputNode","_ref40","_ref40$targetPosition","OutputNode$1","GroupNode","selector$e","selectedNodes","selected","selectedEdges","selectId","areEqual","SelectionListener","_ref41","onSelectionChange","_useStore3","_store$getState$onSel","_store$getState5","changeSelector","Wrapper$1","_ref42","storeHasSelectionChange","selector$d","setNodes","setDefaultNodesAndEdges","setMinZoom","setMaxZoom","setTranslateExtent","setNodeExtent","reset","useStoreUpdater","setStoreState","useDirectStoreUpdater","StoreUpdater","_ref43","defaultNodes","defaultEdges","nodesDraggable","nodesConnectable","nodesFocusable","edgesFocusable","edgesUpdatable","elevateNodesOnSelect","nodeExtent","onNodesChange","onEdgesChange","elementsSelectable","snapGrid","translateExtent","fitView","fitViewOptions","onNodesDelete","onEdgesDelete","onNodeDrag","onNodeDragStart","onNodeDragStop","onSelectionDrag","onSelectionDragStart","onSelectionDragStop","autoPanOnNodeDrag","_useStore4","edgesWithDefaults","display","ariaLiveStyle","margin","border","overflow","clip","clipPath","ARIA_NODE_DESC_KEY","ARIA_EDGE_DESC_KEY","ARIA_LIVE_MESSAGE","selector$c","ariaLiveMessage","AriaLiveMessage","_ref44","A11yDescriptions","_ref45","disableKeyboardA11y","shiftX","shift","shiftY","EdgeUpdaterClassName","EdgeAnchor","_ref46","_ref46$radius","radius","onMouseEnter","onMouseOut","cx","cy","r","stroke","alwaysValidConnection","wrapEdge","EdgeComponent","EdgeWrapper","_ref47","onEdgeDoubleClick","animated","sourceHandleId","targetHandleId","onContextMenu","onMouseMove","onMouseLeave","edgeUpdaterRadius","onEdgeUpdate","onEdgeUpdateStart","ariaLabel","isFocusable","isUpdatable","_useState3","_useState4","updateHover","setUpdateHover","_useState5","_useState6","updating","setUpdating","markerStartUrl","markerEndUrl","onEdgeClick","_store$getState6","addSelectedEdges","nodesSelectionActive","onEdgeDoubleClickHandler","onEdgeContextMenu","onEdgeMouseEnter","onEdgeMouseMove","onEdgeMouseLeave","handleEdgeUpdater","isSourceHandle","_store$getState7","_onEdgeUpdateEnd","evt","onConnectEdge","onEdgeUpdaterSourceMouseDown","onEdgeUpdaterTargetMouseDown","onEdgeUpdaterMouseEnter","onEdgeUpdaterMouseOut","inactive","onKeyDown","_store$getState8","unselectNodesAndEdges","unselect","_edgeRef$current","blur","onDoubleClick","tabIndex","role","createEdgeTypes","edgeTypes","standardTypes","default","straight","bezier","step","smoothstep","simplebezier","wrappedTypes","specialTypes","k","getHandlePosition","getHandle","getEdgePositions","sourceNodeRect","targetNodeRect","sourceHandlePos","targetHandlePos","isEdgeVisible","_ref48","sourcePos","targetPos","sourceWidth","sourceHeight","targetWidth","targetHeight","edgeBox","viewBox","getNodeData","_node$internalsSymbol","_node$positionAbsolut5","_node$positionAbsolut6","_node$positionAbsolut7","_node$positionAbsolut8","isParentSelected","parentNode","get","hasSelector","nodeRef","_current","matches","parentElement","getDragItems","mousePos","Array","from","values","draggable","_n$positionAbsolute$x","_n$positionAbsolute","_n$positionAbsolute$y","_n$positionAbsolute2","delta","clampNodeExtent","calcNextPosition","nextPosition","clampedNodeExtent","currentExtent","parent","_getNodePositionWithO3","parentX","parentY","_getNodePositionWithO4","parentPosition","getEventHandlerParams","_ref49","dragItems","extentedDragItems","getHandleBounds","nodeElement","querySelectorAll","handlesArray","nodeBounds","nodeOffset","getMouseHandler","handleNodeClick","_ref50","_ref50$unselect","_store$getState9","addSelectedNodes","multiSelectionActive","_nodeRef$current","useGetPointerPosition","getPointerPosition","_ref51","sourceEvent","_store$getState10","pointerPos","xSnapped","ySnapped","wrapSelectionDragFunc","selectionFunc","_","useDrag","_ref52","_ref52$disabled","disabled","noDragClassName","handleSelector","isSelectable","selectNodesOnDrag","_useState7","_useState8","setDragging","lastPos","mousePosition","dragEvent","updateNodes","_ref53","_store$getState11","updateNodePositions","hasChange","updatedPos","onDrag","_getEventHandlerParam","_getEventHandlerParam2","currentNode","_calcAutoPan3","_calcAutoPan4","_lastPos$current$x","_lastPos$current$y","_store$getState12","on","dragHandler","_store$getState13","onStart","_nodeInternals$get","_getEventHandlerParam3","_getEventHandlerParam4","_store$getState14","_store$getState15","onStop","_getEventHandlerParam5","_getEventHandlerParam6","isDraggable","useUpdateNodePositions","updatePositions","_store$getState16","xVelo","yVelo","factor","isShiftPressed","positionDiffX","positionDiffY","nodeUpdates","_calcNextPosition","arrowKeyDiffs","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","wrapNode","NodeComponent","NodeWrapper","_ref54","xPos","yPos","xPosOrigin","yPosOrigin","resizeObserver","dragHandle","zIndex","isParent","initialized","prevSourcePosition","prevTargetPosition","prevType","hasPointerEvents","onMouseEnterHandler","onMouseMoveHandler","onMouseLeaveHandler","onContextMenuHandler","onDoubleClickHandler","onSelectNodeHandler","prototype","hasOwnProperty","replace","toLowerCase","shiftKey","currNode","observe","unobserve","typeChanged","sourcePosChanged","targetPosChanged","updateNodeDimensions","forceUpdate","createNodeTypes","nodeTypes","input","output","group","getPositionWithOrigin","_ref56","origin","useKeyPress","keyCode","_useState9","_useState10","keyPressed","setKeyPressed","modifierPressed","pressedKeys","Set","_useMemo","keyCodeArr","isArray","kc","keysFlat","item","_useMemo2","keyCodes","keysToWatch","_options$target","_options$target2","downHandler","ctrlKey","metaKey","keyOrCode","useKeyOrCode","code","isMatchingKey","preventDefault","upHandler","clear","delete","resetHandler","_options$target3","_options$target4","isUp","every","has","eventCode","calculateXYZPosition","_result$x","_result$y","_parentNode$internals","_parentNode$internals2","_result$z","_parentNode$internals3","_parentNode$internals4","_result$z2","parentNodePosition","z","updateAbsoluteNodePositions","parentNodes","_node$internalsSymbol2","_node$internalsSymbol3","_calculateXYZPosition","createNodeInternals","nextNodeInternals","Map","selectedNodeZ","_currInternals$intern","currInternals","internals","defineProperty","enumerable","set","_get","d3Zoom","d3Selection","fitViewOnInitDone","fitViewOnInit","isInitialFitView","initial","d3initialized","_options$nodes","includeHiddenNodes","optionNode","nodesInitialized","_options$minZoom","_options$maxZoom","_options$padding","_getTransformForBound","_getTransformForBound2","nextTransform","translate","scale","handleControlledNodeSelectionChange","nodeChanges","change","_objectSpread2","handleControlledEdgeSelectionChange","edgeChanges","updateNodesAndEdgesSelections","_ref57","changedNodes","changedEdges","_get2","hasDefaultNodes","noop","initialViewportHelper","zoomIn","zoomOut","zoomTo","getZoom","setViewport","getViewport","setCenter","fitBounds","project","viewportInitialized","selector$b","useViewportHelper","_useStore5","viewportHelperFunctions","scaleBy","zoomLevel","scaleTo","_transform$x","_transform$y","_transform$zoom","_store$getState$trans","_store$getState$trans2","_store$getState17","nextZoom","_options$padding2","_store$getState18","_getTransformForBound3","_getTransformForBound4","_store$getState19","useReactFlow","viewportHelper","getNode","getEdges","_store$getState20","_store$getState20$edg","getEdge","_store$getState21","_store$getState21$edg","payload","_store$getState22","nextNodes","changes","_store$getState23","_store$getState23$edg","nextEdges","addNodes","_store$getState24","currentNodes","addEdges","_store$getState25","_store$getState25$edg","toObject","_store$getState26","_store$getState26$edg","_transform","viewport","deleteElements","_ref58","nodesDeleted","edgesDeleted","_store$getState27","edgeIds","nodesToRemove","parentHit","deletable","deletableEdges","initialHitEdges","connectedEdges","edgesToRemove","edgeIdsToRemove","getNodeRect","nodeOrRect","isRect","getIntersectingNodes","_getNodeRect","_getNodeRect2","currNodeRect","isNodeIntersecting","_getNodeRect3","_getNodeRect4","useGlobalKeyHandler","_ref59","deleteKeyCode","multiSelectionKeyCode","_useReactFlow","deleteKeyPressed","multiSelectionKeyPressed","_store$getState28","useResizeHandler","rendererNode","updateDimensions","_store$getState$onErr2","_store$getState29","ResizeObserver","containerStyle","viewChanged","prevViewport","eventViewport","eventToFlowTransform","isWrappedWithClass","isRightClickPan","panOnDrag","usedButton","selector$a","d3ZoomHandler","ZoomPane","_ref60","onMove","onMoveStart","onMoveEnd","onPaneContextMenu","_ref60$zoomOnScroll","zoomOnScroll","_ref60$zoomOnPinch","zoomOnPinch","_ref60$panOnScroll","panOnScroll","_ref60$panOnScrollSpe","panOnScrollSpeed","_ref60$panOnScrollMod","panOnScrollMode","Free","_ref60$zoomOnDoubleCl","zoomOnDoubleClick","_ref60$panOnDrag","defaultViewport","zoomActivationKeyCode","_ref60$preventScrolli","preventScrolling","noWheelClassName","timerId","isZoomingOrPanning","zoomedWithRightMouseButton","zoomPane","prevTransform","_useStore6","zoomActivationKeyPressed","mouseButton","bbox","d3ZoomInstance","scaleExtent","updatedTransform","constrainedTransform","constrain","stopImmediatePropagation","currentZoom","property","point","pinchDelta","deltaY","deltaMode","deltaNormalize","deltaX","Vertical","Horizontal","translateBy","passive","_event$sourceEvent","_store$getState30","onViewportChangeStart","paneDragging","flowTransform","_mouseButton$current","_store$getState31","onViewportChange","_mouseButton$current2","_store$getState32","onViewportChangeEnd","clearTimeout","setTimeout","zoomScroll","pinchZoom","buttonAllowed","selector$9","userSelectionRect","UserSelection","_useStore7","isActive","handleParentExpand","updateItem","extendWidth","extendHeight","_parent$style$width","_parent$style$height","xDiff","yDiff","applyChanges","elements","initElements","currentChanges","_iterator","_createForOfIteratorHelper","_step","done","currentChange","expandParent","dimensions","updateStyle","resizing","err","f","applyNodeChanges","applyEdgeChanges","createSelectionChange","getSelectionChanges","items","selectedIds","willBeSelected","wrapHandler","containerRef","selector$8","Pane","_ref61","isSelecting","_ref61$selectionMode","selectionMode","Full","onSelectionStart","onSelectionEnd","onPaneClick","onPaneScroll","onPaneMouseEnter","onPaneMouseMove","onPaneMouseLeave","container","prevSelectedNodesCount","prevSelectedEdgesCount","_useStore8","resetUserSelection","resetSelectedElements","onWheel","_store$getState33","_getEventPosition3","startX","startY","_userSelectionRect$st","_userSelectionRect$st2","_store$getState34","nextUserSelectRect","Partial","selectedEdgeIds","selectedNodeIds","onMouseUp","_store$getState35","hasActiveSelection","selector$7","transformString","NodesSelection","_ref62","onSelectionContextMenu","_useStore9","_nodeRef$current2","focus","preventScroll","NodesSelection$1","selector$6","FlowRenderer","_ref63","selectionKeyCode","selectionOnDrag","panActivationKeyCode","_panOnDrag","selectionKeyPressed","panActivationKeyPressed","FlowRenderer$1","useVisibleNodes","onlyRenderVisible","selector$5","NodeRenderer","_useStore10","onlyRenderVisibleElements","resizeObserverRef","observer","entries","updates","entry","_resizeObserverRef$cu","disconnect","_clampedPosition$x","_clampedPosition$y","_node$width2","_node$height2","_node$internalsSymbol4","_node$internalsSymbol5","_node$internalsSymbol6","focusable","clampedPosition","posX","posY","posOrigin","onNodeClick","onNodeMouseEnter","onNodeMouseMove","onNodeMouseLeave","onNodeContextMenu","onNodeDoubleClick","NodeRenderer$1","defaultEdgeTree","level","isMaxLevel","groupEdgesByZLevel","elevateEdgesOnSelect","maxLevel","levelLookup","tree","hasZIndex","_sourceNode$internals","_targetNode$internals","targetNode","sourceNode","edgeOrConnectedNodeSelected","selectedZIndex","edgeTree","_ref64","_ref65","useVisibleEdges","ArrowSymbol","_ref66","_ref66$color","color","_ref66$strokeWidth","strokeLinecap","strokeLinejoin","ArrowClosedSymbol","_ref67","_ref67$color","_ref67$strokeWidth","MarkerSymbols","_MarkerSymbols","Arrow","ArrowClosed","useMarkerSymbol","symbol","symbolExists","_store$getState$onErr3","_store$getState36","Marker","_ref68","_ref68$width","_ref68$height","_ref68$markerUnits","markerUnits","_ref68$orient","orient","markerWidth","markerHeight","refX","refY","markerSelector","_ref69","defaultColor","ids","markers","markerId","localeCompare","MarkerDefinitions","_ref70","m","MarkerDefinitions$1","selector$4","EdgeRenderer","_ref71","defaultMarkerColor","_useStore11","_ref72","_targetHandleBounds$t","_targetHandleBounds$s","_getNodeData","_getNodeData2","sourceHandleBounds","sourceIsValid","_getNodeData3","_getNodeData4","targetHandleBounds","targetIsValid","targetNodeHandles","updatable","_getEdgePositions","EdgeRenderer$1","selector$3","Viewport","_ref73","useOnInitHandler","onInit","rfInstance","isInitialized","oppositePosition","_oppositePosition","ConnectionLine","_ref74","_fromNode$internalsSy","_fromNode$width","_fromNode$height","_fromNode$positionAbs","_fromNode$positionAbs2","_fromNode$positionAbs3","_fromNode$positionAbs4","_ref74$type","Bezier","CustomComponent","_useStore12","fromNode","toX","toY","fromHandleBounds","Loose","fromHandle","fromHandleX","fromHandleY","fromX","fromY","fromPosition","toPosition","connectionLineType","connectionLineStyle","dAttr","pathParams","_getBezierPath3","_getBezierPath4","Step","_getSmoothStepPath3","_getSmoothStepPath4","SmoothStep","_getSmoothStepPath5","_getSmoothStepPath6","SimpleBezier","_getSimpleBezierPath3","_getSimpleBezierPath4","selector$2","ConnectionLineWrapper","_ref75","component","_useStore13","GraphView","_ref76","connectionLineComponent","connectionLineContainerStyle","GraphView$1","infiniteExtent","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","initialState","fitViewOnInitOptions","createRFStore","_get3","_get4","_get4$defaultEdgeOpti","_get5","viewportNode","getComputedStyle","_window$DOMMatrixRead","DOMMatrixReadOnly","m22","update","doUpdate","nextFitViewOnInitDone","nodeDragItems","positionChanged","_get6","triggerNodeChanges","_get7","_get8","_get9","edgeId","_ref77","_get10","storeEdges","nodesToUnselect","edgesToUnselect","_get11","_get12","_get$d3Zoom","_get13","_get14","_get15","transformChanged","ReactFlowProvider","_ref78","storeRef","Wrapper","_ref79","isWrapped","useNodeOrEdgeTypes","nodeOrEdgeTypes","createTypes","typesKeysRef","typesParsed","typeKeys","defaultNodeTypes","defaultEdgeTypes","initNodeOrigin","initSnapGrid","initDefaultViewport","wrapperStyle","ReactFlow","_ref80","_ref80$nodeTypes","_ref80$edgeTypes","_ref80$connectionMode","_ref80$connectionLine","_ref80$deleteKeyCode","_ref80$selectionKeyCo","_ref80$selectionOnDra","_ref80$selectionMode","_ref80$panActivationK","_ref80$multiSelection","_ref80$zoomActivation","_ref80$snapToGrid","_ref80$snapGrid","_ref80$onlyRenderVisi","_ref80$selectNodesOnD","_ref80$nodeOrigin","_ref80$defaultViewpor","_ref80$minZoom","_ref80$maxZoom","_ref80$translateExten","_ref80$preventScrolli","_ref80$defaultMarkerC","_ref80$zoomOnScroll","_ref80$zoomOnPinch","_ref80$panOnScroll","_ref80$panOnScrollSpe","_ref80$panOnScrollMod","_ref80$zoomOnDoubleCl","_ref80$panOnDrag","_ref80$edgeUpdaterRad","_ref80$noDragClassNam","_ref80$noWheelClassNa","_ref80$noPanClassName","_ref80$fitView","_ref80$connectOnClick","attributionPosition","_ref80$elevateNodesOn","_ref80$elevateEdgesOn","_ref80$disableKeyboar","_ref80$autoPanOnConne","_ref80$autoPanOnNodeD","_ref80$connectionRadi","_excluded5","nodeTypesWrapped","edgeTypesWrapped","selector$1","_s$domNode","EdgeLabelRenderer","_ref81","edgeLabelRenderer","useUpdateNodeInternals","_store$getState37","updateIds","updateId","nodesSelector","useNodes","edgesSelector","useEdges","viewportSelector","useViewport","createUseItemsState","initialItems","_useState11","_useState12","setItems","onItemsChange","useNodesState","useEdgesState","useOnViewportChange","_ref82","onChange","onEnd","useOnSelectionChange","_ref83","_n$internalsSymbol","defaultOptions","useNodesInitialized"],"sources":["/Users/zorro/Downloads/Flowise/node_modules/@reactflow/core/dist/esm/index.js"],"sourcesContent":["import { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { createContext, useContext, useMemo, memo, useRef, useState, useEffect, forwardRef, useCallback } from 'react';\nimport cc from 'classcat';\nimport { useStore as useStore$1, createStore } from 'zustand';\nimport { shallow } from 'zustand/shallow';\nimport { drag } from 'd3-drag';\nimport { select, pointer } from 'd3-selection';\nimport { zoomIdentity, zoom } from 'd3-zoom';\nimport { createPortal } from 'react-dom';\n\nconst StoreContext = createContext(null);\nconst Provider$1 = StoreContext.Provider;\n\nconst errorMessages = {\n    error001: () => '[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001',\n    error002: () => \"It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.\",\n    error003: (nodeType) => `Node type \"${nodeType}\" not found. Using fallback type \"default\".`,\n    error004: () => 'The React Flow parent container needs a width and a height to render the graph.',\n    error005: () => 'Only child nodes can use a parent extent.',\n    error006: () => \"Can't create edge. An edge needs a source and a target.\",\n    error007: (id) => `The old edge with id=${id} does not exist.`,\n    error009: (type) => `Marker type \"${type}\" doesn't exist.`,\n    error008: (sourceHandle, edge) => `Couldn't create edge for ${!sourceHandle ? 'source' : 'target'} handle id: \"${!sourceHandle ? edge.sourceHandle : edge.targetHandle}\", edge id: ${edge.id}.`,\n    error010: () => 'Handle: No node id found. Make sure to only use a Handle inside a custom Node.',\n    error011: (edgeType) => `Edge type \"${edgeType}\" not found. Using fallback type \"default\".`,\n};\n\nconst zustandErrorMessage = errorMessages['error001']();\nfunction useStore(selector, equalityFn) {\n    const store = useContext(StoreContext);\n    if (store === null) {\n        throw new Error(zustandErrorMessage);\n    }\n    return useStore$1(store, selector, equalityFn);\n}\nconst useStoreApi = () => {\n    const store = useContext(StoreContext);\n    if (store === null) {\n        throw new Error(zustandErrorMessage);\n    }\n    return useMemo(() => ({\n        getState: store.getState,\n        setState: store.setState,\n        subscribe: store.subscribe,\n        destroy: store.destroy,\n    }), [store]);\n};\n\nconst selector$g = (s) => (s.userSelectionActive ? 'none' : 'all');\nfunction Panel({ position, children, className, style, ...rest }) {\n    const pointerEvents = useStore(selector$g);\n    const positionClasses = `${position}`.split('-');\n    return (jsx(\"div\", { className: cc(['react-flow__panel', className, ...positionClasses]), style: { ...style, pointerEvents }, ...rest, children: children }));\n}\n\nfunction Attribution({ proOptions, position = 'bottom-right' }) {\n    if (proOptions?.hideAttribution) {\n        return null;\n    }\n    return (jsx(Panel, { position: position, className: \"react-flow__attribution\", \"data-message\": \"Please only hide this attribution when you are subscribed to React Flow Pro: https://pro.reactflow.dev\", children: jsx(\"a\", { href: \"https://reactflow.dev\", target: \"_blank\", rel: \"noopener noreferrer\", \"aria-label\": \"React Flow attribution\", children: \"React Flow\" }) }));\n}\n\nconst EdgeText = ({ x, y, label, labelStyle = {}, labelShowBg = true, labelBgStyle = {}, labelBgPadding = [2, 4], labelBgBorderRadius = 2, children, className, ...rest }) => {\n    const edgeRef = useRef(null);\n    const [edgeTextBbox, setEdgeTextBbox] = useState({ x: 0, y: 0, width: 0, height: 0 });\n    const edgeTextClasses = cc(['react-flow__edge-textwrapper', className]);\n    useEffect(() => {\n        if (edgeRef.current) {\n            const textBbox = edgeRef.current.getBBox();\n            setEdgeTextBbox({\n                x: textBbox.x,\n                y: textBbox.y,\n                width: textBbox.width,\n                height: textBbox.height,\n            });\n        }\n    }, [label]);\n    if (typeof label === 'undefined' || !label) {\n        return null;\n    }\n    return (jsxs(\"g\", { transform: `translate(${x - edgeTextBbox.width / 2} ${y - edgeTextBbox.height / 2})`, className: edgeTextClasses, visibility: edgeTextBbox.width ? 'visible' : 'hidden', ...rest, children: [labelShowBg && (jsx(\"rect\", { width: edgeTextBbox.width + 2 * labelBgPadding[0], x: -labelBgPadding[0], y: -labelBgPadding[1], height: edgeTextBbox.height + 2 * labelBgPadding[1], className: \"react-flow__edge-textbg\", style: labelBgStyle, rx: labelBgBorderRadius, ry: labelBgBorderRadius })), jsx(\"text\", { className: \"react-flow__edge-text\", y: edgeTextBbox.height / 2, dy: \"0.3em\", ref: edgeRef, style: labelStyle, children: label }), children] }));\n};\nvar EdgeText$1 = memo(EdgeText);\n\nconst getDimensions = (node) => ({\n    width: node.offsetWidth,\n    height: node.offsetHeight,\n});\nconst clamp = (val, min = 0, max = 1) => Math.min(Math.max(val, min), max);\nconst clampPosition = (position = { x: 0, y: 0 }, extent) => ({\n    x: clamp(position.x, extent[0][0], extent[1][0]),\n    y: clamp(position.y, extent[0][1], extent[1][1]),\n});\n// returns a number between 0 and 1 that represents the velocity of the movement\n// when the mouse is close to the edge of the canvas\nconst calcAutoPanVelocity = (value, min, max) => {\n    if (value < min) {\n        return clamp(Math.abs(value - min), 1, 50) / 50;\n    }\n    else if (value > max) {\n        return -clamp(Math.abs(value - max), 1, 50) / 50;\n    }\n    return 0;\n};\nconst calcAutoPan = (pos, bounds) => {\n    const xMovement = calcAutoPanVelocity(pos.x, 35, bounds.width - 35) * 20;\n    const yMovement = calcAutoPanVelocity(pos.y, 35, bounds.height - 35) * 20;\n    return [xMovement, yMovement];\n};\nconst getHostForElement = (element) => element.getRootNode?.() || window?.document;\nconst getBoundsOfBoxes = (box1, box2) => ({\n    x: Math.min(box1.x, box2.x),\n    y: Math.min(box1.y, box2.y),\n    x2: Math.max(box1.x2, box2.x2),\n    y2: Math.max(box1.y2, box2.y2),\n});\nconst rectToBox = ({ x, y, width, height }) => ({\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n});\nconst boxToRect = ({ x, y, x2, y2 }) => ({\n    x,\n    y,\n    width: x2 - x,\n    height: y2 - y,\n});\nconst nodeToRect = (node) => ({\n    ...(node.positionAbsolute || { x: 0, y: 0 }),\n    width: node.width || 0,\n    height: node.height || 0,\n});\nconst getBoundsOfRects = (rect1, rect2) => boxToRect(getBoundsOfBoxes(rectToBox(rect1), rectToBox(rect2)));\nconst getOverlappingArea = (rectA, rectB) => {\n    const xOverlap = Math.max(0, Math.min(rectA.x + rectA.width, rectB.x + rectB.width) - Math.max(rectA.x, rectB.x));\n    const yOverlap = Math.max(0, Math.min(rectA.y + rectA.height, rectB.y + rectB.height) - Math.max(rectA.y, rectB.y));\n    return Math.ceil(xOverlap * yOverlap);\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isRectObject = (obj) => isNumeric(obj.width) && isNumeric(obj.height) && isNumeric(obj.x) && isNumeric(obj.y);\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nconst isNumeric = (n) => !isNaN(n) && isFinite(n);\nconst internalsSymbol = Symbol.for('internals');\n// used for a11y key board controls for nodes and edges\nconst elementSelectionKeys = ['Enter', ' ', 'Escape'];\nconst devWarn = (id, message) => {\n    if (process.env.NODE_ENV === 'development') {\n        console.warn(`[React Flow]: ${message} Help: https://reactflow.dev/error#${id}`);\n    }\n};\nconst isReactKeyboardEvent = (event) => 'nativeEvent' in event;\nfunction isInputDOMNode(event) {\n    const kbEvent = isReactKeyboardEvent(event) ? event.nativeEvent : event;\n    // using composed path for handling shadow dom\n    const target = (kbEvent.composedPath?.()?.[0] || event.target);\n    const isInput = ['INPUT', 'SELECT', 'TEXTAREA'].includes(target?.nodeName) || target?.hasAttribute('contenteditable');\n    // when an input field is focused we don't want to trigger deletion or movement of nodes\n    return isInput || !!target?.closest('.nokey');\n}\nconst isMouseEvent = (event) => 'clientX' in event;\nconst getEventPosition = (event, bounds) => {\n    const isMouseTriggered = isMouseEvent(event);\n    const evtX = isMouseTriggered ? event.clientX : event.touches?.[0].clientX;\n    const evtY = isMouseTriggered ? event.clientY : event.touches?.[0].clientY;\n    return {\n        x: evtX - (bounds?.left ?? 0),\n        y: evtY - (bounds?.top ?? 0),\n    };\n};\n\nconst BaseEdge = ({ id, path, labelX, labelY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth = 20, }) => {\n    return (jsxs(Fragment, { children: [jsx(\"path\", { id: id, style: style, d: path, fill: \"none\", className: \"react-flow__edge-path\", markerEnd: markerEnd, markerStart: markerStart }), interactionWidth && (jsx(\"path\", { d: path, fill: \"none\", strokeOpacity: 0, strokeWidth: interactionWidth, className: \"react-flow__edge-interaction\" })), label && isNumeric(labelX) && isNumeric(labelY) ? (jsx(EdgeText$1, { x: labelX, y: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius })) : null] }));\n};\nBaseEdge.displayName = 'BaseEdge';\n\nconst getMarkerEnd = (markerType, markerEndId) => {\n    if (typeof markerEndId !== 'undefined' && markerEndId) {\n        return `url(#${markerEndId})`;\n    }\n    return typeof markerType !== 'undefined' ? `url(#react-flow__${markerType})` : 'none';\n};\nfunction getMouseHandler$1(id, getState, handler) {\n    return handler === undefined\n        ? handler\n        : (event) => {\n            const edge = getState().edges.find((e) => e.id === id);\n            if (edge) {\n                handler(event, { ...edge });\n            }\n        };\n}\n// this is used for straight edges and simple smoothstep edges (LTR, RTL, BTT, TTB)\nfunction getEdgeCenter({ sourceX, sourceY, targetX, targetY, }) {\n    const xOffset = Math.abs(targetX - sourceX) / 2;\n    const centerX = targetX < sourceX ? targetX + xOffset : targetX - xOffset;\n    const yOffset = Math.abs(targetY - sourceY) / 2;\n    const centerY = targetY < sourceY ? targetY + yOffset : targetY - yOffset;\n    return [centerX, centerY, xOffset, yOffset];\n}\nfunction getBezierEdgeCenter({ sourceX, sourceY, targetX, targetY, sourceControlX, sourceControlY, targetControlX, targetControlY, }) {\n    // cubic bezier t=0.5 mid point, not the actual mid point, but easy to calculate\n    // https://stackoverflow.com/questions/67516101/how-to-find-distance-mid-point-of-bezier-curve\n    const centerX = sourceX * 0.125 + sourceControlX * 0.375 + targetControlX * 0.375 + targetX * 0.125;\n    const centerY = sourceY * 0.125 + sourceControlY * 0.375 + targetControlY * 0.375 + targetY * 0.125;\n    const offsetX = Math.abs(centerX - sourceX);\n    const offsetY = Math.abs(centerY - sourceY);\n    return [centerX, centerY, offsetX, offsetY];\n}\n\nvar ConnectionMode;\n(function (ConnectionMode) {\n    ConnectionMode[\"Strict\"] = \"strict\";\n    ConnectionMode[\"Loose\"] = \"loose\";\n})(ConnectionMode || (ConnectionMode = {}));\nvar PanOnScrollMode;\n(function (PanOnScrollMode) {\n    PanOnScrollMode[\"Free\"] = \"free\";\n    PanOnScrollMode[\"Vertical\"] = \"vertical\";\n    PanOnScrollMode[\"Horizontal\"] = \"horizontal\";\n})(PanOnScrollMode || (PanOnScrollMode = {}));\nvar SelectionMode;\n(function (SelectionMode) {\n    SelectionMode[\"Partial\"] = \"partial\";\n    SelectionMode[\"Full\"] = \"full\";\n})(SelectionMode || (SelectionMode = {}));\n\nvar ConnectionLineType;\n(function (ConnectionLineType) {\n    ConnectionLineType[\"Bezier\"] = \"default\";\n    ConnectionLineType[\"Straight\"] = \"straight\";\n    ConnectionLineType[\"Step\"] = \"step\";\n    ConnectionLineType[\"SmoothStep\"] = \"smoothstep\";\n    ConnectionLineType[\"SimpleBezier\"] = \"simplebezier\";\n})(ConnectionLineType || (ConnectionLineType = {}));\nvar MarkerType;\n(function (MarkerType) {\n    MarkerType[\"Arrow\"] = \"arrow\";\n    MarkerType[\"ArrowClosed\"] = \"arrowclosed\";\n})(MarkerType || (MarkerType = {}));\n\nvar Position;\n(function (Position) {\n    Position[\"Left\"] = \"left\";\n    Position[\"Top\"] = \"top\";\n    Position[\"Right\"] = \"right\";\n    Position[\"Bottom\"] = \"bottom\";\n})(Position || (Position = {}));\n\nfunction getControl({ pos, x1, y1, x2, y2 }) {\n    if (pos === Position.Left || pos === Position.Right) {\n        return [0.5 * (x1 + x2), y1];\n    }\n    return [x1, 0.5 * (y1 + y2)];\n}\nfunction getSimpleBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, }) {\n    const [sourceControlX, sourceControlY] = getControl({\n        pos: sourcePosition,\n        x1: sourceX,\n        y1: sourceY,\n        x2: targetX,\n        y2: targetY,\n    });\n    const [targetControlX, targetControlY] = getControl({\n        pos: targetPosition,\n        x1: targetX,\n        y1: targetY,\n        x2: sourceX,\n        y2: sourceY,\n    });\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n        sourceControlX,\n        sourceControlY,\n        targetControlX,\n        targetControlY,\n    });\n    return [\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\n        labelX,\n        labelY,\n        offsetX,\n        offsetY,\n    ];\n}\nconst SimpleBezierEdge = memo(({ sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\n    const [path, labelX, labelY] = getSimpleBezierPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n    });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nSimpleBezierEdge.displayName = 'SimpleBezierEdge';\n\nconst handleDirections = {\n    [Position.Left]: { x: -1, y: 0 },\n    [Position.Right]: { x: 1, y: 0 },\n    [Position.Top]: { x: 0, y: -1 },\n    [Position.Bottom]: { x: 0, y: 1 },\n};\nconst getDirection = ({ source, sourcePosition = Position.Bottom, target, }) => {\n    if (sourcePosition === Position.Left || sourcePosition === Position.Right) {\n        return source.x < target.x ? { x: 1, y: 0 } : { x: -1, y: 0 };\n    }\n    return source.y < target.y ? { x: 0, y: 1 } : { x: 0, y: -1 };\n};\nconst distance = (a, b) => Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n// ith this function we try to mimic a orthogonal edge routing behaviour\n// It's not as good as a real orthogonal edge routing but it's faster and good enough as a default for step and smooth step edges\nfunction getPoints({ source, sourcePosition = Position.Bottom, target, targetPosition = Position.Top, center, offset, }) {\n    const sourceDir = handleDirections[sourcePosition];\n    const targetDir = handleDirections[targetPosition];\n    const sourceGapped = { x: source.x + sourceDir.x * offset, y: source.y + sourceDir.y * offset };\n    const targetGapped = { x: target.x + targetDir.x * offset, y: target.y + targetDir.y * offset };\n    const dir = getDirection({\n        source: sourceGapped,\n        sourcePosition,\n        target: targetGapped,\n    });\n    const dirAccessor = dir.x !== 0 ? 'x' : 'y';\n    const currDir = dir[dirAccessor];\n    let points = [];\n    let centerX, centerY;\n    const [defaultCenterX, defaultCenterY, defaultOffsetX, defaultOffsetY] = getEdgeCenter({\n        sourceX: source.x,\n        sourceY: source.y,\n        targetX: target.x,\n        targetY: target.y,\n    });\n    // opposite handle positions, default case\n    if (sourceDir[dirAccessor] * targetDir[dirAccessor] === -1) {\n        centerX = center.x || defaultCenterX;\n        centerY = center.y || defaultCenterY;\n        //    --->\n        //    |\n        // >---\n        const verticalSplit = [\n            { x: centerX, y: sourceGapped.y },\n            { x: centerX, y: targetGapped.y },\n        ];\n        //    |\n        //  ---\n        //  |\n        const horizontalSplit = [\n            { x: sourceGapped.x, y: centerY },\n            { x: targetGapped.x, y: centerY },\n        ];\n        if (sourceDir[dirAccessor] === currDir) {\n            points = dirAccessor === 'x' ? verticalSplit : horizontalSplit;\n        }\n        else {\n            points = dirAccessor === 'x' ? horizontalSplit : verticalSplit;\n        }\n    }\n    else {\n        // sourceTarget means we take x from source and y from target, targetSource is the opposite\n        const sourceTarget = [{ x: sourceGapped.x, y: targetGapped.y }];\n        const targetSource = [{ x: targetGapped.x, y: sourceGapped.y }];\n        // this handles edges with same handle positions\n        if (dirAccessor === 'x') {\n            points = sourceDir.x === currDir ? targetSource : sourceTarget;\n        }\n        else {\n            points = sourceDir.y === currDir ? sourceTarget : targetSource;\n        }\n        // these are conditions for handling mixed handle positions like Right -> Bottom for example\n        if (sourcePosition !== targetPosition) {\n            const dirAccessorOpposite = dirAccessor === 'x' ? 'y' : 'x';\n            const isSameDir = sourceDir[dirAccessor] === targetDir[dirAccessorOpposite];\n            const sourceGtTargetOppo = sourceGapped[dirAccessorOpposite] > targetGapped[dirAccessorOpposite];\n            const sourceLtTargetOppo = sourceGapped[dirAccessorOpposite] < targetGapped[dirAccessorOpposite];\n            const flipSourceTarget = (sourceDir[dirAccessor] === 1 && ((!isSameDir && sourceGtTargetOppo) || (isSameDir && sourceLtTargetOppo))) ||\n                (sourceDir[dirAccessor] !== 1 && ((!isSameDir && sourceLtTargetOppo) || (isSameDir && sourceGtTargetOppo)));\n            if (flipSourceTarget) {\n                points = dirAccessor === 'x' ? sourceTarget : targetSource;\n            }\n        }\n        centerX = points[0].x;\n        centerY = points[0].y;\n    }\n    const pathPoints = [source, sourceGapped, ...points, targetGapped, target];\n    return [pathPoints, centerX, centerY, defaultOffsetX, defaultOffsetY];\n}\nfunction getBend(a, b, c, size) {\n    const bendSize = Math.min(distance(a, b) / 2, distance(b, c) / 2, size);\n    const { x, y } = b;\n    // no bend\n    if ((a.x === x && x === c.x) || (a.y === y && y === c.y)) {\n        return `L${x} ${y}`;\n    }\n    // first segment is horizontal\n    if (a.y === y) {\n        const xDir = a.x < c.x ? -1 : 1;\n        const yDir = a.y < c.y ? 1 : -1;\n        return `L ${x + bendSize * xDir},${y}Q ${x},${y} ${x},${y + bendSize * yDir}`;\n    }\n    const xDir = a.x < c.x ? 1 : -1;\n    const yDir = a.y < c.y ? -1 : 1;\n    return `L ${x},${y + bendSize * yDir}Q ${x},${y} ${x + bendSize * xDir},${y}`;\n}\nfunction getSmoothStepPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, borderRadius = 5, centerX, centerY, offset = 20, }) {\n    const [points, labelX, labelY, offsetX, offsetY] = getPoints({\n        source: { x: sourceX, y: sourceY },\n        sourcePosition,\n        target: { x: targetX, y: targetY },\n        targetPosition,\n        center: { x: centerX, y: centerY },\n        offset,\n    });\n    const path = points.reduce((res, p, i) => {\n        let segment = '';\n        if (i > 0 && i < points.length - 1) {\n            segment = getBend(points[i - 1], p, points[i + 1], borderRadius);\n        }\n        else {\n            segment = `${i === 0 ? 'M' : 'L'}${p.x} ${p.y}`;\n        }\n        res += segment;\n        return res;\n    }, '');\n    return [path, labelX, labelY, offsetX, offsetY];\n}\nconst SmoothStepEdge = memo(({ sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, sourcePosition = Position.Bottom, targetPosition = Position.Top, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\n    const [path, labelX, labelY] = getSmoothStepPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n        borderRadius: pathOptions?.borderRadius,\n        offset: pathOptions?.offset,\n    });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nSmoothStepEdge.displayName = 'SmoothStepEdge';\n\nconst StepEdge = memo((props) => (jsx(SmoothStepEdge, { ...props, pathOptions: useMemo(() => ({ borderRadius: 0, offset: props.pathOptions?.offset }), [props.pathOptions?.offset]) })));\nStepEdge.displayName = 'StepEdge';\n\nfunction getStraightPath({ sourceX, sourceY, targetX, targetY, }) {\n    const [labelX, labelY, offsetX, offsetY] = getEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n    });\n    return [`M ${sourceX},${sourceY}L ${targetX},${targetY}`, labelX, labelY, offsetX, offsetY];\n}\nconst StraightEdge = memo(({ sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\n    const [path, labelX, labelY] = getStraightPath({ sourceX, sourceY, targetX, targetY });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nStraightEdge.displayName = 'StraightEdge';\n\nfunction calculateControlOffset(distance, curvature) {\n    if (distance >= 0) {\n        return 0.5 * distance;\n    }\n    return curvature * 25 * Math.sqrt(-distance);\n}\nfunction getControlWithCurvature({ pos, x1, y1, x2, y2, c }) {\n    switch (pos) {\n        case Position.Left:\n            return [x1 - calculateControlOffset(x1 - x2, c), y1];\n        case Position.Right:\n            return [x1 + calculateControlOffset(x2 - x1, c), y1];\n        case Position.Top:\n            return [x1, y1 - calculateControlOffset(y1 - y2, c)];\n        case Position.Bottom:\n            return [x1, y1 + calculateControlOffset(y2 - y1, c)];\n    }\n}\nfunction getBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, curvature = 0.25, }) {\n    const [sourceControlX, sourceControlY] = getControlWithCurvature({\n        pos: sourcePosition,\n        x1: sourceX,\n        y1: sourceY,\n        x2: targetX,\n        y2: targetY,\n        c: curvature,\n    });\n    const [targetControlX, targetControlY] = getControlWithCurvature({\n        pos: targetPosition,\n        x1: targetX,\n        y1: targetY,\n        x2: sourceX,\n        y2: sourceY,\n        c: curvature,\n    });\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n        sourceControlX,\n        sourceControlY,\n        targetControlX,\n        targetControlY,\n    });\n    return [\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\n        labelX,\n        labelY,\n        offsetX,\n        offsetY,\n    ];\n}\nconst BezierEdge = memo(({ sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\n    const [path, labelX, labelY] = getBezierPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n        curvature: pathOptions?.curvature,\n    });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nBezierEdge.displayName = 'BezierEdge';\n\nconst NodeIdContext = createContext(null);\nconst Provider = NodeIdContext.Provider;\nNodeIdContext.Consumer;\nconst useNodeId = () => {\n    const nodeId = useContext(NodeIdContext);\n    return nodeId;\n};\n\nconst isEdge = (element) => 'id' in element && 'source' in element && 'target' in element;\nconst isNode = (element) => 'id' in element && !('source' in element) && !('target' in element);\nconst getOutgoers = (node, nodes, edges) => {\n    if (!isNode(node)) {\n        return [];\n    }\n    const outgoerIds = edges.filter((e) => e.source === node.id).map((e) => e.target);\n    return nodes.filter((n) => outgoerIds.includes(n.id));\n};\nconst getIncomers = (node, nodes, edges) => {\n    if (!isNode(node)) {\n        return [];\n    }\n    const incomersIds = edges.filter((e) => e.target === node.id).map((e) => e.source);\n    return nodes.filter((n) => incomersIds.includes(n.id));\n};\nconst getEdgeId = ({ source, sourceHandle, target, targetHandle }) => `reactflow__edge-${source}${sourceHandle || ''}-${target}${targetHandle || ''}`;\nconst getMarkerId = (marker, rfId) => {\n    if (typeof marker === 'undefined') {\n        return '';\n    }\n    if (typeof marker === 'string') {\n        return marker;\n    }\n    const idPrefix = rfId ? `${rfId}__` : '';\n    return `${idPrefix}${Object.keys(marker)\n        .sort()\n        .map((key) => `${key}=${marker[key]}`)\n        .join('&')}`;\n};\nconst connectionExists = (edge, edges) => {\n    return edges.some((el) => el.source === edge.source &&\n        el.target === edge.target &&\n        (el.sourceHandle === edge.sourceHandle || (!el.sourceHandle && !edge.sourceHandle)) &&\n        (el.targetHandle === edge.targetHandle || (!el.targetHandle && !edge.targetHandle)));\n};\nconst addEdge = (edgeParams, edges) => {\n    if (!edgeParams.source || !edgeParams.target) {\n        devWarn('006', errorMessages['error006']());\n        return edges;\n    }\n    let edge;\n    if (isEdge(edgeParams)) {\n        edge = { ...edgeParams };\n    }\n    else {\n        edge = {\n            ...edgeParams,\n            id: getEdgeId(edgeParams),\n        };\n    }\n    if (connectionExists(edge, edges)) {\n        return edges;\n    }\n    return edges.concat(edge);\n};\nconst updateEdge = (oldEdge, newConnection, edges, options = { shouldReplaceId: true }) => {\n    const { id: oldEdgeId, ...rest } = oldEdge;\n    if (!newConnection.source || !newConnection.target) {\n        devWarn('006', errorMessages['error006']());\n        return edges;\n    }\n    const foundEdge = edges.find((e) => e.id === oldEdgeId);\n    if (!foundEdge) {\n        devWarn('007', errorMessages['error007'](oldEdgeId));\n        return edges;\n    }\n    // Remove old edge and create the new edge with parameters of old edge.\n    const edge = {\n        ...rest,\n        id: options.shouldReplaceId ? getEdgeId(newConnection) : oldEdgeId,\n        source: newConnection.source,\n        target: newConnection.target,\n        sourceHandle: newConnection.sourceHandle,\n        targetHandle: newConnection.targetHandle,\n    };\n    return edges.filter((e) => e.id !== oldEdgeId).concat(edge);\n};\nconst pointToRendererPoint = ({ x, y }, [tx, ty, tScale], snapToGrid, [snapX, snapY]) => {\n    const position = {\n        x: (x - tx) / tScale,\n        y: (y - ty) / tScale,\n    };\n    if (snapToGrid) {\n        return {\n            x: snapX * Math.round(position.x / snapX),\n            y: snapY * Math.round(position.y / snapY),\n        };\n    }\n    return position;\n};\nconst rendererPointToPoint = ({ x, y }, [tx, ty, tScale]) => {\n    return {\n        x: x * tScale + tx,\n        y: y * tScale + ty,\n    };\n};\nconst getNodePositionWithOrigin = (node, nodeOrigin = [0, 0]) => {\n    if (!node) {\n        return {\n            x: 0,\n            y: 0,\n            positionAbsolute: {\n                x: 0,\n                y: 0,\n            },\n        };\n    }\n    const offsetX = (node.width ?? 0) * nodeOrigin[0];\n    const offsetY = (node.height ?? 0) * nodeOrigin[1];\n    const position = {\n        x: node.position.x - offsetX,\n        y: node.position.y - offsetY,\n    };\n    return {\n        ...position,\n        positionAbsolute: node.positionAbsolute\n            ? {\n                x: node.positionAbsolute.x - offsetX,\n                y: node.positionAbsolute.y - offsetY,\n            }\n            : position,\n    };\n};\nconst getRectOfNodes = (nodes, nodeOrigin = [0, 0]) => {\n    if (nodes.length === 0) {\n        return { x: 0, y: 0, width: 0, height: 0 };\n    }\n    const box = nodes.reduce((currBox, node) => {\n        const { x, y } = getNodePositionWithOrigin(node, nodeOrigin).positionAbsolute;\n        return getBoundsOfBoxes(currBox, rectToBox({\n            x,\n            y,\n            width: node.width || 0,\n            height: node.height || 0,\n        }));\n    }, { x: Infinity, y: Infinity, x2: -Infinity, y2: -Infinity });\n    return boxToRect(box);\n};\nconst getNodesInside = (nodeInternals, rect, [tx, ty, tScale] = [0, 0, 1], partially = false, \n// set excludeNonSelectableNodes if you want to pay attention to the nodes \"selectable\" attribute\nexcludeNonSelectableNodes = false, nodeOrigin = [0, 0]) => {\n    const paneRect = {\n        x: (rect.x - tx) / tScale,\n        y: (rect.y - ty) / tScale,\n        width: rect.width / tScale,\n        height: rect.height / tScale,\n    };\n    const visibleNodes = [];\n    nodeInternals.forEach((node) => {\n        const { width, height, selectable = true, hidden = false } = node;\n        if ((excludeNonSelectableNodes && !selectable) || hidden) {\n            return false;\n        }\n        const { positionAbsolute } = getNodePositionWithOrigin(node, nodeOrigin);\n        const nodeRect = {\n            x: positionAbsolute.x,\n            y: positionAbsolute.y,\n            width: width || 0,\n            height: height || 0,\n        };\n        const overlappingArea = getOverlappingArea(paneRect, nodeRect);\n        const notInitialized = typeof width === 'undefined' || typeof height === 'undefined' || width === null || height === null;\n        const partiallyVisible = partially && overlappingArea > 0;\n        const area = (width || 0) * (height || 0);\n        const isVisible = notInitialized || partiallyVisible || overlappingArea >= area;\n        if (isVisible || node.dragging) {\n            visibleNodes.push(node);\n        }\n    });\n    return visibleNodes;\n};\nconst getConnectedEdges = (nodes, edges) => {\n    const nodeIds = nodes.map((node) => node.id);\n    return edges.filter((edge) => nodeIds.includes(edge.source) || nodeIds.includes(edge.target));\n};\nconst getTransformForBounds = (bounds, width, height, minZoom, maxZoom, padding = 0.1) => {\n    const xZoom = width / (bounds.width * (1 + padding));\n    const yZoom = height / (bounds.height * (1 + padding));\n    const zoom = Math.min(xZoom, yZoom);\n    const clampedZoom = clamp(zoom, minZoom, maxZoom);\n    const boundsCenterX = bounds.x + bounds.width / 2;\n    const boundsCenterY = bounds.y + bounds.height / 2;\n    const x = width / 2 - boundsCenterX * clampedZoom;\n    const y = height / 2 - boundsCenterY * clampedZoom;\n    return [x, y, clampedZoom];\n};\nconst getD3Transition = (selection, duration = 0) => {\n    return selection.transition().duration(duration);\n};\n\n// this functions collects all handles and adds an absolute position\n// so that we can later find the closest handle to the mouse position\nfunction getHandles(node, handleBounds, type, currentHandle) {\n    return (handleBounds[type] || []).reduce((res, h) => {\n        if (`${node.id}-${h.id}-${type}` !== currentHandle) {\n            res.push({\n                id: h.id || null,\n                type,\n                nodeId: node.id,\n                x: (node.positionAbsolute?.x ?? 0) + h.x + h.width / 2,\n                y: (node.positionAbsolute?.y ?? 0) + h.y + h.height / 2,\n            });\n        }\n        return res;\n    }, []);\n}\nfunction getClosestHandle(event, doc, pos, connectionRadius, handles, validator) {\n    // we always want to prioritize the handle below the mouse cursor over the closest distance handle,\n    // because it could be that the center of another handle is closer to the mouse pointer than the handle below the cursor\n    const { x, y } = getEventPosition(event);\n    const domNodes = doc.elementsFromPoint(x, y);\n    const handleBelow = domNodes.find((el) => el.classList.contains('react-flow__handle'));\n    if (handleBelow) {\n        const handleNodeId = handleBelow.getAttribute('data-nodeid');\n        if (handleNodeId) {\n            const handleType = getHandleType(undefined, handleBelow);\n            const handleId = handleBelow.getAttribute('data-handleid');\n            const validHandleResult = validator({ nodeId: handleNodeId, id: handleId, type: handleType });\n            if (validHandleResult) {\n                return {\n                    handle: {\n                        id: handleId,\n                        type: handleType,\n                        nodeId: handleNodeId,\n                        x: pos.x,\n                        y: pos.y,\n                    },\n                    validHandleResult,\n                };\n            }\n        }\n    }\n    // if we couldn't find a handle below the mouse cursor we look for the closest distance based on the connectionRadius\n    let closestHandles = [];\n    let minDistance = Infinity;\n    handles.forEach((handle) => {\n        const distance = Math.sqrt((handle.x - pos.x) ** 2 + (handle.y - pos.y) ** 2);\n        if (distance <= connectionRadius) {\n            const validHandleResult = validator(handle);\n            if (distance <= minDistance) {\n                if (distance < minDistance) {\n                    closestHandles = [{ handle, validHandleResult }];\n                }\n                else if (distance === minDistance) {\n                    // when multiple handles are on the same distance we collect all of them\n                    closestHandles.push({\n                        handle,\n                        validHandleResult,\n                    });\n                }\n                minDistance = distance;\n            }\n        }\n    });\n    if (!closestHandles.length) {\n        return { handle: null, validHandleResult: defaultResult() };\n    }\n    if (closestHandles.length === 1) {\n        return closestHandles[0];\n    }\n    const hasValidHandle = closestHandles.some(({ validHandleResult }) => validHandleResult.isValid);\n    const hasTargetHandle = closestHandles.some(({ handle }) => handle.type === 'target');\n    // if multiple handles are layouted on top of each other we prefer the one with type = target and the one that is valid\n    return (closestHandles.find(({ handle, validHandleResult }) => hasTargetHandle ? handle.type === 'target' : (hasValidHandle ? validHandleResult.isValid : true)) || closestHandles[0]);\n}\nconst nullConnection = { source: null, target: null, sourceHandle: null, targetHandle: null };\nconst defaultResult = () => ({\n    handleDomNode: null,\n    isValid: false,\n    connection: nullConnection,\n    endHandle: null,\n});\n// checks if  and returns connection in fom of an object { source: 123, target: 312 }\nfunction isValidHandle(handle, connectionMode, fromNodeId, fromHandleId, fromType, isValidConnection, doc) {\n    const isTarget = fromType === 'target';\n    const handleToCheck = doc.querySelector(`.react-flow__handle[data-id=\"${handle?.nodeId}-${handle?.id}-${handle?.type}\"]`);\n    const result = {\n        ...defaultResult(),\n        handleDomNode: handleToCheck,\n    };\n    if (handleToCheck) {\n        const handleType = getHandleType(undefined, handleToCheck);\n        const handleNodeId = handleToCheck.getAttribute('data-nodeid');\n        const handleId = handleToCheck.getAttribute('data-handleid');\n        const connectable = handleToCheck.classList.contains('connectable');\n        const connectableEnd = handleToCheck.classList.contains('connectableend');\n        const connection = {\n            source: isTarget ? handleNodeId : fromNodeId,\n            sourceHandle: isTarget ? handleId : fromHandleId,\n            target: isTarget ? fromNodeId : handleNodeId,\n            targetHandle: isTarget ? fromHandleId : handleId,\n        };\n        result.connection = connection;\n        const isConnectable = connectable && connectableEnd;\n        // in strict mode we don't allow target to target or source to source connections\n        const isValid = isConnectable &&\n            (connectionMode === ConnectionMode.Strict\n                ? (isTarget && handleType === 'source') || (!isTarget && handleType === 'target')\n                : handleNodeId !== fromNodeId || handleId !== fromHandleId);\n        if (isValid) {\n            result.endHandle = {\n                nodeId: handleNodeId,\n                handleId,\n                type: handleType,\n            };\n            result.isValid = isValidConnection(connection);\n        }\n    }\n    return result;\n}\nfunction getHandleLookup({ nodes, nodeId, handleId, handleType }) {\n    return nodes.reduce((res, node) => {\n        if (node[internalsSymbol]) {\n            const { handleBounds } = node[internalsSymbol];\n            let sourceHandles = [];\n            let targetHandles = [];\n            if (handleBounds) {\n                sourceHandles = getHandles(node, handleBounds, 'source', `${nodeId}-${handleId}-${handleType}`);\n                targetHandles = getHandles(node, handleBounds, 'target', `${nodeId}-${handleId}-${handleType}`);\n            }\n            res.push(...sourceHandles, ...targetHandles);\n        }\n        return res;\n    }, []);\n}\nfunction getHandleType(edgeUpdaterType, handleDomNode) {\n    if (edgeUpdaterType) {\n        return edgeUpdaterType;\n    }\n    else if (handleDomNode?.classList.contains('target')) {\n        return 'target';\n    }\n    else if (handleDomNode?.classList.contains('source')) {\n        return 'source';\n    }\n    return null;\n}\nfunction resetRecentHandle(handleDomNode) {\n    handleDomNode?.classList.remove('valid', 'connecting', 'react-flow__handle-valid', 'react-flow__handle-connecting');\n}\nfunction getConnectionStatus(isInsideConnectionRadius, isHandleValid) {\n    let connectionStatus = null;\n    if (isHandleValid) {\n        connectionStatus = 'valid';\n    }\n    else if (isInsideConnectionRadius && !isHandleValid) {\n        connectionStatus = 'invalid';\n    }\n    return connectionStatus;\n}\n\nfunction handlePointerDown({ event, handleId, nodeId, onConnect, isTarget, getState, setState, isValidConnection, edgeUpdaterType, onEdgeUpdateEnd, }) {\n    // when react-flow is used inside a shadow root we can't use document\n    const doc = getHostForElement(event.target);\n    const { connectionMode, domNode, autoPanOnConnect, connectionRadius, onConnectStart, panBy, getNodes, cancelConnection, } = getState();\n    let autoPanId = 0;\n    let closestHandle;\n    const { x, y } = getEventPosition(event);\n    const clickedHandle = doc?.elementFromPoint(x, y);\n    const handleType = getHandleType(edgeUpdaterType, clickedHandle);\n    const containerBounds = domNode?.getBoundingClientRect();\n    if (!containerBounds || !handleType) {\n        return;\n    }\n    let prevActiveHandle;\n    let connectionPosition = getEventPosition(event, containerBounds);\n    let autoPanStarted = false;\n    let connection = null;\n    let isValid = false;\n    let handleDomNode = null;\n    const handleLookup = getHandleLookup({\n        nodes: getNodes(),\n        nodeId,\n        handleId,\n        handleType,\n    });\n    // when the user is moving the mouse close to the edge of the canvas while connecting we move the canvas\n    const autoPan = () => {\n        if (!autoPanOnConnect) {\n            return;\n        }\n        const [xMovement, yMovement] = calcAutoPan(connectionPosition, containerBounds);\n        panBy({ x: xMovement, y: yMovement });\n        autoPanId = requestAnimationFrame(autoPan);\n    };\n    setState({\n        connectionPosition,\n        connectionStatus: null,\n        // connectionNodeId etc will be removed in the next major in favor of connectionStartHandle\n        connectionNodeId: nodeId,\n        connectionHandleId: handleId,\n        connectionHandleType: handleType,\n        connectionStartHandle: {\n            nodeId,\n            handleId,\n            type: handleType,\n        },\n        connectionEndHandle: null,\n    });\n    onConnectStart?.(event, { nodeId, handleId, handleType });\n    function onPointerMove(event) {\n        const { transform } = getState();\n        connectionPosition = getEventPosition(event, containerBounds);\n        const { handle, validHandleResult } = getClosestHandle(event, doc, pointToRendererPoint(connectionPosition, transform, false, [1, 1]), connectionRadius, handleLookup, (handle) => isValidHandle(handle, connectionMode, nodeId, handleId, isTarget ? 'target' : 'source', isValidConnection, doc));\n        closestHandle = handle;\n        if (!autoPanStarted) {\n            autoPan();\n            autoPanStarted = true;\n        }\n        handleDomNode = validHandleResult.handleDomNode;\n        connection = validHandleResult.connection;\n        isValid = validHandleResult.isValid;\n        setState({\n            connectionPosition: closestHandle && isValid\n                ? rendererPointToPoint({\n                    x: closestHandle.x,\n                    y: closestHandle.y,\n                }, transform)\n                : connectionPosition,\n            connectionStatus: getConnectionStatus(!!closestHandle, isValid),\n            connectionEndHandle: validHandleResult.endHandle,\n        });\n        if (!closestHandle && !isValid && !handleDomNode) {\n            return resetRecentHandle(prevActiveHandle);\n        }\n        if (connection.source !== connection.target && handleDomNode) {\n            resetRecentHandle(prevActiveHandle);\n            prevActiveHandle = handleDomNode;\n            // @todo: remove the old class names \"react-flow__handle-\" in the next major version\n            handleDomNode.classList.add('connecting', 'react-flow__handle-connecting');\n            handleDomNode.classList.toggle('valid', isValid);\n            handleDomNode.classList.toggle('react-flow__handle-valid', isValid);\n        }\n    }\n    function onPointerUp(event) {\n        if ((closestHandle || handleDomNode) && connection && isValid) {\n            onConnect?.(connection);\n        }\n        // it's important to get a fresh reference from the store here\n        // in order to get the latest state of onConnectEnd\n        getState().onConnectEnd?.(event);\n        if (edgeUpdaterType) {\n            onEdgeUpdateEnd?.(event);\n        }\n        resetRecentHandle(prevActiveHandle);\n        cancelConnection();\n        cancelAnimationFrame(autoPanId);\n        autoPanStarted = false;\n        isValid = false;\n        connection = null;\n        handleDomNode = null;\n        doc.removeEventListener('mousemove', onPointerMove);\n        doc.removeEventListener('mouseup', onPointerUp);\n        doc.removeEventListener('touchmove', onPointerMove);\n        doc.removeEventListener('touchend', onPointerUp);\n    }\n    doc.addEventListener('mousemove', onPointerMove);\n    doc.addEventListener('mouseup', onPointerUp);\n    doc.addEventListener('touchmove', onPointerMove);\n    doc.addEventListener('touchend', onPointerUp);\n}\n\nconst alwaysValid = () => true;\nconst selector$f = (s) => ({\n    connectionStartHandle: s.connectionStartHandle,\n    connectOnClick: s.connectOnClick,\n    noPanClassName: s.noPanClassName,\n});\nconst connectingSelector = (nodeId, handleId, type) => (state) => {\n    const { connectionStartHandle: startHandle, connectionEndHandle: endHandle, connectionClickStartHandle: clickHandle, } = state;\n    return {\n        connecting: (startHandle?.nodeId === nodeId && startHandle?.handleId === handleId && startHandle?.type === type) ||\n            (endHandle?.nodeId === nodeId && endHandle?.handleId === handleId && endHandle?.type === type),\n        clickConnecting: clickHandle?.nodeId === nodeId && clickHandle?.handleId === handleId && clickHandle?.type === type,\n    };\n};\nconst Handle = forwardRef(({ type = 'source', position = Position.Top, isValidConnection, isConnectable = true, isConnectableStart = true, isConnectableEnd = true, id, onConnect, children, className, onMouseDown, onTouchStart, ...rest }, ref) => {\n    const handleId = id || null;\n    const isTarget = type === 'target';\n    const store = useStoreApi();\n    const nodeId = useNodeId();\n    const { connectOnClick, noPanClassName } = useStore(selector$f, shallow);\n    const { connecting, clickConnecting } = useStore(connectingSelector(nodeId, handleId, type), shallow);\n    if (!nodeId) {\n        store.getState().onError?.('010', errorMessages['error010']());\n    }\n    const onConnectExtended = (params) => {\n        const { defaultEdgeOptions, onConnect: onConnectAction, hasDefaultEdges } = store.getState();\n        const edgeParams = {\n            ...defaultEdgeOptions,\n            ...params,\n        };\n        if (hasDefaultEdges) {\n            const { edges, setEdges } = store.getState();\n            setEdges(addEdge(edgeParams, edges));\n        }\n        onConnectAction?.(edgeParams);\n        onConnect?.(edgeParams);\n    };\n    const onPointerDown = (event) => {\n        if (!nodeId) {\n            return;\n        }\n        const isMouseTriggered = isMouseEvent(event);\n        if (isConnectableStart && ((isMouseTriggered && event.button === 0) || !isMouseTriggered)) {\n            handlePointerDown({\n                event,\n                handleId,\n                nodeId,\n                onConnect: onConnectExtended,\n                isTarget,\n                getState: store.getState,\n                setState: store.setState,\n                isValidConnection: isValidConnection || store.getState().isValidConnection || alwaysValid,\n            });\n        }\n        if (isMouseTriggered) {\n            onMouseDown?.(event);\n        }\n        else {\n            onTouchStart?.(event);\n        }\n    };\n    const onClick = (event) => {\n        const { onClickConnectStart, onClickConnectEnd, connectionClickStartHandle, connectionMode, isValidConnection: isValidConnectionStore, } = store.getState();\n        if (!nodeId || (!connectionClickStartHandle && !isConnectableStart)) {\n            return;\n        }\n        if (!connectionClickStartHandle) {\n            onClickConnectStart?.(event, { nodeId, handleId, handleType: type });\n            store.setState({ connectionClickStartHandle: { nodeId, type, handleId } });\n            return;\n        }\n        const doc = getHostForElement(event.target);\n        const isValidConnectionHandler = isValidConnection || isValidConnectionStore || alwaysValid;\n        const { connection, isValid } = isValidHandle({\n            nodeId,\n            id: handleId,\n            type,\n        }, connectionMode, connectionClickStartHandle.nodeId, connectionClickStartHandle.handleId || null, connectionClickStartHandle.type, isValidConnectionHandler, doc);\n        if (isValid) {\n            onConnectExtended(connection);\n        }\n        onClickConnectEnd?.(event);\n        store.setState({ connectionClickStartHandle: null });\n    };\n    return (jsx(\"div\", { \"data-handleid\": handleId, \"data-nodeid\": nodeId, \"data-handlepos\": position, \"data-id\": `${nodeId}-${handleId}-${type}`, className: cc([\n            'react-flow__handle',\n            `react-flow__handle-${position}`,\n            'nodrag',\n            noPanClassName,\n            className,\n            {\n                source: !isTarget,\n                target: isTarget,\n                connectable: isConnectable,\n                connectablestart: isConnectableStart,\n                connectableend: isConnectableEnd,\n                connecting: clickConnecting,\n                // this class is used to style the handle when the user is connecting\n                connectionindicator: isConnectable && ((isConnectableStart && !connecting) || (isConnectableEnd && connecting)),\n            },\n        ]), onMouseDown: onPointerDown, onTouchStart: onPointerDown, onClick: connectOnClick ? onClick : undefined, ref: ref, ...rest, children: children }));\n});\nHandle.displayName = 'Handle';\nvar Handle$1 = memo(Handle);\n\nconst DefaultNode = ({ data, isConnectable, targetPosition = Position.Top, sourcePosition = Position.Bottom, }) => {\n    return (jsxs(Fragment, { children: [jsx(Handle$1, { type: \"target\", position: targetPosition, isConnectable: isConnectable }), data?.label, jsx(Handle$1, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })] }));\n};\nDefaultNode.displayName = 'DefaultNode';\nvar DefaultNode$1 = memo(DefaultNode);\n\nconst InputNode = ({ data, isConnectable, sourcePosition = Position.Bottom }) => (jsxs(Fragment, { children: [data?.label, jsx(Handle$1, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })] }));\nInputNode.displayName = 'InputNode';\nvar InputNode$1 = memo(InputNode);\n\nconst OutputNode = ({ data, isConnectable, targetPosition = Position.Top }) => (jsxs(Fragment, { children: [jsx(Handle$1, { type: \"target\", position: targetPosition, isConnectable: isConnectable }), data?.label] }));\nOutputNode.displayName = 'OutputNode';\nvar OutputNode$1 = memo(OutputNode);\n\nconst GroupNode = () => null;\nGroupNode.displayName = 'GroupNode';\n\nconst selector$e = (s) => ({\n    selectedNodes: s.getNodes().filter((n) => n.selected),\n    selectedEdges: s.edges.filter((e) => e.selected),\n});\nconst selectId = (obj) => obj.id;\nfunction areEqual(a, b) {\n    return (shallow(a.selectedNodes.map(selectId), b.selectedNodes.map(selectId)) &&\n        shallow(a.selectedEdges.map(selectId), b.selectedEdges.map(selectId)));\n}\n// This is just a helper component for calling the onSelectionChange listener.\n// @TODO: Now that we have the onNodesChange and on EdgesChange listeners, do we still need this component?\nconst SelectionListener = memo(({ onSelectionChange }) => {\n    const store = useStoreApi();\n    const { selectedNodes, selectedEdges } = useStore(selector$e, areEqual);\n    useEffect(() => {\n        const params = { nodes: selectedNodes, edges: selectedEdges };\n        onSelectionChange?.(params);\n        store.getState().onSelectionChange?.(params);\n    }, [selectedNodes, selectedEdges, onSelectionChange]);\n    return null;\n});\nSelectionListener.displayName = 'SelectionListener';\nconst changeSelector = (s) => !!s.onSelectionChange;\nfunction Wrapper$1({ onSelectionChange }) {\n    const storeHasSelectionChange = useStore(changeSelector);\n    if (onSelectionChange || storeHasSelectionChange) {\n        return jsx(SelectionListener, { onSelectionChange: onSelectionChange });\n    }\n    return null;\n}\n\nconst selector$d = (s) => ({\n    setNodes: s.setNodes,\n    setEdges: s.setEdges,\n    setDefaultNodesAndEdges: s.setDefaultNodesAndEdges,\n    setMinZoom: s.setMinZoom,\n    setMaxZoom: s.setMaxZoom,\n    setTranslateExtent: s.setTranslateExtent,\n    setNodeExtent: s.setNodeExtent,\n    reset: s.reset,\n});\nfunction useStoreUpdater(value, setStoreState) {\n    useEffect(() => {\n        if (typeof value !== 'undefined') {\n            setStoreState(value);\n        }\n    }, [value]);\n}\n// updates with values in store that don't have a dedicated setter function\nfunction useDirectStoreUpdater(key, value, setState) {\n    useEffect(() => {\n        if (typeof value !== 'undefined') {\n            setState({ [key]: value });\n        }\n    }, [value]);\n}\nconst StoreUpdater = ({ nodes, edges, defaultNodes, defaultEdges, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, nodesDraggable, nodesConnectable, nodesFocusable, edgesFocusable, edgesUpdatable, elevateNodesOnSelect, minZoom, maxZoom, nodeExtent, onNodesChange, onEdgesChange, elementsSelectable, connectionMode, snapGrid, snapToGrid, translateExtent, connectOnClick, defaultEdgeOptions, fitView, fitViewOptions, onNodesDelete, onEdgesDelete, onNodeDrag, onNodeDragStart, onNodeDragStop, onSelectionDrag, onSelectionDragStart, onSelectionDragStop, noPanClassName, nodeOrigin, rfId, autoPanOnConnect, autoPanOnNodeDrag, onError, connectionRadius, isValidConnection, }) => {\n    const { setNodes, setEdges, setDefaultNodesAndEdges, setMinZoom, setMaxZoom, setTranslateExtent, setNodeExtent, reset, } = useStore(selector$d, shallow);\n    const store = useStoreApi();\n    useEffect(() => {\n        const edgesWithDefaults = defaultEdges?.map((e) => ({ ...e, ...defaultEdgeOptions }));\n        setDefaultNodesAndEdges(defaultNodes, edgesWithDefaults);\n        return () => {\n            reset();\n        };\n    }, []);\n    useDirectStoreUpdater('defaultEdgeOptions', defaultEdgeOptions, store.setState);\n    useDirectStoreUpdater('connectionMode', connectionMode, store.setState);\n    useDirectStoreUpdater('onConnect', onConnect, store.setState);\n    useDirectStoreUpdater('onConnectStart', onConnectStart, store.setState);\n    useDirectStoreUpdater('onConnectEnd', onConnectEnd, store.setState);\n    useDirectStoreUpdater('onClickConnectStart', onClickConnectStart, store.setState);\n    useDirectStoreUpdater('onClickConnectEnd', onClickConnectEnd, store.setState);\n    useDirectStoreUpdater('nodesDraggable', nodesDraggable, store.setState);\n    useDirectStoreUpdater('nodesConnectable', nodesConnectable, store.setState);\n    useDirectStoreUpdater('nodesFocusable', nodesFocusable, store.setState);\n    useDirectStoreUpdater('edgesFocusable', edgesFocusable, store.setState);\n    useDirectStoreUpdater('edgesUpdatable', edgesUpdatable, store.setState);\n    useDirectStoreUpdater('elementsSelectable', elementsSelectable, store.setState);\n    useDirectStoreUpdater('elevateNodesOnSelect', elevateNodesOnSelect, store.setState);\n    useDirectStoreUpdater('snapToGrid', snapToGrid, store.setState);\n    useDirectStoreUpdater('snapGrid', snapGrid, store.setState);\n    useDirectStoreUpdater('onNodesChange', onNodesChange, store.setState);\n    useDirectStoreUpdater('onEdgesChange', onEdgesChange, store.setState);\n    useDirectStoreUpdater('connectOnClick', connectOnClick, store.setState);\n    useDirectStoreUpdater('fitViewOnInit', fitView, store.setState);\n    useDirectStoreUpdater('fitViewOnInitOptions', fitViewOptions, store.setState);\n    useDirectStoreUpdater('onNodesDelete', onNodesDelete, store.setState);\n    useDirectStoreUpdater('onEdgesDelete', onEdgesDelete, store.setState);\n    useDirectStoreUpdater('onNodeDrag', onNodeDrag, store.setState);\n    useDirectStoreUpdater('onNodeDragStart', onNodeDragStart, store.setState);\n    useDirectStoreUpdater('onNodeDragStop', onNodeDragStop, store.setState);\n    useDirectStoreUpdater('onSelectionDrag', onSelectionDrag, store.setState);\n    useDirectStoreUpdater('onSelectionDragStart', onSelectionDragStart, store.setState);\n    useDirectStoreUpdater('onSelectionDragStop', onSelectionDragStop, store.setState);\n    useDirectStoreUpdater('noPanClassName', noPanClassName, store.setState);\n    useDirectStoreUpdater('nodeOrigin', nodeOrigin, store.setState);\n    useDirectStoreUpdater('rfId', rfId, store.setState);\n    useDirectStoreUpdater('autoPanOnConnect', autoPanOnConnect, store.setState);\n    useDirectStoreUpdater('autoPanOnNodeDrag', autoPanOnNodeDrag, store.setState);\n    useDirectStoreUpdater('onError', onError, store.setState);\n    useDirectStoreUpdater('connectionRadius', connectionRadius, store.setState);\n    useDirectStoreUpdater('isValidConnection', isValidConnection, store.setState);\n    useStoreUpdater(nodes, setNodes);\n    useStoreUpdater(edges, setEdges);\n    useStoreUpdater(minZoom, setMinZoom);\n    useStoreUpdater(maxZoom, setMaxZoom);\n    useStoreUpdater(translateExtent, setTranslateExtent);\n    useStoreUpdater(nodeExtent, setNodeExtent);\n    return null;\n};\n\nconst style = { display: 'none' };\nconst ariaLiveStyle = {\n    position: 'absolute',\n    width: 1,\n    height: 1,\n    margin: -1,\n    border: 0,\n    padding: 0,\n    overflow: 'hidden',\n    clip: 'rect(0px, 0px, 0px, 0px)',\n    clipPath: 'inset(100%)',\n};\nconst ARIA_NODE_DESC_KEY = 'react-flow__node-desc';\nconst ARIA_EDGE_DESC_KEY = 'react-flow__edge-desc';\nconst ARIA_LIVE_MESSAGE = 'react-flow__aria-live';\nconst selector$c = (s) => s.ariaLiveMessage;\nfunction AriaLiveMessage({ rfId }) {\n    const ariaLiveMessage = useStore(selector$c);\n    return (jsx(\"div\", { id: `${ARIA_LIVE_MESSAGE}-${rfId}`, \"aria-live\": \"assertive\", \"aria-atomic\": \"true\", style: ariaLiveStyle, children: ariaLiveMessage }));\n}\nfunction A11yDescriptions({ rfId, disableKeyboardA11y }) {\n    return (jsxs(Fragment, { children: [jsxs(\"div\", { id: `${ARIA_NODE_DESC_KEY}-${rfId}`, style: style, children: [\"Press enter or space to select a node.\", !disableKeyboardA11y && 'You can then use the arrow keys to move the node around.', \" Press delete to remove it and escape to cancel.\", ' '] }), jsx(\"div\", { id: `${ARIA_EDGE_DESC_KEY}-${rfId}`, style: style, children: \"Press enter or space to select an edge. You can then press delete to remove it or escape to cancel.\" }), !disableKeyboardA11y && jsx(AriaLiveMessage, { rfId: rfId })] }));\n}\n\nconst shiftX = (x, shift, position) => {\n    if (position === Position.Left)\n        return x - shift;\n    if (position === Position.Right)\n        return x + shift;\n    return x;\n};\nconst shiftY = (y, shift, position) => {\n    if (position === Position.Top)\n        return y - shift;\n    if (position === Position.Bottom)\n        return y + shift;\n    return y;\n};\nconst EdgeUpdaterClassName = 'react-flow__edgeupdater';\nconst EdgeAnchor = ({ position, centerX, centerY, radius = 10, onMouseDown, onMouseEnter, onMouseOut, type, }) => (jsx(\"circle\", { onMouseDown: onMouseDown, onMouseEnter: onMouseEnter, onMouseOut: onMouseOut, className: cc([EdgeUpdaterClassName, `${EdgeUpdaterClassName}-${type}`]), cx: shiftX(centerX, radius, position), cy: shiftY(centerY, radius, position), r: radius, stroke: \"transparent\", fill: \"transparent\" }));\n\nconst alwaysValidConnection = () => true;\nvar wrapEdge = (EdgeComponent) => {\n    const EdgeWrapper = ({ id, className, type, data, onClick, onEdgeDoubleClick, selected, animated, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, source, target, sourceX, sourceY, targetX, targetY, sourcePosition, targetPosition, elementsSelectable, hidden, sourceHandleId, targetHandleId, onContextMenu, onMouseEnter, onMouseMove, onMouseLeave, edgeUpdaterRadius, onEdgeUpdate, onEdgeUpdateStart, onEdgeUpdateEnd, markerEnd, markerStart, rfId, ariaLabel, isFocusable, isUpdatable, pathOptions, interactionWidth, }) => {\n        const edgeRef = useRef(null);\n        const [updateHover, setUpdateHover] = useState(false);\n        const [updating, setUpdating] = useState(false);\n        const store = useStoreApi();\n        const markerStartUrl = useMemo(() => `url(#${getMarkerId(markerStart, rfId)})`, [markerStart, rfId]);\n        const markerEndUrl = useMemo(() => `url(#${getMarkerId(markerEnd, rfId)})`, [markerEnd, rfId]);\n        if (hidden) {\n            return null;\n        }\n        const onEdgeClick = (event) => {\n            const { edges, addSelectedEdges } = store.getState();\n            if (elementsSelectable) {\n                store.setState({ nodesSelectionActive: false });\n                addSelectedEdges([id]);\n            }\n            if (onClick) {\n                const edge = edges.find((e) => e.id === id);\n                onClick(event, edge);\n            }\n        };\n        const onEdgeDoubleClickHandler = getMouseHandler$1(id, store.getState, onEdgeDoubleClick);\n        const onEdgeContextMenu = getMouseHandler$1(id, store.getState, onContextMenu);\n        const onEdgeMouseEnter = getMouseHandler$1(id, store.getState, onMouseEnter);\n        const onEdgeMouseMove = getMouseHandler$1(id, store.getState, onMouseMove);\n        const onEdgeMouseLeave = getMouseHandler$1(id, store.getState, onMouseLeave);\n        const handleEdgeUpdater = (event, isSourceHandle) => {\n            // avoid triggering edge updater if mouse btn is not left\n            if (event.button !== 0) {\n                return;\n            }\n            const { edges, isValidConnection: isValidConnectionStore } = store.getState();\n            const nodeId = isSourceHandle ? target : source;\n            const handleId = (isSourceHandle ? targetHandleId : sourceHandleId) || null;\n            const handleType = isSourceHandle ? 'target' : 'source';\n            const isValidConnection = isValidConnectionStore || alwaysValidConnection;\n            const isTarget = isSourceHandle;\n            const edge = edges.find((e) => e.id === id);\n            setUpdating(true);\n            onEdgeUpdateStart?.(event, edge, handleType);\n            const _onEdgeUpdateEnd = (evt) => {\n                setUpdating(false);\n                onEdgeUpdateEnd?.(evt, edge, handleType);\n            };\n            const onConnectEdge = (connection) => onEdgeUpdate?.(edge, connection);\n            handlePointerDown({\n                event,\n                handleId,\n                nodeId,\n                onConnect: onConnectEdge,\n                isTarget,\n                getState: store.getState,\n                setState: store.setState,\n                isValidConnection,\n                edgeUpdaterType: handleType,\n                onEdgeUpdateEnd: _onEdgeUpdateEnd,\n            });\n        };\n        const onEdgeUpdaterSourceMouseDown = (event) => handleEdgeUpdater(event, true);\n        const onEdgeUpdaterTargetMouseDown = (event) => handleEdgeUpdater(event, false);\n        const onEdgeUpdaterMouseEnter = () => setUpdateHover(true);\n        const onEdgeUpdaterMouseOut = () => setUpdateHover(false);\n        const inactive = !elementsSelectable && !onClick;\n        const onKeyDown = (event) => {\n            if (elementSelectionKeys.includes(event.key) && elementsSelectable) {\n                const { unselectNodesAndEdges, addSelectedEdges, edges } = store.getState();\n                const unselect = event.key === 'Escape';\n                if (unselect) {\n                    edgeRef.current?.blur();\n                    unselectNodesAndEdges({ edges: [edges.find((e) => e.id === id)] });\n                }\n                else {\n                    addSelectedEdges([id]);\n                }\n            }\n        };\n        return (jsxs(\"g\", { className: cc([\n                'react-flow__edge',\n                `react-flow__edge-${type}`,\n                className,\n                { selected, animated, inactive, updating: updateHover },\n            ]), onClick: onEdgeClick, onDoubleClick: onEdgeDoubleClickHandler, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : undefined, \"data-testid\": `rf__edge-${id}`, \"aria-label\": ariaLabel === null ? undefined : ariaLabel ? ariaLabel : `Edge from ${source} to ${target}`, \"aria-describedby\": isFocusable ? `${ARIA_EDGE_DESC_KEY}-${rfId}` : undefined, ref: edgeRef, children: [!updating && (jsx(EdgeComponent, { id: id, source: source, target: target, selected: selected, animated: animated, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, data: data, style: style, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, sourceHandleId: sourceHandleId, targetHandleId: targetHandleId, markerStart: markerStartUrl, markerEnd: markerEndUrl, pathOptions: pathOptions, interactionWidth: interactionWidth })), isUpdatable && (jsxs(Fragment, { children: [(isUpdatable === 'source' || isUpdatable === true) && (jsx(EdgeAnchor, { position: sourcePosition, centerX: sourceX, centerY: sourceY, radius: edgeUpdaterRadius, onMouseDown: onEdgeUpdaterSourceMouseDown, onMouseEnter: onEdgeUpdaterMouseEnter, onMouseOut: onEdgeUpdaterMouseOut, type: \"source\" })), (isUpdatable === 'target' || isUpdatable === true) && (jsx(EdgeAnchor, { position: targetPosition, centerX: targetX, centerY: targetY, radius: edgeUpdaterRadius, onMouseDown: onEdgeUpdaterTargetMouseDown, onMouseEnter: onEdgeUpdaterMouseEnter, onMouseOut: onEdgeUpdaterMouseOut, type: \"target\" }))] }))] }));\n    };\n    EdgeWrapper.displayName = 'EdgeWrapper';\n    return memo(EdgeWrapper);\n};\n\nfunction createEdgeTypes(edgeTypes) {\n    const standardTypes = {\n        default: wrapEdge((edgeTypes.default || BezierEdge)),\n        straight: wrapEdge((edgeTypes.bezier || StraightEdge)),\n        step: wrapEdge((edgeTypes.step || StepEdge)),\n        smoothstep: wrapEdge((edgeTypes.step || SmoothStepEdge)),\n        simplebezier: wrapEdge((edgeTypes.simplebezier || SimpleBezierEdge)),\n    };\n    const wrappedTypes = {};\n    const specialTypes = Object.keys(edgeTypes)\n        .filter((k) => !['default', 'bezier'].includes(k))\n        .reduce((res, key) => {\n        res[key] = wrapEdge((edgeTypes[key] || BezierEdge));\n        return res;\n    }, wrappedTypes);\n    return {\n        ...standardTypes,\n        ...specialTypes,\n    };\n}\nfunction getHandlePosition(position, nodeRect, handle = null) {\n    const x = (handle?.x || 0) + nodeRect.x;\n    const y = (handle?.y || 0) + nodeRect.y;\n    const width = handle?.width || nodeRect.width;\n    const height = handle?.height || nodeRect.height;\n    switch (position) {\n        case Position.Top:\n            return {\n                x: x + width / 2,\n                y,\n            };\n        case Position.Right:\n            return {\n                x: x + width,\n                y: y + height / 2,\n            };\n        case Position.Bottom:\n            return {\n                x: x + width / 2,\n                y: y + height,\n            };\n        case Position.Left:\n            return {\n                x,\n                y: y + height / 2,\n            };\n    }\n}\nfunction getHandle(bounds, handleId) {\n    if (!bounds) {\n        return null;\n    }\n    if (bounds.length === 1 || !handleId) {\n        return bounds[0];\n    }\n    else if (handleId) {\n        return bounds.find((d) => d.id === handleId) || null;\n    }\n    return null;\n}\nconst getEdgePositions = (sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition) => {\n    const sourceHandlePos = getHandlePosition(sourcePosition, sourceNodeRect, sourceHandle);\n    const targetHandlePos = getHandlePosition(targetPosition, targetNodeRect, targetHandle);\n    return {\n        sourceX: sourceHandlePos.x,\n        sourceY: sourceHandlePos.y,\n        targetX: targetHandlePos.x,\n        targetY: targetHandlePos.y,\n    };\n};\nfunction isEdgeVisible({ sourcePos, targetPos, sourceWidth, sourceHeight, targetWidth, targetHeight, width, height, transform, }) {\n    const edgeBox = {\n        x: Math.min(sourcePos.x, targetPos.x),\n        y: Math.min(sourcePos.y, targetPos.y),\n        x2: Math.max(sourcePos.x + sourceWidth, targetPos.x + targetWidth),\n        y2: Math.max(sourcePos.y + sourceHeight, targetPos.y + targetHeight),\n    };\n    if (edgeBox.x === edgeBox.x2) {\n        edgeBox.x2 += 1;\n    }\n    if (edgeBox.y === edgeBox.y2) {\n        edgeBox.y2 += 1;\n    }\n    const viewBox = rectToBox({\n        x: (0 - transform[0]) / transform[2],\n        y: (0 - transform[1]) / transform[2],\n        width: width / transform[2],\n        height: height / transform[2],\n    });\n    const xOverlap = Math.max(0, Math.min(viewBox.x2, edgeBox.x2) - Math.max(viewBox.x, edgeBox.x));\n    const yOverlap = Math.max(0, Math.min(viewBox.y2, edgeBox.y2) - Math.max(viewBox.y, edgeBox.y));\n    const overlappingArea = Math.ceil(xOverlap * yOverlap);\n    return overlappingArea > 0;\n}\nfunction getNodeData(node) {\n    const handleBounds = node?.[internalsSymbol]?.handleBounds || null;\n    const isValid = handleBounds &&\n        node?.width &&\n        node?.height &&\n        typeof node?.positionAbsolute?.x !== 'undefined' &&\n        typeof node?.positionAbsolute?.y !== 'undefined';\n    return [\n        {\n            x: node?.positionAbsolute?.x || 0,\n            y: node?.positionAbsolute?.y || 0,\n            width: node?.width || 0,\n            height: node?.height || 0,\n        },\n        handleBounds,\n        !!isValid,\n    ];\n}\n\nfunction isParentSelected(node, nodeInternals) {\n    if (!node.parentNode) {\n        return false;\n    }\n    const parentNode = nodeInternals.get(node.parentNode);\n    if (!parentNode) {\n        return false;\n    }\n    if (parentNode.selected) {\n        return true;\n    }\n    return isParentSelected(parentNode, nodeInternals);\n}\nfunction hasSelector(target, selector, nodeRef) {\n    let current = target;\n    do {\n        if (current?.matches(selector))\n            return true;\n        if (current === nodeRef.current)\n            return false;\n        current = current.parentElement;\n    } while (current);\n    return false;\n}\n// looks for all selected nodes and created a NodeDragItem for each of them\nfunction getDragItems(nodeInternals, nodesDraggable, mousePos, nodeId) {\n    return Array.from(nodeInternals.values())\n        .filter((n) => (n.selected || n.id === nodeId) &&\n        (!n.parentNode || !isParentSelected(n, nodeInternals)) &&\n        (n.draggable || (nodesDraggable && typeof n.draggable === 'undefined')))\n        .map((n) => ({\n        id: n.id,\n        position: n.position || { x: 0, y: 0 },\n        positionAbsolute: n.positionAbsolute || { x: 0, y: 0 },\n        distance: {\n            x: mousePos.x - (n.positionAbsolute?.x ?? 0),\n            y: mousePos.y - (n.positionAbsolute?.y ?? 0),\n        },\n        delta: {\n            x: 0,\n            y: 0,\n        },\n        extent: n.extent,\n        parentNode: n.parentNode,\n        width: n.width,\n        height: n.height,\n    }));\n}\nfunction clampNodeExtent(node, extent) {\n    if (!extent || extent === 'parent') {\n        return extent;\n    }\n    return [extent[0], [extent[1][0] - (node.width || 0), extent[1][1] - (node.height || 0)]];\n}\nfunction calcNextPosition(node, nextPosition, nodeInternals, nodeExtent, nodeOrigin = [0, 0], onError) {\n    const clampedNodeExtent = clampNodeExtent(node, node.extent || nodeExtent);\n    let currentExtent = clampedNodeExtent;\n    if (node.extent === 'parent') {\n        if (node.parentNode && node.width && node.height) {\n            const parent = nodeInternals.get(node.parentNode);\n            const { x: parentX, y: parentY } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n            currentExtent =\n                parent && isNumeric(parentX) && isNumeric(parentY) && isNumeric(parent.width) && isNumeric(parent.height)\n                    ? [\n                        [parentX + node.width * nodeOrigin[0], parentY + node.height * nodeOrigin[1]],\n                        [\n                            parentX + parent.width - node.width + node.width * nodeOrigin[0],\n                            parentY + parent.height - node.height + node.height * nodeOrigin[1],\n                        ],\n                    ]\n                    : currentExtent;\n        }\n        else {\n            onError?.('005', errorMessages['error005']());\n            currentExtent = clampedNodeExtent;\n        }\n    }\n    else if (node.extent && node.parentNode) {\n        const parent = nodeInternals.get(node.parentNode);\n        const { x: parentX, y: parentY } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n        currentExtent = [\n            [node.extent[0][0] + parentX, node.extent[0][1] + parentY],\n            [node.extent[1][0] + parentX, node.extent[1][1] + parentY],\n        ];\n    }\n    let parentPosition = { x: 0, y: 0 };\n    if (node.parentNode) {\n        const parentNode = nodeInternals.get(node.parentNode);\n        parentPosition = getNodePositionWithOrigin(parentNode, nodeOrigin).positionAbsolute;\n    }\n    const positionAbsolute = currentExtent\n        ? clampPosition(nextPosition, currentExtent)\n        : nextPosition;\n    return {\n        position: {\n            x: positionAbsolute.x - parentPosition.x,\n            y: positionAbsolute.y - parentPosition.y,\n        },\n        positionAbsolute,\n    };\n}\n// returns two params:\n// 1. the dragged node (or the first of the list, if we are dragging a node selection)\n// 2. array of selected nodes (for multi selections)\nfunction getEventHandlerParams({ nodeId, dragItems, nodeInternals, }) {\n    const extentedDragItems = dragItems.map((n) => {\n        const node = nodeInternals.get(n.id);\n        return {\n            ...node,\n            position: n.position,\n            positionAbsolute: n.positionAbsolute,\n        };\n    });\n    return [nodeId ? extentedDragItems.find((n) => n.id === nodeId) : extentedDragItems[0], extentedDragItems];\n}\n\nconst getHandleBounds = (selector, nodeElement, zoom, nodeOrigin) => {\n    const handles = nodeElement.querySelectorAll(selector);\n    if (!handles || !handles.length) {\n        return null;\n    }\n    const handlesArray = Array.from(handles);\n    const nodeBounds = nodeElement.getBoundingClientRect();\n    const nodeOffset = {\n        x: nodeBounds.width * nodeOrigin[0],\n        y: nodeBounds.height * nodeOrigin[1],\n    };\n    return handlesArray.map((handle) => {\n        const handleBounds = handle.getBoundingClientRect();\n        return {\n            id: handle.getAttribute('data-handleid'),\n            position: handle.getAttribute('data-handlepos'),\n            x: (handleBounds.left - nodeBounds.left - nodeOffset.x) / zoom,\n            y: (handleBounds.top - nodeBounds.top - nodeOffset.y) / zoom,\n            ...getDimensions(handle),\n        };\n    });\n};\nfunction getMouseHandler(id, getState, handler) {\n    return handler === undefined\n        ? handler\n        : (event) => {\n            const node = getState().nodeInternals.get(id);\n            handler(event, { ...node });\n        };\n}\n// this handler is called by\n// 1. the click handler when node is not draggable or selectNodesOnDrag = false\n// or\n// 2. the on drag start handler when node is draggable and selectNodesOnDrag = true\nfunction handleNodeClick({ id, store, unselect = false, nodeRef, }) {\n    const { addSelectedNodes, unselectNodesAndEdges, multiSelectionActive, nodeInternals } = store.getState();\n    const node = nodeInternals.get(id);\n    store.setState({ nodesSelectionActive: false });\n    if (!node.selected) {\n        addSelectedNodes([id]);\n    }\n    else if (unselect || (node.selected && multiSelectionActive)) {\n        unselectNodesAndEdges({ nodes: [node] });\n        requestAnimationFrame(() => nodeRef?.current?.blur());\n    }\n}\n\nfunction useGetPointerPosition() {\n    const store = useStoreApi();\n    // returns the pointer position projected to the RF coordinate system\n    const getPointerPosition = useCallback(({ sourceEvent }) => {\n        const { transform, snapGrid, snapToGrid } = store.getState();\n        const x = sourceEvent.touches ? sourceEvent.touches[0].clientX : sourceEvent.clientX;\n        const y = sourceEvent.touches ? sourceEvent.touches[0].clientY : sourceEvent.clientY;\n        const pointerPos = {\n            x: (x - transform[0]) / transform[2],\n            y: (y - transform[1]) / transform[2],\n        };\n        // we need the snapped position in order to be able to skip unnecessary drag events\n        return {\n            xSnapped: snapToGrid ? snapGrid[0] * Math.round(pointerPos.x / snapGrid[0]) : pointerPos.x,\n            ySnapped: snapToGrid ? snapGrid[1] * Math.round(pointerPos.y / snapGrid[1]) : pointerPos.y,\n            ...pointerPos,\n        };\n    }, []);\n    return getPointerPosition;\n}\n\nfunction wrapSelectionDragFunc(selectionFunc) {\n    return (event, _, nodes) => selectionFunc?.(event, nodes);\n}\nfunction useDrag({ nodeRef, disabled = false, noDragClassName, handleSelector, nodeId, isSelectable, selectNodesOnDrag, }) {\n    const store = useStoreApi();\n    const [dragging, setDragging] = useState(false);\n    const dragItems = useRef([]);\n    const lastPos = useRef({ x: null, y: null });\n    const autoPanId = useRef(0);\n    const containerBounds = useRef(null);\n    const mousePosition = useRef({ x: 0, y: 0 });\n    const dragEvent = useRef(null);\n    const autoPanStarted = useRef(false);\n    const getPointerPosition = useGetPointerPosition();\n    useEffect(() => {\n        if (nodeRef?.current) {\n            const selection = select(nodeRef.current);\n            const updateNodes = ({ x, y }) => {\n                const { nodeInternals, onNodeDrag, onSelectionDrag, updateNodePositions, nodeExtent, snapGrid, snapToGrid, nodeOrigin, onError, } = store.getState();\n                lastPos.current = { x, y };\n                let hasChange = false;\n                dragItems.current = dragItems.current.map((n) => {\n                    const nextPosition = { x: x - n.distance.x, y: y - n.distance.y };\n                    if (snapToGrid) {\n                        nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n                        nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n                    }\n                    const updatedPos = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, nodeOrigin, onError);\n                    // we want to make sure that we only fire a change event when there is a changes\n                    hasChange = hasChange || n.position.x !== updatedPos.position.x || n.position.y !== updatedPos.position.y;\n                    n.position = updatedPos.position;\n                    n.positionAbsolute = updatedPos.positionAbsolute;\n                    return n;\n                });\n                if (!hasChange) {\n                    return;\n                }\n                updateNodePositions(dragItems.current, true, true);\n                setDragging(true);\n                const onDrag = nodeId ? onNodeDrag : wrapSelectionDragFunc(onSelectionDrag);\n                if (onDrag && dragEvent.current) {\n                    const [currentNode, nodes] = getEventHandlerParams({\n                        nodeId,\n                        dragItems: dragItems.current,\n                        nodeInternals,\n                    });\n                    onDrag(dragEvent.current, currentNode, nodes);\n                }\n            };\n            const autoPan = () => {\n                if (!containerBounds.current) {\n                    return;\n                }\n                const [xMovement, yMovement] = calcAutoPan(mousePosition.current, containerBounds.current);\n                if (xMovement !== 0 || yMovement !== 0) {\n                    const { transform, panBy } = store.getState();\n                    lastPos.current.x = (lastPos.current.x ?? 0) - xMovement / transform[2];\n                    lastPos.current.y = (lastPos.current.y ?? 0) - yMovement / transform[2];\n                    if (panBy({ x: xMovement, y: yMovement })) {\n                        updateNodes(lastPos.current);\n                    }\n                }\n                autoPanId.current = requestAnimationFrame(autoPan);\n            };\n            if (disabled) {\n                selection.on('.drag', null);\n            }\n            else {\n                const dragHandler = drag()\n                    .on('start', (event) => {\n                    const { nodeInternals, multiSelectionActive, domNode, nodesDraggable, unselectNodesAndEdges, onNodeDragStart, onSelectionDragStart, } = store.getState();\n                    const onStart = nodeId ? onNodeDragStart : wrapSelectionDragFunc(onSelectionDragStart);\n                    if (!selectNodesOnDrag && !multiSelectionActive && nodeId) {\n                        if (!nodeInternals.get(nodeId)?.selected) {\n                            // we need to reset selected nodes when selectNodesOnDrag=false\n                            unselectNodesAndEdges();\n                        }\n                    }\n                    if (nodeId && isSelectable && selectNodesOnDrag) {\n                        handleNodeClick({\n                            id: nodeId,\n                            store,\n                            nodeRef: nodeRef,\n                        });\n                    }\n                    const pointerPos = getPointerPosition(event);\n                    lastPos.current = pointerPos;\n                    dragItems.current = getDragItems(nodeInternals, nodesDraggable, pointerPos, nodeId);\n                    if (onStart && dragItems.current) {\n                        const [currentNode, nodes] = getEventHandlerParams({\n                            nodeId,\n                            dragItems: dragItems.current,\n                            nodeInternals,\n                        });\n                        onStart(event.sourceEvent, currentNode, nodes);\n                    }\n                    containerBounds.current = domNode?.getBoundingClientRect() || null;\n                    mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n                })\n                    .on('drag', (event) => {\n                    const pointerPos = getPointerPosition(event);\n                    const { autoPanOnNodeDrag } = store.getState();\n                    if (!autoPanStarted.current && autoPanOnNodeDrag) {\n                        autoPanStarted.current = true;\n                        autoPan();\n                    }\n                    // skip events without movement\n                    if ((lastPos.current.x !== pointerPos.xSnapped || lastPos.current.y !== pointerPos.ySnapped) &&\n                        dragItems.current) {\n                        dragEvent.current = event.sourceEvent;\n                        mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n                        updateNodes(pointerPos);\n                    }\n                })\n                    .on('end', (event) => {\n                    setDragging(false);\n                    autoPanStarted.current = false;\n                    cancelAnimationFrame(autoPanId.current);\n                    if (dragItems.current) {\n                        const { updateNodePositions, nodeInternals, onNodeDragStop, onSelectionDragStop } = store.getState();\n                        const onStop = nodeId ? onNodeDragStop : wrapSelectionDragFunc(onSelectionDragStop);\n                        updateNodePositions(dragItems.current, false, false);\n                        if (onStop) {\n                            const [currentNode, nodes] = getEventHandlerParams({\n                                nodeId,\n                                dragItems: dragItems.current,\n                                nodeInternals,\n                            });\n                            onStop(event.sourceEvent, currentNode, nodes);\n                        }\n                    }\n                })\n                    .filter((event) => {\n                    const target = event.target;\n                    const isDraggable = !event.button &&\n                        (!noDragClassName || !hasSelector(target, `.${noDragClassName}`, nodeRef)) &&\n                        (!handleSelector || hasSelector(target, handleSelector, nodeRef));\n                    return isDraggable;\n                });\n                selection.call(dragHandler);\n                return () => {\n                    selection.on('.drag', null);\n                };\n            }\n        }\n    }, [\n        nodeRef,\n        disabled,\n        noDragClassName,\n        handleSelector,\n        isSelectable,\n        store,\n        nodeId,\n        selectNodesOnDrag,\n        getPointerPosition,\n    ]);\n    return dragging;\n}\n\nfunction useUpdateNodePositions() {\n    const store = useStoreApi();\n    const updatePositions = useCallback((params) => {\n        const { nodeInternals, nodeExtent, updateNodePositions, getNodes, snapToGrid, snapGrid, onError, nodesDraggable } = store.getState();\n        const selectedNodes = getNodes().filter((n) => n.selected && (n.draggable || (nodesDraggable && typeof n.draggable === 'undefined')));\n        // by default a node moves 5px on each key press, or 20px if shift is pressed\n        // if snap grid is enabled, we use that for the velocity.\n        const xVelo = snapToGrid ? snapGrid[0] : 5;\n        const yVelo = snapToGrid ? snapGrid[1] : 5;\n        const factor = params.isShiftPressed ? 4 : 1;\n        const positionDiffX = params.x * xVelo * factor;\n        const positionDiffY = params.y * yVelo * factor;\n        const nodeUpdates = selectedNodes.map((n) => {\n            if (n.positionAbsolute) {\n                const nextPosition = { x: n.positionAbsolute.x + positionDiffX, y: n.positionAbsolute.y + positionDiffY };\n                if (snapToGrid) {\n                    nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n                    nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n                }\n                const { positionAbsolute, position } = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, undefined, onError);\n                n.position = position;\n                n.positionAbsolute = positionAbsolute;\n            }\n            return n;\n        });\n        updateNodePositions(nodeUpdates, true, false);\n    }, []);\n    return updatePositions;\n}\n\nconst arrowKeyDiffs = {\n    ArrowUp: { x: 0, y: -1 },\n    ArrowDown: { x: 0, y: 1 },\n    ArrowLeft: { x: -1, y: 0 },\n    ArrowRight: { x: 1, y: 0 },\n};\nvar wrapNode = (NodeComponent) => {\n    const NodeWrapper = ({ id, type, data, xPos, yPos, xPosOrigin, yPosOrigin, selected, onClick, onMouseEnter, onMouseMove, onMouseLeave, onContextMenu, onDoubleClick, style, className, isDraggable, isSelectable, isConnectable, isFocusable, selectNodesOnDrag, sourcePosition, targetPosition, hidden, resizeObserver, dragHandle, zIndex, isParent, noDragClassName, noPanClassName, initialized, disableKeyboardA11y, ariaLabel, rfId, }) => {\n        const store = useStoreApi();\n        const nodeRef = useRef(null);\n        const prevSourcePosition = useRef(sourcePosition);\n        const prevTargetPosition = useRef(targetPosition);\n        const prevType = useRef(type);\n        const hasPointerEvents = isSelectable || isDraggable || onClick || onMouseEnter || onMouseMove || onMouseLeave;\n        const updatePositions = useUpdateNodePositions();\n        const onMouseEnterHandler = getMouseHandler(id, store.getState, onMouseEnter);\n        const onMouseMoveHandler = getMouseHandler(id, store.getState, onMouseMove);\n        const onMouseLeaveHandler = getMouseHandler(id, store.getState, onMouseLeave);\n        const onContextMenuHandler = getMouseHandler(id, store.getState, onContextMenu);\n        const onDoubleClickHandler = getMouseHandler(id, store.getState, onDoubleClick);\n        const onSelectNodeHandler = (event) => {\n            if (isSelectable && (!selectNodesOnDrag || !isDraggable)) {\n                // this handler gets called within the drag start event when selectNodesOnDrag=true\n                handleNodeClick({\n                    id,\n                    store,\n                    nodeRef,\n                });\n            }\n            if (onClick) {\n                const node = store.getState().nodeInternals.get(id);\n                onClick(event, { ...node });\n            }\n        };\n        const onKeyDown = (event) => {\n            if (isInputDOMNode(event)) {\n                return;\n            }\n            if (elementSelectionKeys.includes(event.key) && isSelectable) {\n                const unselect = event.key === 'Escape';\n                handleNodeClick({\n                    id,\n                    store,\n                    unselect,\n                    nodeRef,\n                });\n            }\n            else if (!disableKeyboardA11y &&\n                isDraggable &&\n                selected &&\n                Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n                store.setState({\n                    ariaLiveMessage: `Moved selected node ${event.key\n                        .replace('Arrow', '')\n                        .toLowerCase()}. New position, x: ${~~xPos}, y: ${~~yPos}`,\n                });\n                updatePositions({\n                    x: arrowKeyDiffs[event.key].x,\n                    y: arrowKeyDiffs[event.key].y,\n                    isShiftPressed: event.shiftKey,\n                });\n            }\n        };\n        useEffect(() => {\n            if (nodeRef.current && !hidden) {\n                const currNode = nodeRef.current;\n                resizeObserver?.observe(currNode);\n                return () => resizeObserver?.unobserve(currNode);\n            }\n        }, [hidden]);\n        useEffect(() => {\n            // when the user programmatically changes the source or handle position, we re-initialize the node\n            const typeChanged = prevType.current !== type;\n            const sourcePosChanged = prevSourcePosition.current !== sourcePosition;\n            const targetPosChanged = prevTargetPosition.current !== targetPosition;\n            if (nodeRef.current && (typeChanged || sourcePosChanged || targetPosChanged)) {\n                if (typeChanged) {\n                    prevType.current = type;\n                }\n                if (sourcePosChanged) {\n                    prevSourcePosition.current = sourcePosition;\n                }\n                if (targetPosChanged) {\n                    prevTargetPosition.current = targetPosition;\n                }\n                store.getState().updateNodeDimensions([{ id, nodeElement: nodeRef.current, forceUpdate: true }]);\n            }\n        }, [id, type, sourcePosition, targetPosition]);\n        const dragging = useDrag({\n            nodeRef,\n            disabled: hidden || !isDraggable,\n            noDragClassName,\n            handleSelector: dragHandle,\n            nodeId: id,\n            isSelectable,\n            selectNodesOnDrag,\n        });\n        if (hidden) {\n            return null;\n        }\n        return (jsx(\"div\", { className: cc([\n                'react-flow__node',\n                `react-flow__node-${type}`,\n                {\n                    // this is overwritable by passing `nopan` as a class name\n                    [noPanClassName]: isDraggable,\n                },\n                className,\n                {\n                    selected,\n                    selectable: isSelectable,\n                    parent: isParent,\n                    dragging,\n                },\n            ]), ref: nodeRef, style: {\n                zIndex,\n                transform: `translate(${xPosOrigin}px,${yPosOrigin}px)`,\n                pointerEvents: hasPointerEvents ? 'all' : 'none',\n                visibility: initialized ? 'visible' : 'hidden',\n                ...style,\n            }, \"data-id\": id, \"data-testid\": `rf__node-${id}`, onMouseEnter: onMouseEnterHandler, onMouseMove: onMouseMoveHandler, onMouseLeave: onMouseLeaveHandler, onContextMenu: onContextMenuHandler, onClick: onSelectNodeHandler, onDoubleClick: onDoubleClickHandler, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : undefined, \"aria-describedby\": disableKeyboardA11y ? undefined : `${ARIA_NODE_DESC_KEY}-${rfId}`, \"aria-label\": ariaLabel, children: jsx(Provider, { value: id, children: jsx(NodeComponent, { id: id, data: data, type: type, xPos: xPos, yPos: yPos, selected: selected, isConnectable: isConnectable, sourcePosition: sourcePosition, targetPosition: targetPosition, dragging: dragging, dragHandle: dragHandle, zIndex: zIndex }) }) }));\n    };\n    NodeWrapper.displayName = 'NodeWrapper';\n    return memo(NodeWrapper);\n};\n\nfunction createNodeTypes(nodeTypes) {\n    const standardTypes = {\n        input: wrapNode((nodeTypes.input || InputNode$1)),\n        default: wrapNode((nodeTypes.default || DefaultNode$1)),\n        output: wrapNode((nodeTypes.output || OutputNode$1)),\n        group: wrapNode((nodeTypes.group || GroupNode)),\n    };\n    const wrappedTypes = {};\n    const specialTypes = Object.keys(nodeTypes)\n        .filter((k) => !['input', 'default', 'output', 'group'].includes(k))\n        .reduce((res, key) => {\n        res[key] = wrapNode((nodeTypes[key] || DefaultNode$1));\n        return res;\n    }, wrappedTypes);\n    return {\n        ...standardTypes,\n        ...specialTypes,\n    };\n}\nconst getPositionWithOrigin = ({ x, y, width, height, origin, }) => {\n    if (!width || !height) {\n        return { x, y };\n    }\n    if (origin[0] < 0 || origin[1] < 0 || origin[0] > 1 || origin[1] > 1) {\n        return { x, y };\n    }\n    return {\n        x: x - width * origin[0],\n        y: y - height * origin[1],\n    };\n};\n\nconst doc = typeof document !== 'undefined' ? document : null;\n// the keycode can be a string 'a' or an array of strings ['a', 'a+d']\n// a string means a single key 'a' or a combination when '+' is used 'a+d'\n// an array means different possibilites. Explainer: ['a', 'd+s'] here the\n// user can use the single key 'a' or the combination 'd' + 's'\nvar useKeyPress = (keyCode = null, options = { target: doc }) => {\n    const [keyPressed, setKeyPressed] = useState(false);\n    // we need to remember if a modifier key is pressed in order to track it\n    const modifierPressed = useRef(false);\n    // we need to remember the pressed keys in order to support combinations\n    const pressedKeys = useRef(new Set([]));\n    // keyCodes = array with single keys [['a']] or key combinations [['a', 's']]\n    // keysToWatch = array with all keys flattened ['a', 'd', 'ShiftLeft']\n    // used to check if we store event.code or event.key. When the code is in the list of keysToWatch\n    // we use the code otherwise the key. Explainer: When you press the left \"command\" key, the code is \"MetaLeft\"\n    // and the key is \"Meta\". We want users to be able to pass keys and codes so we assume that the key is meant when\n    // we can't find it in the list of keysToWatch.\n    const [keyCodes, keysToWatch] = useMemo(() => {\n        if (keyCode !== null) {\n            const keyCodeArr = Array.isArray(keyCode) ? keyCode : [keyCode];\n            const keys = keyCodeArr.filter((kc) => typeof kc === 'string').map((kc) => kc.split('+'));\n            const keysFlat = keys.reduce((res, item) => res.concat(...item), []);\n            return [keys, keysFlat];\n        }\n        return [[], []];\n    }, [keyCode]);\n    useEffect(() => {\n        if (keyCode !== null) {\n            const downHandler = (event) => {\n                modifierPressed.current = event.ctrlKey || event.metaKey || event.shiftKey;\n                if (!modifierPressed.current && isInputDOMNode(event)) {\n                    return false;\n                }\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n                pressedKeys.current.add(event[keyOrCode]);\n                if (isMatchingKey(keyCodes, pressedKeys.current, false)) {\n                    event.preventDefault();\n                    setKeyPressed(true);\n                }\n            };\n            const upHandler = (event) => {\n                if (!modifierPressed.current && isInputDOMNode(event)) {\n                    return false;\n                }\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n                if (isMatchingKey(keyCodes, pressedKeys.current, true)) {\n                    setKeyPressed(false);\n                    pressedKeys.current.clear();\n                }\n                else {\n                    pressedKeys.current.delete(event[keyOrCode]);\n                }\n                modifierPressed.current = false;\n            };\n            const resetHandler = () => {\n                pressedKeys.current.clear();\n                setKeyPressed(false);\n            };\n            options?.target?.addEventListener('keydown', downHandler);\n            options?.target?.addEventListener('keyup', upHandler);\n            window.addEventListener('blur', resetHandler);\n            return () => {\n                options?.target?.removeEventListener('keydown', downHandler);\n                options?.target?.removeEventListener('keyup', upHandler);\n                window.removeEventListener('blur', resetHandler);\n            };\n        }\n    }, [keyCode, setKeyPressed]);\n    return keyPressed;\n};\n// utils\nfunction isMatchingKey(keyCodes, pressedKeys, isUp) {\n    return (keyCodes\n        // we only want to compare same sizes of keyCode definitions\n        // and pressed keys. When the user specified 'Meta' as a key somewhere\n        // this would also be truthy without this filter when user presses 'Meta' + 'r'\n        .filter((keys) => isUp || keys.length === pressedKeys.size)\n        // since we want to support multiple possibilities only one of the\n        // combinations need to be part of the pressed keys\n        .some((keys) => keys.every((k) => pressedKeys.has(k))));\n}\nfunction useKeyOrCode(eventCode, keysToWatch) {\n    return keysToWatch.includes(eventCode) ? 'code' : 'key';\n}\n\nfunction calculateXYZPosition(node, nodeInternals, result, nodeOrigin) {\n    if (!node.parentNode) {\n        return result;\n    }\n    const parentNode = nodeInternals.get(node.parentNode);\n    const parentNodePosition = getNodePositionWithOrigin(parentNode, nodeOrigin);\n    return calculateXYZPosition(parentNode, nodeInternals, {\n        x: (result.x ?? 0) + parentNodePosition.x,\n        y: (result.y ?? 0) + parentNodePosition.y,\n        z: (parentNode[internalsSymbol]?.z ?? 0) > (result.z ?? 0) ? parentNode[internalsSymbol]?.z ?? 0 : result.z ?? 0,\n    }, nodeOrigin);\n}\nfunction updateAbsoluteNodePositions(nodeInternals, nodeOrigin, parentNodes) {\n    nodeInternals.forEach((node) => {\n        if (node.parentNode && !nodeInternals.has(node.parentNode)) {\n            throw new Error(`Parent node ${node.parentNode} not found`);\n        }\n        if (node.parentNode || parentNodes?.[node.id]) {\n            const { x, y, z } = calculateXYZPosition(node, nodeInternals, {\n                ...node.position,\n                z: node[internalsSymbol]?.z ?? 0,\n            }, nodeOrigin);\n            node.positionAbsolute = {\n                x,\n                y,\n            };\n            node[internalsSymbol].z = z;\n            if (parentNodes?.[node.id]) {\n                node[internalsSymbol].isParent = true;\n            }\n        }\n    });\n}\nfunction createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) {\n    const nextNodeInternals = new Map();\n    const parentNodes = {};\n    const selectedNodeZ = elevateNodesOnSelect ? 1000 : 0;\n    nodes.forEach((node) => {\n        const z = (isNumeric(node.zIndex) ? node.zIndex : 0) + (node.selected ? selectedNodeZ : 0);\n        const currInternals = nodeInternals.get(node.id);\n        const internals = {\n            width: currInternals?.width,\n            height: currInternals?.height,\n            ...node,\n            positionAbsolute: {\n                x: node.position.x,\n                y: node.position.y,\n            },\n        };\n        if (node.parentNode) {\n            internals.parentNode = node.parentNode;\n            parentNodes[node.parentNode] = true;\n        }\n        Object.defineProperty(internals, internalsSymbol, {\n            enumerable: false,\n            value: {\n                handleBounds: currInternals?.[internalsSymbol]?.handleBounds,\n                z,\n            },\n        });\n        nextNodeInternals.set(node.id, internals);\n    });\n    updateAbsoluteNodePositions(nextNodeInternals, nodeOrigin, parentNodes);\n    return nextNodeInternals;\n}\nfunction fitView(get, options = {}) {\n    const { getNodes, width, height, minZoom, maxZoom, d3Zoom, d3Selection, fitViewOnInitDone, fitViewOnInit, nodeOrigin, } = get();\n    const isInitialFitView = options.initial && !fitViewOnInitDone && fitViewOnInit;\n    const d3initialized = d3Zoom && d3Selection;\n    if (d3initialized && (isInitialFitView || !options.initial)) {\n        const nodes = getNodes().filter((n) => {\n            const isVisible = options.includeHiddenNodes ? n.width && n.height : !n.hidden;\n            if (options.nodes?.length) {\n                return isVisible && options.nodes.some((optionNode) => optionNode.id === n.id);\n            }\n            return isVisible;\n        });\n        const nodesInitialized = nodes.every((n) => n.width && n.height);\n        if (nodes.length > 0 && nodesInitialized) {\n            const bounds = getRectOfNodes(nodes, nodeOrigin);\n            const [x, y, zoom] = getTransformForBounds(bounds, width, height, options.minZoom ?? minZoom, options.maxZoom ?? maxZoom, options.padding ?? 0.1);\n            const nextTransform = zoomIdentity.translate(x, y).scale(zoom);\n            if (typeof options.duration === 'number' && options.duration > 0) {\n                d3Zoom.transform(getD3Transition(d3Selection, options.duration), nextTransform);\n            }\n            else {\n                d3Zoom.transform(d3Selection, nextTransform);\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction handleControlledNodeSelectionChange(nodeChanges, nodeInternals) {\n    nodeChanges.forEach((change) => {\n        const node = nodeInternals.get(change.id);\n        if (node) {\n            nodeInternals.set(node.id, {\n                ...node,\n                [internalsSymbol]: node[internalsSymbol],\n                selected: change.selected,\n            });\n        }\n    });\n    return new Map(nodeInternals);\n}\nfunction handleControlledEdgeSelectionChange(edgeChanges, edges) {\n    return edges.map((e) => {\n        const change = edgeChanges.find((change) => change.id === e.id);\n        if (change) {\n            e.selected = change.selected;\n        }\n        return e;\n    });\n}\nfunction updateNodesAndEdgesSelections({ changedNodes, changedEdges, get, set }) {\n    const { nodeInternals, edges, onNodesChange, onEdgesChange, hasDefaultNodes, hasDefaultEdges } = get();\n    if (changedNodes?.length) {\n        if (hasDefaultNodes) {\n            set({ nodeInternals: handleControlledNodeSelectionChange(changedNodes, nodeInternals) });\n        }\n        onNodesChange?.(changedNodes);\n    }\n    if (changedEdges?.length) {\n        if (hasDefaultEdges) {\n            set({ edges: handleControlledEdgeSelectionChange(changedEdges, edges) });\n        }\n        onEdgesChange?.(changedEdges);\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => { };\nconst initialViewportHelper = {\n    zoomIn: noop,\n    zoomOut: noop,\n    zoomTo: noop,\n    getZoom: () => 1,\n    setViewport: noop,\n    getViewport: () => ({ x: 0, y: 0, zoom: 1 }),\n    fitView: () => false,\n    setCenter: noop,\n    fitBounds: noop,\n    project: (position) => position,\n    viewportInitialized: false,\n};\nconst selector$b = (s) => ({\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection,\n});\nconst useViewportHelper = () => {\n    const store = useStoreApi();\n    const { d3Zoom, d3Selection } = useStore(selector$b, shallow);\n    const viewportHelperFunctions = useMemo(() => {\n        if (d3Selection && d3Zoom) {\n            return {\n                zoomIn: (options) => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1.2),\n                zoomOut: (options) => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1 / 1.2),\n                zoomTo: (zoomLevel, options) => d3Zoom.scaleTo(getD3Transition(d3Selection, options?.duration), zoomLevel),\n                getZoom: () => store.getState().transform[2],\n                setViewport: (transform, options) => {\n                    const [x, y, zoom] = store.getState().transform;\n                    const nextTransform = zoomIdentity\n                        .translate(transform.x ?? x, transform.y ?? y)\n                        .scale(transform.zoom ?? zoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), nextTransform);\n                },\n                getViewport: () => {\n                    const [x, y, zoom] = store.getState().transform;\n                    return { x, y, zoom };\n                },\n                fitView: (options) => fitView(store.getState, options),\n                setCenter: (x, y, options) => {\n                    const { width, height, maxZoom } = store.getState();\n                    const nextZoom = typeof options?.zoom !== 'undefined' ? options.zoom : maxZoom;\n                    const centerX = width / 2 - x * nextZoom;\n                    const centerY = height / 2 - y * nextZoom;\n                    const transform = zoomIdentity.translate(centerX, centerY).scale(nextZoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n                },\n                fitBounds: (bounds, options) => {\n                    const { width, height, minZoom, maxZoom } = store.getState();\n                    const [x, y, zoom] = getTransformForBounds(bounds, width, height, minZoom, maxZoom, options?.padding ?? 0.1);\n                    const transform = zoomIdentity.translate(x, y).scale(zoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n                },\n                project: (position) => {\n                    const { transform, snapToGrid, snapGrid } = store.getState();\n                    return pointToRendererPoint(position, transform, snapToGrid, snapGrid);\n                },\n                viewportInitialized: true,\n            };\n        }\n        return initialViewportHelper;\n    }, [d3Zoom, d3Selection]);\n    return viewportHelperFunctions;\n};\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nfunction useReactFlow() {\n    const viewportHelper = useViewportHelper();\n    const store = useStoreApi();\n    const getNodes = useCallback(() => {\n        return store\n            .getState()\n            .getNodes()\n            .map((n) => ({ ...n }));\n    }, []);\n    const getNode = useCallback((id) => {\n        return store.getState().nodeInternals.get(id);\n    }, []);\n    const getEdges = useCallback(() => {\n        const { edges = [] } = store.getState();\n        return edges.map((e) => ({ ...e }));\n    }, []);\n    const getEdge = useCallback((id) => {\n        const { edges = [] } = store.getState();\n        return edges.find((e) => e.id === id);\n    }, []);\n    const setNodes = useCallback((payload) => {\n        const { getNodes, setNodes, hasDefaultNodes, onNodesChange } = store.getState();\n        const nodes = getNodes();\n        const nextNodes = typeof payload === 'function' ? payload(nodes) : payload;\n        if (hasDefaultNodes) {\n            setNodes(nextNodes);\n        }\n        else if (onNodesChange) {\n            const changes = nextNodes.length === 0\n                ? nodes.map((node) => ({ type: 'remove', id: node.id }))\n                : nextNodes.map((node) => ({ item: node, type: 'reset' }));\n            onNodesChange(changes);\n        }\n    }, []);\n    const setEdges = useCallback((payload) => {\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange } = store.getState();\n        const nextEdges = typeof payload === 'function' ? payload(edges) : payload;\n        if (hasDefaultEdges) {\n            setEdges(nextEdges);\n        }\n        else if (onEdgesChange) {\n            const changes = nextEdges.length === 0\n                ? edges.map((edge) => ({ type: 'remove', id: edge.id }))\n                : nextEdges.map((edge) => ({ item: edge, type: 'reset' }));\n            onEdgesChange(changes);\n        }\n    }, []);\n    const addNodes = useCallback((payload) => {\n        const nodes = Array.isArray(payload) ? payload : [payload];\n        const { getNodes, setNodes, hasDefaultNodes, onNodesChange } = store.getState();\n        if (hasDefaultNodes) {\n            const currentNodes = getNodes();\n            const nextNodes = [...currentNodes, ...nodes];\n            setNodes(nextNodes);\n        }\n        else if (onNodesChange) {\n            const changes = nodes.map((node) => ({ item: node, type: 'add' }));\n            onNodesChange(changes);\n        }\n    }, []);\n    const addEdges = useCallback((payload) => {\n        const nextEdges = Array.isArray(payload) ? payload : [payload];\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange } = store.getState();\n        if (hasDefaultEdges) {\n            setEdges([...edges, ...nextEdges]);\n        }\n        else if (onEdgesChange) {\n            const changes = nextEdges.map((edge) => ({ item: edge, type: 'add' }));\n            onEdgesChange(changes);\n        }\n    }, []);\n    const toObject = useCallback(() => {\n        const { getNodes, edges = [], transform } = store.getState();\n        const [x, y, zoom] = transform;\n        return {\n            nodes: getNodes().map((n) => ({ ...n })),\n            edges: edges.map((e) => ({ ...e })),\n            viewport: {\n                x,\n                y,\n                zoom,\n            },\n        };\n    }, []);\n    const deleteElements = useCallback(({ nodes: nodesDeleted, edges: edgesDeleted }) => {\n        const { nodeInternals, getNodes, edges, hasDefaultNodes, hasDefaultEdges, onNodesDelete, onEdgesDelete, onNodesChange, onEdgesChange, } = store.getState();\n        const nodeIds = (nodesDeleted || []).map((node) => node.id);\n        const edgeIds = (edgesDeleted || []).map((edge) => edge.id);\n        const nodesToRemove = getNodes().reduce((res, node) => {\n            const parentHit = !nodeIds.includes(node.id) && node.parentNode && res.find((n) => n.id === node.parentNode);\n            const deletable = typeof node.deletable === 'boolean' ? node.deletable : true;\n            if (deletable && (nodeIds.includes(node.id) || parentHit)) {\n                res.push(node);\n            }\n            return res;\n        }, []);\n        const deletableEdges = edges.filter((e) => (typeof e.deletable === 'boolean' ? e.deletable : true));\n        const initialHitEdges = deletableEdges.filter((e) => edgeIds.includes(e.id));\n        if (nodesToRemove || initialHitEdges) {\n            const connectedEdges = getConnectedEdges(nodesToRemove, deletableEdges);\n            const edgesToRemove = [...initialHitEdges, ...connectedEdges];\n            const edgeIdsToRemove = edgesToRemove.reduce((res, edge) => {\n                if (!res.includes(edge.id)) {\n                    res.push(edge.id);\n                }\n                return res;\n            }, []);\n            if (hasDefaultEdges || hasDefaultNodes) {\n                if (hasDefaultEdges) {\n                    store.setState({\n                        edges: edges.filter((e) => !edgeIdsToRemove.includes(e.id)),\n                    });\n                }\n                if (hasDefaultNodes) {\n                    nodesToRemove.forEach((node) => {\n                        nodeInternals.delete(node.id);\n                    });\n                    store.setState({\n                        nodeInternals: new Map(nodeInternals),\n                    });\n                }\n            }\n            if (edgeIdsToRemove.length > 0) {\n                onEdgesDelete?.(edgesToRemove);\n                if (onEdgesChange) {\n                    onEdgesChange(edgeIdsToRemove.map((id) => ({\n                        id,\n                        type: 'remove',\n                    })));\n                }\n            }\n            if (nodesToRemove.length > 0) {\n                onNodesDelete?.(nodesToRemove);\n                if (onNodesChange) {\n                    const nodeChanges = nodesToRemove.map((n) => ({ id: n.id, type: 'remove' }));\n                    onNodesChange(nodeChanges);\n                }\n            }\n        }\n    }, []);\n    const getNodeRect = useCallback((nodeOrRect) => {\n        const isRect = isRectObject(nodeOrRect);\n        const node = isRect ? null : store.getState().nodeInternals.get(nodeOrRect.id);\n        const nodeRect = isRect ? nodeOrRect : nodeToRect(node);\n        return [nodeRect, node, isRect];\n    }, []);\n    const getIntersectingNodes = useCallback((nodeOrRect, partially = true, nodes) => {\n        const [nodeRect, node, isRect] = getNodeRect(nodeOrRect);\n        if (!nodeRect) {\n            return [];\n        }\n        return (nodes || store.getState().getNodes()).filter((n) => {\n            if (!isRect && (n.id === node.id || !n.positionAbsolute)) {\n                return false;\n            }\n            const currNodeRect = nodeToRect(n);\n            const overlappingArea = getOverlappingArea(currNodeRect, nodeRect);\n            const partiallyVisible = partially && overlappingArea > 0;\n            return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n        });\n    }, []);\n    const isNodeIntersecting = useCallback((nodeOrRect, area, partially = true) => {\n        const [nodeRect] = getNodeRect(nodeOrRect);\n        if (!nodeRect) {\n            return false;\n        }\n        const overlappingArea = getOverlappingArea(nodeRect, area);\n        const partiallyVisible = partially && overlappingArea > 0;\n        return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n    }, []);\n    return useMemo(() => {\n        return {\n            ...viewportHelper,\n            getNodes,\n            getNode,\n            getEdges,\n            getEdge,\n            setNodes,\n            setEdges,\n            addNodes,\n            addEdges,\n            toObject,\n            deleteElements,\n            getIntersectingNodes,\n            isNodeIntersecting,\n        };\n    }, [\n        viewportHelper,\n        getNodes,\n        getNode,\n        getEdges,\n        getEdge,\n        setNodes,\n        setEdges,\n        addNodes,\n        addEdges,\n        toObject,\n        deleteElements,\n        getIntersectingNodes,\n        isNodeIntersecting,\n    ]);\n}\n\nvar useGlobalKeyHandler = ({ deleteKeyCode, multiSelectionKeyCode }) => {\n    const store = useStoreApi();\n    const { deleteElements } = useReactFlow();\n    const deleteKeyPressed = useKeyPress(deleteKeyCode);\n    const multiSelectionKeyPressed = useKeyPress(multiSelectionKeyCode);\n    useEffect(() => {\n        if (deleteKeyPressed) {\n            const { edges, getNodes } = store.getState();\n            const selectedNodes = getNodes().filter((node) => node.selected);\n            const selectedEdges = edges.filter((edge) => edge.selected);\n            deleteElements({ nodes: selectedNodes, edges: selectedEdges });\n            store.setState({ nodesSelectionActive: false });\n        }\n    }, [deleteKeyPressed]);\n    useEffect(() => {\n        store.setState({ multiSelectionActive: multiSelectionKeyPressed });\n    }, [multiSelectionKeyPressed]);\n};\n\nfunction useResizeHandler(rendererNode) {\n    const store = useStoreApi();\n    useEffect(() => {\n        let resizeObserver;\n        const updateDimensions = () => {\n            if (!rendererNode.current) {\n                return;\n            }\n            const size = getDimensions(rendererNode.current);\n            if (size.height === 0 || size.width === 0) {\n                store.getState().onError?.('004', errorMessages['error004']());\n            }\n            store.setState({ width: size.width || 500, height: size.height || 500 });\n        };\n        updateDimensions();\n        window.addEventListener('resize', updateDimensions);\n        if (rendererNode.current) {\n            resizeObserver = new ResizeObserver(() => updateDimensions());\n            resizeObserver.observe(rendererNode.current);\n        }\n        return () => {\n            window.removeEventListener('resize', updateDimensions);\n            if (resizeObserver && rendererNode.current) {\n                resizeObserver.unobserve(rendererNode.current);\n            }\n        };\n    }, []);\n}\n\nconst containerStyle = {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n};\n\nconst viewChanged = (prevViewport, eventViewport) => prevViewport.x !== eventViewport.x || prevViewport.y !== eventViewport.y || prevViewport.zoom !== eventViewport.k;\nconst eventToFlowTransform = (eventViewport) => ({\n    x: eventViewport.x,\n    y: eventViewport.y,\n    zoom: eventViewport.k,\n});\nconst isWrappedWithClass = (event, className) => event.target.closest(`.${className}`);\nconst isRightClickPan = (panOnDrag, usedButton) => usedButton === 2 && Array.isArray(panOnDrag) && panOnDrag.includes(2);\nconst selector$a = (s) => ({\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection,\n    d3ZoomHandler: s.d3ZoomHandler,\n    userSelectionActive: s.userSelectionActive,\n});\nconst ZoomPane = ({ onMove, onMoveStart, onMoveEnd, onPaneContextMenu, zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, elementsSelectable, panOnDrag = true, defaultViewport, translateExtent, minZoom, maxZoom, zoomActivationKeyCode, preventScrolling = true, children, noWheelClassName, noPanClassName, }) => {\n    const timerId = useRef();\n    const store = useStoreApi();\n    const isZoomingOrPanning = useRef(false);\n    const zoomedWithRightMouseButton = useRef(false);\n    const zoomPane = useRef(null);\n    const prevTransform = useRef({ x: 0, y: 0, zoom: 0 });\n    const { d3Zoom, d3Selection, d3ZoomHandler, userSelectionActive } = useStore(selector$a, shallow);\n    const zoomActivationKeyPressed = useKeyPress(zoomActivationKeyCode);\n    const mouseButton = useRef(0);\n    useResizeHandler(zoomPane);\n    useEffect(() => {\n        if (zoomPane.current) {\n            const bbox = zoomPane.current.getBoundingClientRect();\n            const d3ZoomInstance = zoom().scaleExtent([minZoom, maxZoom]).translateExtent(translateExtent);\n            const selection = select(zoomPane.current).call(d3ZoomInstance);\n            const updatedTransform = zoomIdentity\n                .translate(defaultViewport.x, defaultViewport.y)\n                .scale(clamp(defaultViewport.zoom, minZoom, maxZoom));\n            const extent = [\n                [0, 0],\n                [bbox.width, bbox.height],\n            ];\n            const constrainedTransform = d3ZoomInstance.constrain()(updatedTransform, extent, translateExtent);\n            d3ZoomInstance.transform(selection, constrainedTransform);\n            store.setState({\n                d3Zoom: d3ZoomInstance,\n                d3Selection: selection,\n                d3ZoomHandler: selection.on('wheel.zoom'),\n                // we need to pass transform because zoom handler is not registered when we set the initial transform\n                transform: [constrainedTransform.x, constrainedTransform.y, constrainedTransform.k],\n                domNode: zoomPane.current.closest('.react-flow'),\n            });\n        }\n    }, []);\n    useEffect(() => {\n        if (d3Selection && d3Zoom) {\n            if (panOnScroll && !zoomActivationKeyPressed && !userSelectionActive) {\n                d3Selection.on('wheel.zoom', (event) => {\n                    if (isWrappedWithClass(event, noWheelClassName)) {\n                        return false;\n                    }\n                    event.preventDefault();\n                    event.stopImmediatePropagation();\n                    const currentZoom = d3Selection.property('__zoom').k || 1;\n                    if (event.ctrlKey && zoomOnPinch) {\n                        const point = pointer(event);\n                        // taken from https://github.com/d3/d3-zoom/blob/master/src/zoom.js\n                        const pinchDelta = -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * 10;\n                        const zoom = currentZoom * Math.pow(2, pinchDelta);\n                        d3Zoom.scaleTo(d3Selection, zoom, point);\n                        return;\n                    }\n                    // increase scroll speed in firefox\n                    // firefox: deltaMode === 1; chrome: deltaMode === 0\n                    const deltaNormalize = event.deltaMode === 1 ? 20 : 1;\n                    const deltaX = panOnScrollMode === PanOnScrollMode.Vertical ? 0 : event.deltaX * deltaNormalize;\n                    const deltaY = panOnScrollMode === PanOnScrollMode.Horizontal ? 0 : event.deltaY * deltaNormalize;\n                    d3Zoom.translateBy(d3Selection, -(deltaX / currentZoom) * panOnScrollSpeed, -(deltaY / currentZoom) * panOnScrollSpeed);\n                }, { passive: false });\n            }\n            else if (typeof d3ZoomHandler !== 'undefined') {\n                d3Selection.on('wheel.zoom', function (event, d) {\n                    if (!preventScrolling || isWrappedWithClass(event, noWheelClassName)) {\n                        return null;\n                    }\n                    event.preventDefault();\n                    d3ZoomHandler.call(this, event, d);\n                }, { passive: false });\n            }\n        }\n    }, [\n        userSelectionActive,\n        panOnScroll,\n        panOnScrollMode,\n        d3Selection,\n        d3Zoom,\n        d3ZoomHandler,\n        zoomActivationKeyPressed,\n        zoomOnPinch,\n        preventScrolling,\n        noWheelClassName,\n    ]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.on('start', (event) => {\n                if (!event.sourceEvent) {\n                    return null;\n                }\n                // we need to remember it here, because it's always 0 in the \"zoom\" event\n                mouseButton.current = event.sourceEvent.button;\n                const { onViewportChangeStart } = store.getState();\n                isZoomingOrPanning.current = true;\n                if (event.sourceEvent?.type === 'mousedown') {\n                    store.setState({ paneDragging: true });\n                }\n                if (onMoveStart || onViewportChangeStart) {\n                    const flowTransform = eventToFlowTransform(event.transform);\n                    prevTransform.current = flowTransform;\n                    onViewportChangeStart?.(flowTransform);\n                    onMoveStart?.(event.sourceEvent, flowTransform);\n                }\n            });\n        }\n    }, [d3Zoom, onMoveStart]);\n    useEffect(() => {\n        if (d3Zoom) {\n            if (userSelectionActive && !isZoomingOrPanning.current) {\n                d3Zoom.on('zoom', null);\n            }\n            else if (!userSelectionActive) {\n                d3Zoom.on('zoom', (event) => {\n                    const { onViewportChange } = store.getState();\n                    store.setState({ transform: [event.transform.x, event.transform.y, event.transform.k] });\n                    zoomedWithRightMouseButton.current = !!(onPaneContextMenu && isRightClickPan(panOnDrag, mouseButton.current ?? 0));\n                    if (onMove || onViewportChange) {\n                        const flowTransform = eventToFlowTransform(event.transform);\n                        onViewportChange?.(flowTransform);\n                        onMove?.(event.sourceEvent, flowTransform);\n                    }\n                });\n            }\n        }\n    }, [userSelectionActive, d3Zoom, onMove, panOnDrag, onPaneContextMenu]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.on('end', (event) => {\n                if (!event.sourceEvent) {\n                    return null;\n                }\n                const { onViewportChangeEnd } = store.getState();\n                isZoomingOrPanning.current = false;\n                store.setState({ paneDragging: false });\n                if (onPaneContextMenu &&\n                    isRightClickPan(panOnDrag, mouseButton.current ?? 0) &&\n                    !zoomedWithRightMouseButton.current) {\n                    onPaneContextMenu(event.sourceEvent);\n                }\n                zoomedWithRightMouseButton.current = false;\n                if ((onMoveEnd || onViewportChangeEnd) && viewChanged(prevTransform.current, event.transform)) {\n                    const flowTransform = eventToFlowTransform(event.transform);\n                    prevTransform.current = flowTransform;\n                    clearTimeout(timerId.current);\n                    timerId.current = setTimeout(() => {\n                        onViewportChangeEnd?.(flowTransform);\n                        onMoveEnd?.(event.sourceEvent, flowTransform);\n                    }, panOnScroll ? 150 : 0);\n                }\n            });\n        }\n    }, [d3Zoom, panOnScroll, panOnDrag, onMoveEnd, onPaneContextMenu]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.filter((event) => {\n                const zoomScroll = zoomActivationKeyPressed || zoomOnScroll;\n                const pinchZoom = zoomOnPinch && event.ctrlKey;\n                if (event.button === 1 &&\n                    event.type === 'mousedown' &&\n                    (isWrappedWithClass(event, 'react-flow__node') || isWrappedWithClass(event, 'react-flow__edge'))) {\n                    return true;\n                }\n                // if all interactions are disabled, we prevent all zoom events\n                if (!panOnDrag && !zoomScroll && !panOnScroll && !zoomOnDoubleClick && !zoomOnPinch) {\n                    return false;\n                }\n                // during a selection we prevent all other interactions\n                if (userSelectionActive) {\n                    return false;\n                }\n                // if zoom on double click is disabled, we prevent the double click event\n                if (!zoomOnDoubleClick && event.type === 'dblclick') {\n                    return false;\n                }\n                // if the target element is inside an element with the nowheel class, we prevent zooming\n                if (isWrappedWithClass(event, noWheelClassName) && event.type === 'wheel') {\n                    return false;\n                }\n                // if the target element is inside an element with the nopan class, we prevent panning\n                if (isWrappedWithClass(event, noPanClassName) && event.type !== 'wheel') {\n                    return false;\n                }\n                if (!zoomOnPinch && event.ctrlKey && event.type === 'wheel') {\n                    return false;\n                }\n                // when there is no scroll handling enabled, we prevent all wheel events\n                if (!zoomScroll && !panOnScroll && !pinchZoom && event.type === 'wheel') {\n                    return false;\n                }\n                // if the pane is not movable, we prevent dragging it with mousestart or touchstart\n                if (!panOnDrag && (event.type === 'mousedown' || event.type === 'touchstart')) {\n                    return false;\n                }\n                // if the pane is only movable using allowed clicks\n                if (Array.isArray(panOnDrag) &&\n                    !panOnDrag.includes(event.button) &&\n                    (event.type === 'mousedown' || event.type === 'touchstart')) {\n                    return false;\n                }\n                // We only allow right clicks if pan on drag is set to right click\n                const buttonAllowed = (Array.isArray(panOnDrag) && panOnDrag.includes(event.button)) || !event.button || event.button <= 1;\n                // default filter for d3-zoom\n                return (!event.ctrlKey || event.type === 'wheel') && buttonAllowed;\n            });\n        }\n    }, [\n        userSelectionActive,\n        d3Zoom,\n        zoomOnScroll,\n        zoomOnPinch,\n        panOnScroll,\n        zoomOnDoubleClick,\n        panOnDrag,\n        elementsSelectable,\n        zoomActivationKeyPressed,\n    ]);\n    return (jsx(\"div\", { className: \"react-flow__renderer\", ref: zoomPane, style: containerStyle, children: children }));\n};\n\nconst selector$9 = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    userSelectionRect: s.userSelectionRect,\n});\nfunction UserSelection() {\n    const { userSelectionActive, userSelectionRect } = useStore(selector$9, shallow);\n    const isActive = userSelectionActive && userSelectionRect;\n    if (!isActive) {\n        return null;\n    }\n    return (jsx(\"div\", { className: \"react-flow__selection react-flow__container\", style: {\n            width: userSelectionRect.width,\n            height: userSelectionRect.height,\n            transform: `translate(${userSelectionRect.x}px, ${userSelectionRect.y}px)`,\n        } }));\n}\n\nfunction handleParentExpand(res, updateItem) {\n    const parent = res.find((e) => e.id === updateItem.parentNode);\n    if (parent) {\n        const extendWidth = updateItem.position.x + updateItem.width - parent.width;\n        const extendHeight = updateItem.position.y + updateItem.height - parent.height;\n        if (extendWidth > 0 || extendHeight > 0 || updateItem.position.x < 0 || updateItem.position.y < 0) {\n            parent.style = { ...parent.style } || {};\n            parent.style.width = parent.style.width ?? parent.width;\n            parent.style.height = parent.style.height ?? parent.height;\n            if (extendWidth > 0) {\n                parent.style.width += extendWidth;\n            }\n            if (extendHeight > 0) {\n                parent.style.height += extendHeight;\n            }\n            if (updateItem.position.x < 0) {\n                const xDiff = Math.abs(updateItem.position.x);\n                parent.position.x = parent.position.x - xDiff;\n                parent.style.width += xDiff;\n                updateItem.position.x = 0;\n            }\n            if (updateItem.position.y < 0) {\n                const yDiff = Math.abs(updateItem.position.y);\n                parent.position.y = parent.position.y - yDiff;\n                parent.style.height += yDiff;\n                updateItem.position.y = 0;\n            }\n            parent.width = parent.style.width;\n            parent.height = parent.style.height;\n        }\n    }\n}\nfunction applyChanges(changes, elements) {\n    // we need this hack to handle the setNodes and setEdges function of the useReactFlow hook for controlled flows\n    if (changes.some((c) => c.type === 'reset')) {\n        return changes.filter((c) => c.type === 'reset').map((c) => c.item);\n    }\n    const initElements = changes.filter((c) => c.type === 'add').map((c) => c.item);\n    return elements.reduce((res, item) => {\n        const currentChanges = changes.filter((c) => c.id === item.id);\n        if (currentChanges.length === 0) {\n            res.push(item);\n            return res;\n        }\n        const updateItem = { ...item };\n        for (const currentChange of currentChanges) {\n            if (currentChange) {\n                switch (currentChange.type) {\n                    case 'select': {\n                        updateItem.selected = currentChange.selected;\n                        break;\n                    }\n                    case 'position': {\n                        if (typeof currentChange.position !== 'undefined') {\n                            updateItem.position = currentChange.position;\n                        }\n                        if (typeof currentChange.positionAbsolute !== 'undefined') {\n                            updateItem.positionAbsolute = currentChange.positionAbsolute;\n                        }\n                        if (typeof currentChange.dragging !== 'undefined') {\n                            updateItem.dragging = currentChange.dragging;\n                        }\n                        if (updateItem.expandParent) {\n                            handleParentExpand(res, updateItem);\n                        }\n                        break;\n                    }\n                    case 'dimensions': {\n                        if (typeof currentChange.dimensions !== 'undefined') {\n                            updateItem.width = currentChange.dimensions.width;\n                            updateItem.height = currentChange.dimensions.height;\n                        }\n                        if (typeof currentChange.updateStyle !== 'undefined') {\n                            updateItem.style = { ...(updateItem.style || {}), ...currentChange.dimensions };\n                        }\n                        if (typeof currentChange.resizing === 'boolean') {\n                            updateItem.resizing = currentChange.resizing;\n                        }\n                        if (updateItem.expandParent) {\n                            handleParentExpand(res, updateItem);\n                        }\n                        break;\n                    }\n                    case 'remove': {\n                        return res;\n                    }\n                }\n            }\n        }\n        res.push(updateItem);\n        return res;\n    }, initElements);\n}\nfunction applyNodeChanges(changes, nodes) {\n    return applyChanges(changes, nodes);\n}\nfunction applyEdgeChanges(changes, edges) {\n    return applyChanges(changes, edges);\n}\nconst createSelectionChange = (id, selected) => ({\n    id,\n    type: 'select',\n    selected,\n});\nfunction getSelectionChanges(items, selectedIds) {\n    return items.reduce((res, item) => {\n        const willBeSelected = selectedIds.includes(item.id);\n        if (!item.selected && willBeSelected) {\n            item.selected = true;\n            res.push(createSelectionChange(item.id, true));\n        }\n        else if (item.selected && !willBeSelected) {\n            item.selected = false;\n            res.push(createSelectionChange(item.id, false));\n        }\n        return res;\n    }, []);\n}\n\nconst wrapHandler = (handler, containerRef) => {\n    return (event) => {\n        if (event.target !== containerRef.current) {\n            return;\n        }\n        handler?.(event);\n    };\n};\nconst selector$8 = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    elementsSelectable: s.elementsSelectable,\n    dragging: s.paneDragging,\n});\nconst Pane = memo(({ isSelecting, selectionMode = SelectionMode.Full, panOnDrag, onSelectionStart, onSelectionEnd, onPaneClick, onPaneContextMenu, onPaneScroll, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, children, }) => {\n    const container = useRef(null);\n    const store = useStoreApi();\n    const prevSelectedNodesCount = useRef(0);\n    const prevSelectedEdgesCount = useRef(0);\n    const containerBounds = useRef();\n    const { userSelectionActive, elementsSelectable, dragging } = useStore(selector$8, shallow);\n    const resetUserSelection = () => {\n        store.setState({ userSelectionActive: false, userSelectionRect: null });\n        prevSelectedNodesCount.current = 0;\n        prevSelectedEdgesCount.current = 0;\n    };\n    const onClick = (event) => {\n        onPaneClick?.(event);\n        store.getState().resetSelectedElements();\n        store.setState({ nodesSelectionActive: false });\n    };\n    const onContextMenu = (event) => {\n        if (Array.isArray(panOnDrag) && panOnDrag?.includes(2)) {\n            event.preventDefault();\n            return;\n        }\n        onPaneContextMenu?.(event);\n    };\n    const onWheel = onPaneScroll ? (event) => onPaneScroll(event) : undefined;\n    const onMouseDown = (event) => {\n        const { resetSelectedElements, domNode } = store.getState();\n        containerBounds.current = domNode?.getBoundingClientRect();\n        if (!elementsSelectable ||\n            !isSelecting ||\n            event.button !== 0 ||\n            event.target !== container.current ||\n            !containerBounds.current) {\n            return;\n        }\n        const { x, y } = getEventPosition(event, containerBounds.current);\n        resetSelectedElements();\n        store.setState({\n            userSelectionRect: {\n                width: 0,\n                height: 0,\n                startX: x,\n                startY: y,\n                x,\n                y,\n            },\n        });\n        onSelectionStart?.(event);\n    };\n    const onMouseMove = (event) => {\n        const { userSelectionRect, nodeInternals, edges, transform, onNodesChange, onEdgesChange, nodeOrigin, getNodes } = store.getState();\n        if (!isSelecting || !containerBounds.current || !userSelectionRect) {\n            return;\n        }\n        store.setState({ userSelectionActive: true, nodesSelectionActive: false });\n        const mousePos = getEventPosition(event, containerBounds.current);\n        const startX = userSelectionRect.startX ?? 0;\n        const startY = userSelectionRect.startY ?? 0;\n        const nextUserSelectRect = {\n            ...userSelectionRect,\n            x: mousePos.x < startX ? mousePos.x : startX,\n            y: mousePos.y < startY ? mousePos.y : startY,\n            width: Math.abs(mousePos.x - startX),\n            height: Math.abs(mousePos.y - startY),\n        };\n        const nodes = getNodes();\n        const selectedNodes = getNodesInside(nodeInternals, nextUserSelectRect, transform, selectionMode === SelectionMode.Partial, true, nodeOrigin);\n        const selectedEdgeIds = getConnectedEdges(selectedNodes, edges).map((e) => e.id);\n        const selectedNodeIds = selectedNodes.map((n) => n.id);\n        if (prevSelectedNodesCount.current !== selectedNodeIds.length) {\n            prevSelectedNodesCount.current = selectedNodeIds.length;\n            const changes = getSelectionChanges(nodes, selectedNodeIds);\n            if (changes.length) {\n                onNodesChange?.(changes);\n            }\n        }\n        if (prevSelectedEdgesCount.current !== selectedEdgeIds.length) {\n            prevSelectedEdgesCount.current = selectedEdgeIds.length;\n            const changes = getSelectionChanges(edges, selectedEdgeIds);\n            if (changes.length) {\n                onEdgesChange?.(changes);\n            }\n        }\n        store.setState({\n            userSelectionRect: nextUserSelectRect,\n        });\n    };\n    const onMouseUp = (event) => {\n        if (event.button !== 0) {\n            return;\n        }\n        const { userSelectionRect } = store.getState();\n        // We only want to trigger click functions when in selection mode if\n        // the user did not move the mouse.\n        if (!userSelectionActive && userSelectionRect && event.target === container.current) {\n            onClick?.(event);\n        }\n        store.setState({ nodesSelectionActive: prevSelectedNodesCount.current > 0 });\n        resetUserSelection();\n        onSelectionEnd?.(event);\n    };\n    const onMouseLeave = (event) => {\n        if (userSelectionActive) {\n            store.setState({ nodesSelectionActive: prevSelectedNodesCount.current > 0 });\n            onSelectionEnd?.(event);\n        }\n        resetUserSelection();\n    };\n    const hasActiveSelection = elementsSelectable && (isSelecting || userSelectionActive);\n    return (jsxs(\"div\", { className: cc(['react-flow__pane', { dragging, selection: isSelecting }]), onClick: hasActiveSelection ? undefined : wrapHandler(onClick, container), onContextMenu: wrapHandler(onContextMenu, container), onWheel: wrapHandler(onWheel, container), onMouseEnter: hasActiveSelection ? undefined : onPaneMouseEnter, onMouseDown: hasActiveSelection ? onMouseDown : undefined, onMouseMove: hasActiveSelection ? onMouseMove : onPaneMouseMove, onMouseUp: hasActiveSelection ? onMouseUp : undefined, onMouseLeave: hasActiveSelection ? onMouseLeave : onPaneMouseLeave, ref: container, style: containerStyle, children: [children, jsx(UserSelection, {})] }));\n});\nPane.displayName = 'Pane';\n\nconst selector$7 = (s) => {\n    const selectedNodes = s.getNodes().filter((n) => n.selected);\n    return {\n        ...getRectOfNodes(selectedNodes, s.nodeOrigin),\n        transformString: `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`,\n        userSelectionActive: s.userSelectionActive,\n    };\n};\nfunction NodesSelection({ onSelectionContextMenu, noPanClassName, disableKeyboardA11y }) {\n    const store = useStoreApi();\n    const { width, height, x: left, y: top, transformString, userSelectionActive } = useStore(selector$7, shallow);\n    const updatePositions = useUpdateNodePositions();\n    const nodeRef = useRef(null);\n    useEffect(() => {\n        if (!disableKeyboardA11y) {\n            nodeRef.current?.focus({\n                preventScroll: true,\n            });\n        }\n    }, [disableKeyboardA11y]);\n    useDrag({\n        nodeRef,\n    });\n    if (userSelectionActive || !width || !height) {\n        return null;\n    }\n    const onContextMenu = onSelectionContextMenu\n        ? (event) => {\n            const selectedNodes = store\n                .getState()\n                .getNodes()\n                .filter((n) => n.selected);\n            onSelectionContextMenu(event, selectedNodes);\n        }\n        : undefined;\n    const onKeyDown = (event) => {\n        if (Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n            updatePositions({\n                x: arrowKeyDiffs[event.key].x,\n                y: arrowKeyDiffs[event.key].y,\n                isShiftPressed: event.shiftKey,\n            });\n        }\n    };\n    return (jsx(\"div\", { className: cc(['react-flow__nodesselection', 'react-flow__container', noPanClassName]), style: {\n            transform: transformString,\n        }, children: jsx(\"div\", { ref: nodeRef, className: \"react-flow__nodesselection-rect\", onContextMenu: onContextMenu, tabIndex: disableKeyboardA11y ? undefined : -1, onKeyDown: disableKeyboardA11y ? undefined : onKeyDown, style: {\n                width,\n                height,\n                top,\n                left,\n            } }) }));\n}\nvar NodesSelection$1 = memo(NodesSelection);\n\nconst selector$6 = (s) => s.nodesSelectionActive;\nconst FlowRenderer = ({ children, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneContextMenu, onPaneScroll, deleteKeyCode, onMove, onMoveStart, onMoveEnd, selectionKeyCode, selectionOnDrag, selectionMode, onSelectionStart, onSelectionEnd, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, elementsSelectable, zoomOnScroll, zoomOnPinch, panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag: _panOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, onSelectionContextMenu, noWheelClassName, noPanClassName, disableKeyboardA11y, }) => {\n    const nodesSelectionActive = useStore(selector$6);\n    const selectionKeyPressed = useKeyPress(selectionKeyCode);\n    const panActivationKeyPressed = useKeyPress(panActivationKeyCode);\n    const panOnDrag = panActivationKeyPressed || _panOnDrag;\n    const isSelecting = selectionKeyPressed || (selectionOnDrag && panOnDrag !== true);\n    useGlobalKeyHandler({ deleteKeyCode, multiSelectionKeyCode });\n    return (jsx(ZoomPane, { onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, onPaneContextMenu: onPaneContextMenu, elementsSelectable: elementsSelectable, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, zoomOnDoubleClick: zoomOnDoubleClick, panOnDrag: !selectionKeyPressed && panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, zoomActivationKeyCode: zoomActivationKeyCode, preventScrolling: preventScrolling, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, children: jsxs(Pane, { onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, panOnDrag: panOnDrag, isSelecting: !!isSelecting, selectionMode: selectionMode, children: [children, nodesSelectionActive && (jsx(NodesSelection$1, { onSelectionContextMenu: onSelectionContextMenu, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y }))] }) }));\n};\nFlowRenderer.displayName = 'FlowRenderer';\nvar FlowRenderer$1 = memo(FlowRenderer);\n\nfunction useVisibleNodes(onlyRenderVisible) {\n    const nodes = useStore(useCallback((s) => onlyRenderVisible\n        ? getNodesInside(s.nodeInternals, { x: 0, y: 0, width: s.width, height: s.height }, s.transform, true)\n        : s.getNodes(), [onlyRenderVisible]));\n    return nodes;\n}\n\nconst selector$5 = (s) => ({\n    nodesDraggable: s.nodesDraggable,\n    nodesConnectable: s.nodesConnectable,\n    nodesFocusable: s.nodesFocusable,\n    elementsSelectable: s.elementsSelectable,\n    updateNodeDimensions: s.updateNodeDimensions,\n    onError: s.onError,\n});\nconst NodeRenderer = (props) => {\n    const { nodesDraggable, nodesConnectable, nodesFocusable, elementsSelectable, updateNodeDimensions, onError } = useStore(selector$5, shallow);\n    const nodes = useVisibleNodes(props.onlyRenderVisibleElements);\n    const resizeObserverRef = useRef();\n    const resizeObserver = useMemo(() => {\n        if (typeof ResizeObserver === 'undefined') {\n            return null;\n        }\n        const observer = new ResizeObserver((entries) => {\n            const updates = entries.map((entry) => ({\n                id: entry.target.getAttribute('data-id'),\n                nodeElement: entry.target,\n                forceUpdate: true,\n            }));\n            updateNodeDimensions(updates);\n        });\n        resizeObserverRef.current = observer;\n        return observer;\n    }, []);\n    useEffect(() => {\n        return () => {\n            resizeObserverRef?.current?.disconnect();\n        };\n    }, []);\n    return (jsx(\"div\", { className: \"react-flow__nodes\", style: containerStyle, children: nodes.map((node) => {\n            let nodeType = node.type || 'default';\n            if (!props.nodeTypes[nodeType]) {\n                onError?.('003', errorMessages['error003'](nodeType));\n                nodeType = 'default';\n            }\n            const NodeComponent = (props.nodeTypes[nodeType] || props.nodeTypes.default);\n            const isDraggable = !!(node.draggable || (nodesDraggable && typeof node.draggable === 'undefined'));\n            const isSelectable = !!(node.selectable || (elementsSelectable && typeof node.selectable === 'undefined'));\n            const isConnectable = !!(node.connectable || (nodesConnectable && typeof node.connectable === 'undefined'));\n            const isFocusable = !!(node.focusable || (nodesFocusable && typeof node.focusable === 'undefined'));\n            const clampedPosition = props.nodeExtent\n                ? clampPosition(node.positionAbsolute, props.nodeExtent)\n                : node.positionAbsolute;\n            const posX = clampedPosition?.x ?? 0;\n            const posY = clampedPosition?.y ?? 0;\n            const posOrigin = getPositionWithOrigin({\n                x: posX,\n                y: posY,\n                width: node.width ?? 0,\n                height: node.height ?? 0,\n                origin: props.nodeOrigin,\n            });\n            return (jsx(NodeComponent, { id: node.id, className: node.className, style: node.style, type: nodeType, data: node.data, sourcePosition: node.sourcePosition || Position.Bottom, targetPosition: node.targetPosition || Position.Top, hidden: node.hidden, xPos: posX, yPos: posY, xPosOrigin: posOrigin.x, yPosOrigin: posOrigin.y, selectNodesOnDrag: props.selectNodesOnDrag, onClick: props.onNodeClick, onMouseEnter: props.onNodeMouseEnter, onMouseMove: props.onNodeMouseMove, onMouseLeave: props.onNodeMouseLeave, onContextMenu: props.onNodeContextMenu, onDoubleClick: props.onNodeDoubleClick, selected: !!node.selected, isDraggable: isDraggable, isSelectable: isSelectable, isConnectable: isConnectable, isFocusable: isFocusable, resizeObserver: resizeObserver, dragHandle: node.dragHandle, zIndex: node[internalsSymbol]?.z ?? 0, isParent: !!node[internalsSymbol]?.isParent, noDragClassName: props.noDragClassName, noPanClassName: props.noPanClassName, initialized: !!node.width && !!node.height, rfId: props.rfId, disableKeyboardA11y: props.disableKeyboardA11y, ariaLabel: node.ariaLabel }, node.id));\n        }) }));\n};\nNodeRenderer.displayName = 'NodeRenderer';\nvar NodeRenderer$1 = memo(NodeRenderer);\n\nconst defaultEdgeTree = [{ level: 0, isMaxLevel: true, edges: [] }];\nfunction groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect = false) {\n    let maxLevel = -1;\n    const levelLookup = edges.reduce((tree, edge) => {\n        const hasZIndex = isNumeric(edge.zIndex);\n        let z = hasZIndex ? edge.zIndex : 0;\n        if (elevateEdgesOnSelect) {\n            const targetNode = nodeInternals.get(edge.target);\n            const sourceNode = nodeInternals.get(edge.source);\n            const edgeOrConnectedNodeSelected = edge.selected || targetNode?.selected || sourceNode?.selected;\n            const selectedZIndex = Math.max(sourceNode?.[internalsSymbol]?.z || 0, targetNode?.[internalsSymbol]?.z || 0, 1000);\n            z = (hasZIndex ? edge.zIndex : 0) + (edgeOrConnectedNodeSelected ? selectedZIndex : 0);\n        }\n        if (tree[z]) {\n            tree[z].push(edge);\n        }\n        else {\n            tree[z] = [edge];\n        }\n        maxLevel = z > maxLevel ? z : maxLevel;\n        return tree;\n    }, {});\n    const edgeTree = Object.entries(levelLookup).map(([key, edges]) => {\n        const level = +key;\n        return {\n            edges,\n            level,\n            isMaxLevel: level === maxLevel,\n        };\n    });\n    if (edgeTree.length === 0) {\n        return defaultEdgeTree;\n    }\n    return edgeTree;\n}\nfunction useVisibleEdges(onlyRenderVisible, nodeInternals, elevateEdgesOnSelect) {\n    const edges = useStore(useCallback((s) => {\n        if (!onlyRenderVisible) {\n            return s.edges;\n        }\n        return s.edges.filter((e) => {\n            const sourceNode = nodeInternals.get(e.source);\n            const targetNode = nodeInternals.get(e.target);\n            return (sourceNode?.width &&\n                sourceNode?.height &&\n                targetNode?.width &&\n                targetNode?.height &&\n                isEdgeVisible({\n                    sourcePos: sourceNode.positionAbsolute || { x: 0, y: 0 },\n                    targetPos: targetNode.positionAbsolute || { x: 0, y: 0 },\n                    sourceWidth: sourceNode.width,\n                    sourceHeight: sourceNode.height,\n                    targetWidth: targetNode.width,\n                    targetHeight: targetNode.height,\n                    width: s.width,\n                    height: s.height,\n                    transform: s.transform,\n                }));\n        });\n    }, [onlyRenderVisible, nodeInternals]));\n    return groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect);\n}\n\nconst ArrowSymbol = ({ color = 'none', strokeWidth = 1 }) => {\n    return (jsx(\"polyline\", { stroke: color, strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: strokeWidth, fill: \"none\", points: \"-5,-4 0,0 -5,4\" }));\n};\nconst ArrowClosedSymbol = ({ color = 'none', strokeWidth = 1 }) => {\n    return (jsx(\"polyline\", { stroke: color, strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: strokeWidth, fill: color, points: \"-5,-4 0,0 -5,4 -5,-4\" }));\n};\nconst MarkerSymbols = {\n    [MarkerType.Arrow]: ArrowSymbol,\n    [MarkerType.ArrowClosed]: ArrowClosedSymbol,\n};\nfunction useMarkerSymbol(type) {\n    const store = useStoreApi();\n    const symbol = useMemo(() => {\n        const symbolExists = Object.prototype.hasOwnProperty.call(MarkerSymbols, type);\n        if (!symbolExists) {\n            store.getState().onError?.('009', errorMessages['error009'](type));\n            return null;\n        }\n        return MarkerSymbols[type];\n    }, [type]);\n    return symbol;\n}\n\nconst Marker = ({ id, type, color, width = 12.5, height = 12.5, markerUnits = 'strokeWidth', strokeWidth, orient = 'auto-start-reverse', }) => {\n    const Symbol = useMarkerSymbol(type);\n    if (!Symbol) {\n        return null;\n    }\n    return (jsx(\"marker\", { className: \"react-flow__arrowhead\", id: id, markerWidth: `${width}`, markerHeight: `${height}`, viewBox: \"-10 -10 20 20\", markerUnits: markerUnits, orient: orient, refX: \"0\", refY: \"0\", children: jsx(Symbol, { color: color, strokeWidth: strokeWidth }) }));\n};\nconst markerSelector = ({ defaultColor, rfId }) => (s) => {\n    const ids = [];\n    return s.edges\n        .reduce((markers, edge) => {\n        [edge.markerStart, edge.markerEnd].forEach((marker) => {\n            if (marker && typeof marker === 'object') {\n                const markerId = getMarkerId(marker, rfId);\n                if (!ids.includes(markerId)) {\n                    markers.push({ id: markerId, color: marker.color || defaultColor, ...marker });\n                    ids.push(markerId);\n                }\n            }\n        });\n        return markers;\n    }, [])\n        .sort((a, b) => a.id.localeCompare(b.id));\n};\n// when you have multiple flows on a page and you hide the first one, the other ones have no markers anymore\n// when they do have markers with the same ids. To prevent this the user can pass a unique id to the react flow wrapper\n// that we can then use for creating our unique marker ids\nconst MarkerDefinitions = ({ defaultColor, rfId }) => {\n    const markers = useStore(useCallback(markerSelector({ defaultColor, rfId }), [defaultColor, rfId]), \n    // the id includes all marker options, so we just need to look at that part of the marker\n    (a, b) => !(a.length !== b.length || a.some((m, i) => m.id !== b[i].id)));\n    return (jsx(\"defs\", { children: markers.map((marker) => (jsx(Marker, { id: marker.id, type: marker.type, color: marker.color, width: marker.width, height: marker.height, markerUnits: marker.markerUnits, strokeWidth: marker.strokeWidth, orient: marker.orient }, marker.id))) }));\n};\nMarkerDefinitions.displayName = 'MarkerDefinitions';\nvar MarkerDefinitions$1 = memo(MarkerDefinitions);\n\nconst selector$4 = (s) => ({\n    nodesConnectable: s.nodesConnectable,\n    edgesFocusable: s.edgesFocusable,\n    edgesUpdatable: s.edgesUpdatable,\n    elementsSelectable: s.elementsSelectable,\n    width: s.width,\n    height: s.height,\n    connectionMode: s.connectionMode,\n    nodeInternals: s.nodeInternals,\n    onError: s.onError,\n});\nconst EdgeRenderer = ({ defaultMarkerColor, onlyRenderVisibleElements, elevateEdgesOnSelect, rfId, edgeTypes, noPanClassName, onEdgeUpdate, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, onEdgeClick, edgeUpdaterRadius, onEdgeDoubleClick, onEdgeUpdateStart, onEdgeUpdateEnd, children, }) => {\n    const { edgesFocusable, edgesUpdatable, elementsSelectable, width, height, connectionMode, nodeInternals, onError } = useStore(selector$4, shallow);\n    const edgeTree = useVisibleEdges(onlyRenderVisibleElements, nodeInternals, elevateEdgesOnSelect);\n    if (!width) {\n        return null;\n    }\n    return (jsxs(Fragment, { children: [edgeTree.map(({ level, edges, isMaxLevel }) => (jsxs(\"svg\", { style: { zIndex: level }, width: width, height: height, className: \"react-flow__edges react-flow__container\", children: [isMaxLevel && jsx(MarkerDefinitions$1, { defaultColor: defaultMarkerColor, rfId: rfId }), jsx(\"g\", { children: edges.map((edge) => {\n                            const [sourceNodeRect, sourceHandleBounds, sourceIsValid] = getNodeData(nodeInternals.get(edge.source));\n                            const [targetNodeRect, targetHandleBounds, targetIsValid] = getNodeData(nodeInternals.get(edge.target));\n                            if (!sourceIsValid || !targetIsValid) {\n                                return null;\n                            }\n                            let edgeType = edge.type || 'default';\n                            if (!edgeTypes[edgeType]) {\n                                onError?.('011', errorMessages['error011'](edgeType));\n                                edgeType = 'default';\n                            }\n                            const EdgeComponent = edgeTypes[edgeType] || edgeTypes.default;\n                            // when connection type is loose we can define all handles as sources and connect source -> source\n                            const targetNodeHandles = connectionMode === ConnectionMode.Strict\n                                ? targetHandleBounds.target\n                                : (targetHandleBounds.target ?? []).concat(targetHandleBounds.source ?? []);\n                            const sourceHandle = getHandle(sourceHandleBounds.source, edge.sourceHandle);\n                            const targetHandle = getHandle(targetNodeHandles, edge.targetHandle);\n                            const sourcePosition = sourceHandle?.position || Position.Bottom;\n                            const targetPosition = targetHandle?.position || Position.Top;\n                            const isFocusable = !!(edge.focusable || (edgesFocusable && typeof edge.focusable === 'undefined'));\n                            const isUpdatable = typeof onEdgeUpdate !== 'undefined' &&\n                                (edge.updatable || (edgesUpdatable && typeof edge.updatable === 'undefined'));\n                            if (!sourceHandle || !targetHandle) {\n                                onError?.('008', errorMessages['error008'](sourceHandle, edge));\n                                return null;\n                            }\n                            const { sourceX, sourceY, targetX, targetY } = getEdgePositions(sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition);\n                            return (jsx(EdgeComponent, { id: edge.id, className: cc([edge.className, noPanClassName]), type: edgeType, data: edge.data, selected: !!edge.selected, animated: !!edge.animated, hidden: !!edge.hidden, label: edge.label, labelStyle: edge.labelStyle, labelShowBg: edge.labelShowBg, labelBgStyle: edge.labelBgStyle, labelBgPadding: edge.labelBgPadding, labelBgBorderRadius: edge.labelBgBorderRadius, style: edge.style, source: edge.source, target: edge.target, sourceHandleId: edge.sourceHandle, targetHandleId: edge.targetHandle, markerEnd: edge.markerEnd, markerStart: edge.markerStart, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, elementsSelectable: elementsSelectable, onEdgeUpdate: onEdgeUpdate, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onClick: onEdgeClick, edgeUpdaterRadius: edgeUpdaterRadius, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, rfId: rfId, ariaLabel: edge.ariaLabel, isFocusable: isFocusable, isUpdatable: isUpdatable, pathOptions: 'pathOptions' in edge ? edge.pathOptions : undefined, interactionWidth: edge.interactionWidth }, edge.id));\n                        }) })] }, level))), children] }));\n};\nEdgeRenderer.displayName = 'EdgeRenderer';\nvar EdgeRenderer$1 = memo(EdgeRenderer);\n\nconst selector$3 = (s) => `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`;\nfunction Viewport({ children }) {\n    const transform = useStore(selector$3);\n    return (jsx(\"div\", { className: \"react-flow__viewport react-flow__container\", style: { transform }, children: children }));\n}\n\nfunction useOnInitHandler(onInit) {\n    const rfInstance = useReactFlow();\n    const isInitialized = useRef(false);\n    useEffect(() => {\n        if (!isInitialized.current && rfInstance.viewportInitialized && onInit) {\n            setTimeout(() => onInit(rfInstance), 1);\n            isInitialized.current = true;\n        }\n    }, [onInit, rfInstance.viewportInitialized]);\n}\n\nconst oppositePosition = {\n    [Position.Left]: Position.Right,\n    [Position.Right]: Position.Left,\n    [Position.Top]: Position.Bottom,\n    [Position.Bottom]: Position.Top,\n};\nconst ConnectionLine = ({ nodeId, handleType, style, type = ConnectionLineType.Bezier, CustomComponent, connectionStatus, }) => {\n    const { fromNode, handleId, toX, toY, connectionMode } = useStore(useCallback((s) => ({\n        fromNode: s.nodeInternals.get(nodeId),\n        handleId: s.connectionHandleId,\n        toX: (s.connectionPosition.x - s.transform[0]) / s.transform[2],\n        toY: (s.connectionPosition.y - s.transform[1]) / s.transform[2],\n        connectionMode: s.connectionMode,\n    }), [nodeId]), shallow);\n    const fromHandleBounds = fromNode?.[internalsSymbol]?.handleBounds;\n    let handleBounds = fromHandleBounds?.[handleType];\n    if (connectionMode === ConnectionMode.Loose) {\n        handleBounds = handleBounds ? handleBounds : fromHandleBounds?.[handleType === 'source' ? 'target' : 'source'];\n    }\n    if (!fromNode || !handleBounds) {\n        return null;\n    }\n    const fromHandle = handleId ? handleBounds.find((d) => d.id === handleId) : handleBounds[0];\n    const fromHandleX = fromHandle ? fromHandle.x + fromHandle.width / 2 : (fromNode.width ?? 0) / 2;\n    const fromHandleY = fromHandle ? fromHandle.y + fromHandle.height / 2 : fromNode.height ?? 0;\n    const fromX = (fromNode.positionAbsolute?.x ?? 0) + fromHandleX;\n    const fromY = (fromNode.positionAbsolute?.y ?? 0) + fromHandleY;\n    const fromPosition = fromHandle?.position;\n    const toPosition = fromPosition ? oppositePosition[fromPosition] : null;\n    if (!fromPosition || !toPosition) {\n        return null;\n    }\n    if (CustomComponent) {\n        return (jsx(CustomComponent, { connectionLineType: type, connectionLineStyle: style, fromNode: fromNode, fromHandle: fromHandle, fromX: fromX, fromY: fromY, toX: toX, toY: toY, fromPosition: fromPosition, toPosition: toPosition, connectionStatus: connectionStatus }));\n    }\n    let dAttr = '';\n    const pathParams = {\n        sourceX: fromX,\n        sourceY: fromY,\n        sourcePosition: fromPosition,\n        targetX: toX,\n        targetY: toY,\n        targetPosition: toPosition,\n    };\n    if (type === ConnectionLineType.Bezier) {\n        // we assume the destination position is opposite to the source position\n        [dAttr] = getBezierPath(pathParams);\n    }\n    else if (type === ConnectionLineType.Step) {\n        [dAttr] = getSmoothStepPath({\n            ...pathParams,\n            borderRadius: 0,\n        });\n    }\n    else if (type === ConnectionLineType.SmoothStep) {\n        [dAttr] = getSmoothStepPath(pathParams);\n    }\n    else if (type === ConnectionLineType.SimpleBezier) {\n        [dAttr] = getSimpleBezierPath(pathParams);\n    }\n    else {\n        dAttr = `M${fromX},${fromY} ${toX},${toY}`;\n    }\n    return jsx(\"path\", { d: dAttr, fill: \"none\", className: \"react-flow__connection-path\", style: style });\n};\nConnectionLine.displayName = 'ConnectionLine';\nconst selector$2 = (s) => ({\n    nodeId: s.connectionNodeId,\n    handleType: s.connectionHandleType,\n    nodesConnectable: s.nodesConnectable,\n    connectionStatus: s.connectionStatus,\n    width: s.width,\n    height: s.height,\n});\nfunction ConnectionLineWrapper({ containerStyle, style, type, component }) {\n    const { nodeId, handleType, nodesConnectable, width, height, connectionStatus } = useStore(selector$2, shallow);\n    const isValid = !!(nodeId && handleType && width && nodesConnectable);\n    if (!isValid) {\n        return null;\n    }\n    return (jsx(\"svg\", { style: containerStyle, width: width, height: height, className: \"react-flow__edges react-flow__connectionline react-flow__container\", children: jsx(\"g\", { className: cc(['react-flow__connection', connectionStatus]), children: jsx(ConnectionLine, { nodeId: nodeId, handleType: handleType, style: style, type: type, CustomComponent: component, connectionStatus: connectionStatus }) }) }));\n}\n\nconst GraphView = ({ nodeTypes, edgeTypes, onMove, onMoveStart, onMoveEnd, onInit, onNodeClick, onEdgeClick, onNodeDoubleClick, onEdgeDoubleClick, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onSelectionContextMenu, onSelectionStart, onSelectionEnd, connectionLineType, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, selectionKeyCode, selectionOnDrag, selectionMode, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, deleteKeyCode, onlyRenderVisibleElements, elementsSelectable, selectNodesOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, defaultMarkerColor, zoomOnScroll, zoomOnPinch, panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, onEdgeUpdate, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, edgeUpdaterRadius, onEdgeUpdateStart, onEdgeUpdateEnd, noDragClassName, noWheelClassName, noPanClassName, elevateEdgesOnSelect, disableKeyboardA11y, nodeOrigin, nodeExtent, rfId, }) => {\n    useOnInitHandler(onInit);\n    return (jsx(FlowRenderer$1, { onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, deleteKeyCode: deleteKeyCode, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, elementsSelectable: elementsSelectable, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, onSelectionContextMenu: onSelectionContextMenu, preventScrolling: preventScrolling, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y, children: jsxs(Viewport, { children: [jsx(EdgeRenderer$1, { edgeTypes: edgeTypes, onEdgeClick: onEdgeClick, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeUpdate: onEdgeUpdate, onlyRenderVisibleElements: onlyRenderVisibleElements, onEdgeContextMenu: onEdgeContextMenu, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, edgeUpdaterRadius: edgeUpdaterRadius, defaultMarkerColor: defaultMarkerColor, noPanClassName: noPanClassName, elevateEdgesOnSelect: !!elevateEdgesOnSelect, disableKeyboardA11y: disableKeyboardA11y, rfId: rfId, children: jsx(ConnectionLineWrapper, { style: connectionLineStyle, type: connectionLineType, component: connectionLineComponent, containerStyle: connectionLineContainerStyle }) }), jsx(\"div\", { className: \"react-flow__edgelabel-renderer\" }), jsx(NodeRenderer$1, { nodeTypes: nodeTypes, onNodeClick: onNodeClick, onNodeDoubleClick: onNodeDoubleClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, selectNodesOnDrag: selectNodesOnDrag, onlyRenderVisibleElements: onlyRenderVisibleElements, noPanClassName: noPanClassName, noDragClassName: noDragClassName, disableKeyboardA11y: disableKeyboardA11y, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent, rfId: rfId })] }) }));\n};\nGraphView.displayName = 'GraphView';\nvar GraphView$1 = memo(GraphView);\n\nconst infiniteExtent = [\n    [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY],\n    [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY],\n];\nconst initialState = {\n    rfId: '1',\n    width: 0,\n    height: 0,\n    transform: [0, 0, 1],\n    nodeInternals: new Map(),\n    edges: [],\n    onNodesChange: null,\n    onEdgesChange: null,\n    hasDefaultNodes: false,\n    hasDefaultEdges: false,\n    d3Zoom: null,\n    d3Selection: null,\n    d3ZoomHandler: undefined,\n    minZoom: 0.5,\n    maxZoom: 2,\n    translateExtent: infiniteExtent,\n    nodeExtent: infiniteExtent,\n    nodesSelectionActive: false,\n    userSelectionActive: false,\n    userSelectionRect: null,\n    connectionNodeId: null,\n    connectionHandleId: null,\n    connectionHandleType: 'source',\n    connectionPosition: { x: 0, y: 0 },\n    connectionStatus: null,\n    connectionMode: ConnectionMode.Strict,\n    domNode: null,\n    paneDragging: false,\n    noPanClassName: 'nopan',\n    nodeOrigin: [0, 0],\n    snapGrid: [15, 15],\n    snapToGrid: false,\n    nodesDraggable: true,\n    nodesConnectable: true,\n    nodesFocusable: true,\n    edgesFocusable: true,\n    edgesUpdatable: true,\n    elementsSelectable: true,\n    elevateNodesOnSelect: true,\n    fitViewOnInit: false,\n    fitViewOnInitDone: false,\n    fitViewOnInitOptions: undefined,\n    multiSelectionActive: false,\n    connectionStartHandle: null,\n    connectionEndHandle: null,\n    connectionClickStartHandle: null,\n    connectOnClick: true,\n    ariaLiveMessage: '',\n    autoPanOnConnect: true,\n    autoPanOnNodeDrag: true,\n    connectionRadius: 20,\n    onError: devWarn,\n    isValidConnection: undefined,\n};\n\nconst createRFStore = () => createStore((set, get) => ({\n    ...initialState,\n    setNodes: (nodes) => {\n        const { nodeInternals, nodeOrigin, elevateNodesOnSelect } = get();\n        set({ nodeInternals: createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) });\n    },\n    getNodes: () => {\n        return Array.from(get().nodeInternals.values());\n    },\n    setEdges: (edges) => {\n        const { defaultEdgeOptions = {} } = get();\n        set({ edges: edges.map((e) => ({ ...defaultEdgeOptions, ...e })) });\n    },\n    setDefaultNodesAndEdges: (nodes, edges) => {\n        const hasDefaultNodes = typeof nodes !== 'undefined';\n        const hasDefaultEdges = typeof edges !== 'undefined';\n        const nodeInternals = hasDefaultNodes\n            ? createNodeInternals(nodes, new Map(), get().nodeOrigin, get().elevateNodesOnSelect)\n            : new Map();\n        const nextEdges = hasDefaultEdges ? edges : [];\n        set({ nodeInternals, edges: nextEdges, hasDefaultNodes, hasDefaultEdges });\n    },\n    updateNodeDimensions: (updates) => {\n        const { onNodesChange, nodeInternals, fitViewOnInit, fitViewOnInitDone, fitViewOnInitOptions, domNode, nodeOrigin, } = get();\n        const viewportNode = domNode?.querySelector('.react-flow__viewport');\n        if (!viewportNode) {\n            return;\n        }\n        const style = window.getComputedStyle(viewportNode);\n        const { m22: zoom } = new window.DOMMatrixReadOnly(style.transform);\n        const changes = updates.reduce((res, update) => {\n            const node = nodeInternals.get(update.id);\n            if (node) {\n                const dimensions = getDimensions(update.nodeElement);\n                const doUpdate = !!(dimensions.width &&\n                    dimensions.height &&\n                    (node.width !== dimensions.width || node.height !== dimensions.height || update.forceUpdate));\n                if (doUpdate) {\n                    nodeInternals.set(node.id, {\n                        ...node,\n                        [internalsSymbol]: {\n                            ...node[internalsSymbol],\n                            handleBounds: {\n                                source: getHandleBounds('.source', update.nodeElement, zoom, nodeOrigin),\n                                target: getHandleBounds('.target', update.nodeElement, zoom, nodeOrigin),\n                            },\n                        },\n                        ...dimensions,\n                    });\n                    res.push({\n                        id: node.id,\n                        type: 'dimensions',\n                        dimensions,\n                    });\n                }\n            }\n            return res;\n        }, []);\n        updateAbsoluteNodePositions(nodeInternals, nodeOrigin);\n        const nextFitViewOnInitDone = fitViewOnInitDone ||\n            (fitViewOnInit && !fitViewOnInitDone && fitView(get, { initial: true, ...fitViewOnInitOptions }));\n        set({ nodeInternals: new Map(nodeInternals), fitViewOnInitDone: nextFitViewOnInitDone });\n        if (changes?.length > 0) {\n            onNodesChange?.(changes);\n        }\n    },\n    updateNodePositions: (nodeDragItems, positionChanged = true, dragging = false) => {\n        const { triggerNodeChanges } = get();\n        const changes = nodeDragItems.map((node) => {\n            const change = {\n                id: node.id,\n                type: 'position',\n                dragging,\n            };\n            if (positionChanged) {\n                change.positionAbsolute = node.positionAbsolute;\n                change.position = node.position;\n            }\n            return change;\n        });\n        triggerNodeChanges(changes);\n    },\n    triggerNodeChanges: (changes) => {\n        const { onNodesChange, nodeInternals, hasDefaultNodes, nodeOrigin, getNodes, elevateNodesOnSelect } = get();\n        if (changes?.length) {\n            if (hasDefaultNodes) {\n                const nodes = applyNodeChanges(changes, getNodes());\n                const nextNodeInternals = createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect);\n                set({ nodeInternals: nextNodeInternals });\n            }\n            onNodesChange?.(changes);\n        }\n    },\n    addSelectedNodes: (selectedNodeIds) => {\n        const { multiSelectionActive, edges, getNodes } = get();\n        let changedNodes;\n        let changedEdges = null;\n        if (multiSelectionActive) {\n            changedNodes = selectedNodeIds.map((nodeId) => createSelectionChange(nodeId, true));\n        }\n        else {\n            changedNodes = getSelectionChanges(getNodes(), selectedNodeIds);\n            changedEdges = getSelectionChanges(edges, []);\n        }\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    addSelectedEdges: (selectedEdgeIds) => {\n        const { multiSelectionActive, edges, getNodes } = get();\n        let changedEdges;\n        let changedNodes = null;\n        if (multiSelectionActive) {\n            changedEdges = selectedEdgeIds.map((edgeId) => createSelectionChange(edgeId, true));\n        }\n        else {\n            changedEdges = getSelectionChanges(edges, selectedEdgeIds);\n            changedNodes = getSelectionChanges(getNodes(), []);\n        }\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    unselectNodesAndEdges: ({ nodes, edges } = {}) => {\n        const { edges: storeEdges, getNodes } = get();\n        const nodesToUnselect = nodes ? nodes : getNodes();\n        const edgesToUnselect = edges ? edges : storeEdges;\n        const changedNodes = nodesToUnselect.map((n) => {\n            n.selected = false;\n            return createSelectionChange(n.id, false);\n        });\n        const changedEdges = edgesToUnselect.map((edge) => createSelectionChange(edge.id, false));\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    setMinZoom: (minZoom) => {\n        const { d3Zoom, maxZoom } = get();\n        d3Zoom?.scaleExtent([minZoom, maxZoom]);\n        set({ minZoom });\n    },\n    setMaxZoom: (maxZoom) => {\n        const { d3Zoom, minZoom } = get();\n        d3Zoom?.scaleExtent([minZoom, maxZoom]);\n        set({ maxZoom });\n    },\n    setTranslateExtent: (translateExtent) => {\n        get().d3Zoom?.translateExtent(translateExtent);\n        set({ translateExtent });\n    },\n    resetSelectedElements: () => {\n        const { edges, getNodes } = get();\n        const nodes = getNodes();\n        const nodesToUnselect = nodes\n            .filter((e) => e.selected)\n            .map((n) => createSelectionChange(n.id, false));\n        const edgesToUnselect = edges\n            .filter((e) => e.selected)\n            .map((e) => createSelectionChange(e.id, false));\n        updateNodesAndEdgesSelections({\n            changedNodes: nodesToUnselect,\n            changedEdges: edgesToUnselect,\n            get,\n            set,\n        });\n    },\n    setNodeExtent: (nodeExtent) => {\n        const { nodeInternals } = get();\n        nodeInternals.forEach((node) => {\n            node.positionAbsolute = clampPosition(node.position, nodeExtent);\n        });\n        set({\n            nodeExtent,\n            nodeInternals: new Map(nodeInternals),\n        });\n    },\n    panBy: (delta) => {\n        const { transform, width, height, d3Zoom, d3Selection, translateExtent } = get();\n        if (!d3Zoom || !d3Selection || (!delta.x && !delta.y)) {\n            return false;\n        }\n        const nextTransform = zoomIdentity.translate(transform[0] + delta.x, transform[1] + delta.y).scale(transform[2]);\n        const extent = [\n            [0, 0],\n            [width, height],\n        ];\n        const constrainedTransform = d3Zoom?.constrain()(nextTransform, extent, translateExtent);\n        d3Zoom.transform(d3Selection, constrainedTransform);\n        const transformChanged = transform[0] !== constrainedTransform.x ||\n            transform[1] !== constrainedTransform.y ||\n            transform[2] !== constrainedTransform.k;\n        return transformChanged;\n    },\n    cancelConnection: () => set({\n        connectionNodeId: initialState.connectionNodeId,\n        connectionHandleId: initialState.connectionHandleId,\n        connectionHandleType: initialState.connectionHandleType,\n        connectionStatus: initialState.connectionStatus,\n        connectionStartHandle: initialState.connectionStartHandle,\n        connectionEndHandle: initialState.connectionEndHandle,\n    }),\n    reset: () => set({ ...initialState }),\n}));\n\nconst ReactFlowProvider = ({ children }) => {\n    const storeRef = useRef(null);\n    if (!storeRef.current) {\n        storeRef.current = createRFStore();\n    }\n    return jsx(Provider$1, { value: storeRef.current, children: children });\n};\nReactFlowProvider.displayName = 'ReactFlowProvider';\n\nconst Wrapper = ({ children }) => {\n    const isWrapped = useContext(StoreContext);\n    if (isWrapped) {\n        // we need to wrap it with a fragment because it's not allowed for children to be a ReactNode\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18051\n        return jsx(Fragment, { children: children });\n    }\n    return jsx(ReactFlowProvider, { children: children });\n};\nWrapper.displayName = 'ReactFlowWrapper';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useNodeOrEdgeTypes(nodeOrEdgeTypes, createTypes) {\n    const typesKeysRef = useRef(null);\n    const typesParsed = useMemo(() => {\n        if (process.env.NODE_ENV === 'development') {\n            const typeKeys = Object.keys(nodeOrEdgeTypes);\n            if (shallow(typesKeysRef.current, typeKeys)) {\n                devWarn('002', errorMessages['error002']());\n            }\n            typesKeysRef.current = typeKeys;\n        }\n        return createTypes(nodeOrEdgeTypes);\n    }, [nodeOrEdgeTypes]);\n    return typesParsed;\n}\n\nconst defaultNodeTypes = {\n    input: InputNode$1,\n    default: DefaultNode$1,\n    output: OutputNode$1,\n    group: GroupNode,\n};\nconst defaultEdgeTypes = {\n    default: BezierEdge,\n    straight: StraightEdge,\n    step: StepEdge,\n    smoothstep: SmoothStepEdge,\n    simplebezier: SimpleBezierEdge,\n};\nconst initNodeOrigin = [0, 0];\nconst initSnapGrid = [15, 15];\nconst initDefaultViewport = { x: 0, y: 0, zoom: 1 };\nconst wrapperStyle = {\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden',\n    position: 'relative',\n    zIndex: 0,\n};\nconst ReactFlow = forwardRef(({ nodes, edges, defaultNodes, defaultEdges, className, nodeTypes = defaultNodeTypes, edgeTypes = defaultEdgeTypes, onNodeClick, onEdgeClick, onInit, onMove, onMoveStart, onMoveEnd, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onNodeDoubleClick, onNodeDragStart, onNodeDrag, onNodeDragStop, onNodesDelete, onEdgesDelete, onSelectionChange, onSelectionDragStart, onSelectionDrag, onSelectionDragStop, onSelectionContextMenu, onSelectionStart, onSelectionEnd, connectionMode = ConnectionMode.Strict, connectionLineType = ConnectionLineType.Bezier, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, deleteKeyCode = 'Backspace', selectionKeyCode = 'Shift', selectionOnDrag = false, selectionMode = SelectionMode.Full, panActivationKeyCode = 'Space', multiSelectionKeyCode = 'Meta', zoomActivationKeyCode = 'Meta', snapToGrid = false, snapGrid = initSnapGrid, onlyRenderVisibleElements = false, selectNodesOnDrag = true, nodesDraggable, nodesConnectable, nodesFocusable, nodeOrigin = initNodeOrigin, edgesFocusable, edgesUpdatable, elementsSelectable, defaultViewport = initDefaultViewport, minZoom = 0.5, maxZoom = 2, translateExtent = infiniteExtent, preventScrolling = true, nodeExtent, defaultMarkerColor = '#b1b1b7', zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, panOnDrag = true, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, children, onEdgeUpdate, onEdgeContextMenu, onEdgeDoubleClick, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, onEdgeUpdateStart, onEdgeUpdateEnd, edgeUpdaterRadius = 10, onNodesChange, onEdgesChange, noDragClassName = 'nodrag', noWheelClassName = 'nowheel', noPanClassName = 'nopan', fitView = false, fitViewOptions, connectOnClick = true, attributionPosition, proOptions, defaultEdgeOptions, elevateNodesOnSelect = true, elevateEdgesOnSelect = false, disableKeyboardA11y = false, autoPanOnConnect = true, autoPanOnNodeDrag = true, connectionRadius = 20, isValidConnection, onError, style, id, ...rest }, ref) => {\n    const nodeTypesWrapped = useNodeOrEdgeTypes(nodeTypes, createNodeTypes);\n    const edgeTypesWrapped = useNodeOrEdgeTypes(edgeTypes, createEdgeTypes);\n    const rfId = id || '1';\n    return (jsx(\"div\", { ...rest, style: { ...style, ...wrapperStyle }, ref: ref, className: cc(['react-flow', className]), \"data-testid\": \"rf__wrapper\", id: id, children: jsxs(Wrapper, { children: [jsx(GraphView$1, { onInit: onInit, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, onNodeClick: onNodeClick, onEdgeClick: onEdgeClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, onNodeDoubleClick: onNodeDoubleClick, nodeTypes: nodeTypesWrapped, edgeTypes: edgeTypesWrapped, connectionLineType: connectionLineType, connectionLineStyle: connectionLineStyle, connectionLineComponent: connectionLineComponent, connectionLineContainerStyle: connectionLineContainerStyle, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, deleteKeyCode: deleteKeyCode, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, onlyRenderVisibleElements: onlyRenderVisibleElements, selectNodesOnDrag: selectNodesOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, preventScrolling: preventScrolling, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneScroll: onPaneScroll, onPaneContextMenu: onPaneContextMenu, onSelectionContextMenu: onSelectionContextMenu, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onEdgeUpdate: onEdgeUpdate, onEdgeContextMenu: onEdgeContextMenu, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, edgeUpdaterRadius: edgeUpdaterRadius, defaultMarkerColor: defaultMarkerColor, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, elevateEdgesOnSelect: elevateEdgesOnSelect, rfId: rfId, disableKeyboardA11y: disableKeyboardA11y, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent }), jsx(StoreUpdater, { nodes: nodes, edges: edges, defaultNodes: defaultNodes, defaultEdges: defaultEdges, onConnect: onConnect, onConnectStart: onConnectStart, onConnectEnd: onConnectEnd, onClickConnectStart: onClickConnectStart, onClickConnectEnd: onClickConnectEnd, nodesDraggable: nodesDraggable, nodesConnectable: nodesConnectable, nodesFocusable: nodesFocusable, edgesFocusable: edgesFocusable, edgesUpdatable: edgesUpdatable, elementsSelectable: elementsSelectable, elevateNodesOnSelect: elevateNodesOnSelect, minZoom: minZoom, maxZoom: maxZoom, nodeExtent: nodeExtent, onNodesChange: onNodesChange, onEdgesChange: onEdgesChange, snapToGrid: snapToGrid, snapGrid: snapGrid, connectionMode: connectionMode, translateExtent: translateExtent, connectOnClick: connectOnClick, defaultEdgeOptions: defaultEdgeOptions, fitView: fitView, fitViewOptions: fitViewOptions, onNodesDelete: onNodesDelete, onEdgesDelete: onEdgesDelete, onNodeDragStart: onNodeDragStart, onNodeDrag: onNodeDrag, onNodeDragStop: onNodeDragStop, onSelectionDrag: onSelectionDrag, onSelectionDragStart: onSelectionDragStart, onSelectionDragStop: onSelectionDragStop, noPanClassName: noPanClassName, nodeOrigin: nodeOrigin, rfId: rfId, autoPanOnConnect: autoPanOnConnect, autoPanOnNodeDrag: autoPanOnNodeDrag, onError: onError, connectionRadius: connectionRadius, isValidConnection: isValidConnection }), jsx(Wrapper$1, { onSelectionChange: onSelectionChange }), children, jsx(Attribution, { proOptions: proOptions, position: attributionPosition }), jsx(A11yDescriptions, { rfId: rfId, disableKeyboardA11y: disableKeyboardA11y })] }) }));\n});\nReactFlow.displayName = 'ReactFlow';\n\nconst selector$1 = (s) => s.domNode?.querySelector('.react-flow__edgelabel-renderer');\nfunction EdgeLabelRenderer({ children }) {\n    const edgeLabelRenderer = useStore(selector$1);\n    if (!edgeLabelRenderer) {\n        return null;\n    }\n    return createPortal(children, edgeLabelRenderer);\n}\n\nfunction useUpdateNodeInternals() {\n    const store = useStoreApi();\n    return useCallback((id) => {\n        const { domNode, updateNodeDimensions } = store.getState();\n        const updateIds = Array.isArray(id) ? id : [id];\n        const updates = updateIds.reduce((res, updateId) => {\n            const nodeElement = domNode?.querySelector(`.react-flow__node[data-id=\"${updateId}\"]`);\n            if (nodeElement) {\n                res.push({ id: updateId, nodeElement, forceUpdate: true });\n            }\n            return res;\n        }, []);\n        requestAnimationFrame(() => updateNodeDimensions(updates));\n    }, []);\n}\n\nconst nodesSelector = (state) => state.getNodes();\nfunction useNodes() {\n    const nodes = useStore(nodesSelector, shallow);\n    return nodes;\n}\n\nconst edgesSelector = (state) => state.edges;\nfunction useEdges() {\n    const edges = useStore(edgesSelector, shallow);\n    return edges;\n}\n\nconst viewportSelector = (state) => ({\n    x: state.transform[0],\n    y: state.transform[1],\n    zoom: state.transform[2],\n});\nfunction useViewport() {\n    const viewport = useStore(viewportSelector, shallow);\n    return viewport;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction createUseItemsState(applyChanges) {\n    return (initialItems) => {\n        const [items, setItems] = useState(initialItems);\n        const onItemsChange = useCallback((changes) => setItems((items) => applyChanges(changes, items)), []);\n        return [items, setItems, onItemsChange];\n    };\n}\nconst useNodesState = createUseItemsState(applyNodeChanges);\nconst useEdgesState = createUseItemsState(applyEdgeChanges);\n\nfunction useOnViewportChange({ onStart, onChange, onEnd }) {\n    const store = useStoreApi();\n    useEffect(() => {\n        store.setState({ onViewportChangeStart: onStart });\n    }, [onStart]);\n    useEffect(() => {\n        store.setState({ onViewportChange: onChange });\n    }, [onChange]);\n    useEffect(() => {\n        store.setState({ onViewportChangeEnd: onEnd });\n    }, [onEnd]);\n}\n\nfunction useOnSelectionChange({ onChange }) {\n    const store = useStoreApi();\n    useEffect(() => {\n        store.setState({ onSelectionChange: onChange });\n    }, [onChange]);\n}\n\nconst selector = (options) => (s) => {\n    if (s.nodeInternals.size === 0) {\n        return false;\n    }\n    return s\n        .getNodes()\n        .filter((n) => (options.includeHiddenNodes ? true : !n.hidden))\n        .every((n) => n[internalsSymbol]?.handleBounds !== undefined);\n};\nconst defaultOptions = {\n    includeHiddenNodes: false,\n};\nfunction useNodesInitialized(options = defaultOptions) {\n    const initialized = useStore(selector(options));\n    return initialized;\n}\n\nexport { BaseEdge, BezierEdge, ConnectionLineType, ConnectionMode, EdgeLabelRenderer, EdgeText$1 as EdgeText, Handle$1 as Handle, MarkerType, PanOnScrollMode, Panel, Position, ReactFlow, ReactFlowProvider, SelectionMode, SimpleBezierEdge, SmoothStepEdge, StepEdge, StraightEdge, addEdge, applyEdgeChanges, applyNodeChanges, boxToRect, clamp, getBezierPath, getBoundsOfRects, getConnectedEdges, getIncomers, getMarkerEnd, getNodePositionWithOrigin, getOutgoers, getRectOfNodes, getSimpleBezierPath, getSmoothStepPath, getStraightPath, getTransformForBounds, internalsSymbol, isEdge, isNode, rectToBox, updateEdge, useEdges, useEdgesState, useGetPointerPosition, useKeyPress, useNodeId, useNodes, useNodesInitialized, useNodesState, useOnSelectionChange, useOnViewportChange, useReactFlow, useStore, useStoreApi, useUpdateNodeInternals, useViewport };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}