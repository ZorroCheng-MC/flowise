{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"changeReason\", \"unstable_updateValueOnRender\"],\n  _excluded2 = [\"align\", \"children\", \"editCellState\", \"colIndex\", \"column\", \"cellMode\", \"field\", \"formattedValue\", \"hasFocus\", \"height\", \"isEditable\", \"isSelected\", \"rowId\", \"tabIndex\", \"value\", \"width\", \"className\", \"showRightBorder\", \"extendRowFullWidth\", \"row\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded3 = [\"column\", \"rowId\", \"editCellState\", \"align\", \"children\", \"colIndex\", \"height\", \"width\", \"className\", \"showRightBorder\", \"extendRowFullWidth\", \"row\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded4 = [\"changeReason\", \"unstable_updateValueOnRender\"];\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { doesSupportPreventScroll } from '../../utils/doesSupportPreventScroll';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { GridCellModes } from '../../models';\nimport { useGridSelector, objectShallowCompare } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridFocusCellSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { MissingRowIdError } from '../../hooks/features/rows/useGridParamsApi';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar EMPTY_CELL_PARAMS = {\n  id: -1,\n  field: '__unset__',\n  row: {},\n  rowNode: {\n    id: -1,\n    depth: 0,\n    type: 'leaf',\n    parent: -1,\n    groupingKey: null\n  },\n  colDef: {\n    type: 'string',\n    field: '__unset__',\n    computedWidth: 0\n  },\n  cellMode: GridCellModes.View,\n  hasFocus: false,\n  tabIndex: -1,\n  value: null,\n  formattedValue: '__unset__',\n  isEditable: false,\n  api: {}\n};\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var align = ownerState.align,\n    showRightBorder = ownerState.showRightBorder,\n    isEditable = ownerState.isEditable,\n    isSelected = ownerState.isSelected,\n    classes = ownerState.classes;\n  var slots = {\n    root: ['cell', \"cell--text\".concat(capitalize(align)), isEditable && 'cell--editable', isSelected && 'selected', showRightBorder && 'cell--withRightBorder', 'withBorderColor'],\n    content: ['cellContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nvar warnedOnce = false;\n\n// GridCellWrapper is a compatibility layer for the V6 cell slot. If we can use the more efficient\n// `GridCellV7`, we should. That component is a merge of `GridCellWrapper` and `GridCell`.\n// TODO(v7): Remove the wrapper & cellV6 and use the cellV7 exclusively.\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\nvar GridCellWrapper = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var column = props.column,\n    rowId = props.rowId,\n    editCellState = props.editCellState;\n  var apiRef = useGridApiContext();\n  var rootProps = useGridRootProps();\n  var field = column.field;\n  var cellParamsWithAPI = useGridSelector(apiRef, function () {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      var cellParams = apiRef.current.getCellParams(rowId, field);\n      var result = cellParams;\n      result.api = apiRef.current;\n      return result;\n    } catch (e) {\n      if (e instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw e;\n    }\n  }, objectShallowCompare);\n  var isSelected = useGridSelector(apiRef, function () {\n    return apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n      id: rowId,\n      field: field\n    });\n  });\n  if (cellParamsWithAPI === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  var cellMode = cellParamsWithAPI.cellMode,\n    hasFocus = cellParamsWithAPI.hasFocus,\n    isEditable = cellParamsWithAPI.isEditable,\n    value = cellParamsWithAPI.value,\n    formattedValue = cellParamsWithAPI.formattedValue;\n  var managesOwnFocus = column.type === 'actions';\n  var tabIndex = (cellMode === 'view' || !isEditable) && !managesOwnFocus ? cellParamsWithAPI.tabIndex : -1;\n  var rootClasses = rootProps.classes,\n    getCellClassName = rootProps.getCellClassName;\n  var classNames = apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field: field\n  });\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParamsWithAPI) : column.cellClassName);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParamsWithAPI));\n  }\n  var children;\n  if (editCellState == null && column.renderCell) {\n    children = column.renderCell(cellParamsWithAPI);\n    classNames.push(gridClasses['cell--withRenderer']);\n    classNames.push(rootClasses == null ? void 0 : rootClasses['cell--withRenderer']);\n  }\n  if (editCellState != null && column.renderEditCell) {\n    var updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    var editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded);\n    var params = _extends({}, cellParamsWithAPI, {\n      row: updatedRow\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses == null ? void 0 : rootClasses['cell--editing']);\n  }\n  var slots = rootProps.slots;\n  var CellComponent = slots.cell;\n  var cellProps = _extends({}, props, {\n    ref: ref,\n    field: field,\n    formattedValue: formattedValue,\n    hasFocus: hasFocus,\n    isEditable: isEditable,\n    isSelected: isSelected,\n    value: value,\n    cellMode: cellMode,\n    children: children,\n    tabIndex: tabIndex,\n    className: clsx(classNames)\n  });\n  return /*#__PURE__*/React.createElement(CellComponent, cellProps);\n});\nvar GridCell = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _rootProps$experiment;\n  var align = props.align,\n    childrenProp = props.children,\n    colIndex = props.colIndex,\n    column = props.column,\n    cellMode = props.cellMode,\n    field = props.field,\n    formattedValue = props.formattedValue,\n    hasFocus = props.hasFocus,\n    height = props.height,\n    isEditable = props.isEditable,\n    isSelected = props.isSelected,\n    rowId = props.rowId,\n    tabIndex = props.tabIndex,\n    value = props.value,\n    width = props.width,\n    className = props.className,\n    showRightBorder = props.showRightBorder,\n    colSpan = props.colSpan,\n    disableDragEvents = props.disableDragEvents,\n    isNotVisible = props.isNotVisible,\n    onClick = props.onClick,\n    onDoubleClick = props.onDoubleClick,\n    onMouseDown = props.onMouseDown,\n    onMouseUp = props.onMouseUp,\n    onMouseOver = props.onMouseOver,\n    onKeyDown = props.onKeyDown,\n    onKeyUp = props.onKeyUp,\n    onDragEnter = props.onDragEnter,\n    onDragOver = props.onDragOver,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  var valueToRender = formattedValue == null ? value : formattedValue;\n  var cellRef = React.useRef(null);\n  var handleRef = useForkRef(ref, cellRef);\n  var focusElementRef = React.useRef(null);\n  var apiRef = useGridApiContext();\n  var rootProps = useGridRootProps();\n  var ownerState = {\n    align: align,\n    showRightBorder: showRightBorder,\n    isEditable: isEditable,\n    classes: rootProps.classes,\n    isSelected: isSelected\n  };\n  var classes = useUtilityClasses(ownerState);\n  var publishMouseUp = React.useCallback(function (eventName) {\n    return function (event) {\n      var params = apiRef.current.getCellParams(rowId, field || '');\n      apiRef.current.publishEvent(eventName, params, event);\n      if (onMouseUp) {\n        onMouseUp(event);\n      }\n    };\n  }, [apiRef, field, onMouseUp, rowId]);\n  var publishMouseDown = React.useCallback(function (eventName) {\n    return function (event) {\n      var params = apiRef.current.getCellParams(rowId, field || '');\n      apiRef.current.publishEvent(eventName, params, event);\n      if (onMouseDown) {\n        onMouseDown(event);\n      }\n    };\n  }, [apiRef, field, onMouseDown, rowId]);\n  var publish = React.useCallback(function (eventName, propHandler) {\n    return function (event) {\n      // The row might have been deleted during the click\n      if (!apiRef.current.getRow(rowId)) {\n        return;\n      }\n      var params = apiRef.current.getCellParams(rowId, field || '');\n      apiRef.current.publishEvent(eventName, params, event);\n      if (propHandler) {\n        propHandler(event);\n      }\n    };\n  }, [apiRef, field, rowId]);\n  var style = React.useMemo(function () {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0\n      };\n    }\n    var cellStyle = {\n      minWidth: width,\n      maxWidth: width,\n      minHeight: height,\n      maxHeight: height === 'auto' ? 'none' : height // max-height doesn't support \"auto\"\n    };\n\n    return cellStyle;\n  }, [width, height, isNotVisible]);\n  React.useEffect(function () {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    var doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      var focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      var elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        var scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  var handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && (_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.warnIfFocusStateIsNotSynced) {\n    handleFocus = function handleFocus(event) {\n      var focusedCell = gridFocusCellSelector(apiRef);\n      if ((focusedCell == null ? void 0 : focusedCell.id) === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([\"MUI: The cell with id=\".concat(rowId, \" and field=\").concat(field, \" received focus.\"), \"According to the state, the focus should be at id=\".concat(focusedCell == null ? void 0 : focusedCell.id, \", field=\").concat(focusedCell == null ? void 0 : focusedCell.field, \".\"), \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  var managesOwnFocus = column.type === 'actions';\n  var children = childrenProp;\n  if (children === undefined) {\n    var valueString = valueToRender == null ? void 0 : valueToRender.toString();\n    children = /*#__PURE__*/_jsx(\"div\", {\n      className: classes.content,\n      title: valueString,\n      children: valueString\n    });\n  }\n  if ( /*#__PURE__*/React.isValidElement(children) && managesOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef: focusElementRef\n    });\n  }\n  var draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(className, classes.root),\n    role: \"cell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    style: style,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: children\n  }));\n});\nvar MemoizedCellWrapper = fastMemo(GridCellWrapper);\nprocess.env.NODE_ENV !== \"production\" ? GridCellWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']),\n  className: PropTypes.string,\n  colIndex: PropTypes.number,\n  colSpan: PropTypes.number,\n  column: PropTypes.object,\n  disableDragEvents: PropTypes.bool,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  showRightBorder: PropTypes.bool,\n  width: PropTypes.number\n} : void 0;\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']),\n  cellMode: PropTypes.oneOf(['edit', 'view']),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  colIndex: PropTypes.number,\n  colSpan: PropTypes.number,\n  column: PropTypes.object,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  isNotVisible: PropTypes.bool,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  showRightBorder: PropTypes.bool,\n  width: PropTypes.number\n} : void 0;\nexport { MemoizedCellWrapper as GridCellWrapper, GridCell };\nvar GridCellV7 = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _rootProps$experiment2;\n  var column = props.column,\n    rowId = props.rowId,\n    editCellState = props.editCellState,\n    align = props.align,\n    colIndex = props.colIndex,\n    height = props.height,\n    width = props.width,\n    className = props.className,\n    showRightBorder = props.showRightBorder,\n    colSpan = props.colSpan,\n    disableDragEvents = props.disableDragEvents,\n    isNotVisible = props.isNotVisible,\n    onClick = props.onClick,\n    onDoubleClick = props.onDoubleClick,\n    onMouseDown = props.onMouseDown,\n    onMouseUp = props.onMouseUp,\n    onMouseOver = props.onMouseOver,\n    onKeyDown = props.onKeyDown,\n    onKeyUp = props.onKeyUp,\n    onDragEnter = props.onDragEnter,\n    onDragOver = props.onDragOver,\n    other = _objectWithoutPropertiesLoose(props, _excluded3);\n  var apiRef = useGridApiContext();\n  var rootProps = useGridRootProps();\n  var field = column.field;\n  var cellParamsWithAPI = useGridSelector(apiRef, function () {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      var cellParams = apiRef.current.getCellParams(rowId, field);\n      var result = cellParams;\n      result.api = apiRef.current;\n      return result;\n    } catch (e) {\n      if (e instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw e;\n    }\n  }, objectShallowCompare);\n  var isSelected = useGridSelector(apiRef, function () {\n    return apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n      id: rowId,\n      field: field\n    });\n  });\n  var cellMode = cellParamsWithAPI.cellMode,\n    hasFocus = cellParamsWithAPI.hasFocus,\n    isEditable = cellParamsWithAPI.isEditable,\n    value = cellParamsWithAPI.value,\n    formattedValue = cellParamsWithAPI.formattedValue;\n  var managesOwnFocus = column.type === 'actions';\n  var tabIndex = (cellMode === 'view' || !isEditable) && !managesOwnFocus ? cellParamsWithAPI.tabIndex : -1;\n  var rootClasses = rootProps.classes,\n    getCellClassName = rootProps.getCellClassName;\n  var classNames = apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field: field\n  });\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParamsWithAPI) : column.cellClassName);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParamsWithAPI));\n  }\n  var valueToRender = formattedValue == null ? value : formattedValue;\n  var cellRef = React.useRef(null);\n  var handleRef = useForkRef(ref, cellRef);\n  var focusElementRef = React.useRef(null);\n  var ownerState = {\n    align: align,\n    showRightBorder: showRightBorder,\n    isEditable: isEditable,\n    classes: rootProps.classes,\n    isSelected: isSelected\n  };\n  var classes = useUtilityClasses(ownerState);\n  var publishMouseUp = React.useCallback(function (eventName) {\n    return function (event) {\n      var params = apiRef.current.getCellParams(rowId, field || '');\n      apiRef.current.publishEvent(eventName, params, event);\n      if (onMouseUp) {\n        onMouseUp(event);\n      }\n    };\n  }, [apiRef, field, onMouseUp, rowId]);\n  var publishMouseDown = React.useCallback(function (eventName) {\n    return function (event) {\n      var params = apiRef.current.getCellParams(rowId, field || '');\n      apiRef.current.publishEvent(eventName, params, event);\n      if (onMouseDown) {\n        onMouseDown(event);\n      }\n    };\n  }, [apiRef, field, onMouseDown, rowId]);\n  var publish = React.useCallback(function (eventName, propHandler) {\n    return function (event) {\n      // The row might have been deleted during the click\n      if (!apiRef.current.getRow(rowId)) {\n        return;\n      }\n      var params = apiRef.current.getCellParams(rowId, field || '');\n      apiRef.current.publishEvent(eventName, params, event);\n      if (propHandler) {\n        propHandler(event);\n      }\n    };\n  }, [apiRef, field, rowId]);\n  var style = React.useMemo(function () {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0\n      };\n    }\n    var cellStyle = {\n      minWidth: width,\n      maxWidth: width,\n      minHeight: height,\n      maxHeight: height === 'auto' ? 'none' : height // max-height doesn't support \"auto\"\n    };\n\n    return cellStyle;\n  }, [width, height, isNotVisible]);\n  React.useEffect(function () {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    var doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      var focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      var elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        var scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (cellParamsWithAPI === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  var handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && (_rootProps$experiment2 = rootProps.experimentalFeatures) != null && _rootProps$experiment2.warnIfFocusStateIsNotSynced) {\n    handleFocus = function handleFocus(event) {\n      var focusedCell = gridFocusCellSelector(apiRef);\n      if ((focusedCell == null ? void 0 : focusedCell.id) === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([\"MUI: The cell with id=\".concat(rowId, \" and field=\").concat(field, \" received focus.\"), \"According to the state, the focus should be at id=\".concat(focusedCell == null ? void 0 : focusedCell.id, \", field=\").concat(focusedCell == null ? void 0 : focusedCell.field, \".\"), \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  var children;\n  if (editCellState == null && column.renderCell) {\n    children = column.renderCell(cellParamsWithAPI);\n    classNames.push(gridClasses['cell--withRenderer']);\n    classNames.push(rootClasses == null ? void 0 : rootClasses['cell--withRenderer']);\n  }\n  if (editCellState != null && column.renderEditCell) {\n    var updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    var editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded4);\n    var params = _extends({}, cellParamsWithAPI, {\n      row: updatedRow\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses == null ? void 0 : rootClasses['cell--editing']);\n  }\n  if (children === undefined) {\n    var valueString = valueToRender == null ? void 0 : valueToRender.toString();\n    children = /*#__PURE__*/_jsx(\"div\", {\n      className: classes.content,\n      title: valueString,\n      children: valueString\n    });\n  }\n  if ( /*#__PURE__*/React.isValidElement(children) && managesOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef: focusElementRef\n    });\n  }\n  var draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(className, classNames, classes.root),\n    role: \"cell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    style: style,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellV7.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  isNotVisible: PropTypes.bool,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  showRightBorder: PropTypes.bool,\n  width: PropTypes.number.isRequired\n} : void 0;\nvar MemoizedGridCellV7 = fastMemo(GridCellV7);\nexport { MemoizedGridCellV7 as GridCellV7 };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","_excluded3","_excluded4","React","PropTypes","clsx","unstable_useForkRef","useForkRef","unstable_composeClasses","composeClasses","unstable_ownerDocument","ownerDocument","unstable_capitalize","capitalize","fastMemo","doesSupportPreventScroll","getDataGridUtilityClass","gridClasses","GridCellModes","useGridSelector","objectShallowCompare","useGridApiContext","useGridRootProps","gridFocusCellSelector","MissingRowIdError","jsx","_jsx","EMPTY_CELL_PARAMS","id","field","row","rowNode","depth","type","parent","groupingKey","colDef","computedWidth","cellMode","View","hasFocus","tabIndex","value","formattedValue","isEditable","api","useUtilityClasses","ownerState","align","showRightBorder","isSelected","classes","slots","root","concat","content","warnedOnce","GridCellWrapper","forwardRef","props","ref","column","rowId","editCellState","apiRef","rootProps","cellParamsWithAPI","cellParams","current","getCellParams","result","e","unstable_applyPipeProcessors","managesOwnFocus","rootClasses","getCellClassName","classNames","cellClassName","push","children","renderCell","renderEditCell","updatedRow","getRowWithUpdatedValues","editCellStateRest","params","CellComponent","cell","cellProps","className","createElement","GridCell","_rootProps$experiment","childrenProp","colIndex","height","width","colSpan","disableDragEvents","isNotVisible","onClick","onDoubleClick","onMouseDown","onMouseUp","onMouseOver","onKeyDown","onKeyUp","onDragEnter","onDragOver","other","valueToRender","cellRef","useRef","handleRef","focusElementRef","publishMouseUp","useCallback","eventName","event","publishEvent","publishMouseDown","publish","propHandler","getRow","style","useMemo","padding","opacity","cellStyle","minWidth","maxWidth","minHeight","maxHeight","useEffect","Edit","doc","rootElementRef","contains","activeElement","focusableElement","querySelector","elementToFocus","focus","preventScroll","scrollPosition","getScrollPosition","scroll","handleFocus","onFocus","process","env","NODE_ENV","experimentalFeatures","warnIfFocusStateIsNotSynced","focusedCell","console","warn","join","undefined","valueString","toString","title","isValidElement","cloneElement","draggableEventHandlers","role","MemoizedCellWrapper","propTypes","oneOf","string","number","object","bool","oneOfType","func","node","shape","changeReason","isProcessingProps","isValidating","any","GridCellV7","_rootProps$experiment2","isRequired","MemoizedGridCellV7"],"sources":["/Users/zorro/Downloads/Flowise/node_modules/@mui/x-data-grid/components/cell/GridCell.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"changeReason\", \"unstable_updateValueOnRender\"],\n  _excluded2 = [\"align\", \"children\", \"editCellState\", \"colIndex\", \"column\", \"cellMode\", \"field\", \"formattedValue\", \"hasFocus\", \"height\", \"isEditable\", \"isSelected\", \"rowId\", \"tabIndex\", \"value\", \"width\", \"className\", \"showRightBorder\", \"extendRowFullWidth\", \"row\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded3 = [\"column\", \"rowId\", \"editCellState\", \"align\", \"children\", \"colIndex\", \"height\", \"width\", \"className\", \"showRightBorder\", \"extendRowFullWidth\", \"row\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded4 = [\"changeReason\", \"unstable_updateValueOnRender\"];\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { doesSupportPreventScroll } from '../../utils/doesSupportPreventScroll';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { GridCellModes } from '../../models';\nimport { useGridSelector, objectShallowCompare } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridFocusCellSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { MissingRowIdError } from '../../hooks/features/rows/useGridParamsApi';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_CELL_PARAMS = {\n  id: -1,\n  field: '__unset__',\n  row: {},\n  rowNode: {\n    id: -1,\n    depth: 0,\n    type: 'leaf',\n    parent: -1,\n    groupingKey: null\n  },\n  colDef: {\n    type: 'string',\n    field: '__unset__',\n    computedWidth: 0\n  },\n  cellMode: GridCellModes.View,\n  hasFocus: false,\n  tabIndex: -1,\n  value: null,\n  formattedValue: '__unset__',\n  isEditable: false,\n  api: {}\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showRightBorder,\n    isEditable,\n    isSelected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isEditable && 'cell--editable', isSelected && 'selected', showRightBorder && 'cell--withRightBorder', 'withBorderColor'],\n    content: ['cellContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// GridCellWrapper is a compatibility layer for the V6 cell slot. If we can use the more efficient\n// `GridCellV7`, we should. That component is a merge of `GridCellWrapper` and `GridCell`.\n// TODO(v7): Remove the wrapper & cellV6 and use the cellV7 exclusively.\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\nconst GridCellWrapper = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    column,\n    rowId,\n    editCellState\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const field = column.field;\n  const cellParamsWithAPI = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      const cellParams = apiRef.current.getCellParams(rowId, field);\n      const result = cellParams;\n      result.api = apiRef.current;\n      return result;\n    } catch (e) {\n      if (e instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw e;\n    }\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  if (cellParamsWithAPI === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  const {\n    cellMode,\n    hasFocus,\n    isEditable,\n    value,\n    formattedValue\n  } = cellParamsWithAPI;\n  const managesOwnFocus = column.type === 'actions';\n  const tabIndex = (cellMode === 'view' || !isEditable) && !managesOwnFocus ? cellParamsWithAPI.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n  const classNames = apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  });\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParamsWithAPI) : column.cellClassName);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParamsWithAPI));\n  }\n  let children;\n  if (editCellState == null && column.renderCell) {\n    children = column.renderCell(cellParamsWithAPI);\n    classNames.push(gridClasses['cell--withRenderer']);\n    classNames.push(rootClasses == null ? void 0 : rootClasses['cell--withRenderer']);\n  }\n  if (editCellState != null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded);\n    const params = _extends({}, cellParamsWithAPI, {\n      row: updatedRow\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses == null ? void 0 : rootClasses['cell--editing']);\n  }\n  const {\n    slots\n  } = rootProps;\n  const CellComponent = slots.cell;\n  const cellProps = _extends({}, props, {\n    ref,\n    field,\n    formattedValue,\n    hasFocus,\n    isEditable,\n    isSelected,\n    value,\n    cellMode,\n    children,\n    tabIndex,\n    className: clsx(classNames)\n  });\n  return /*#__PURE__*/React.createElement(CellComponent, cellProps);\n});\nconst GridCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _rootProps$experiment;\n  const {\n      align,\n      children: childrenProp,\n      colIndex,\n      column,\n      cellMode,\n      field,\n      formattedValue,\n      hasFocus,\n      height,\n      isEditable,\n      isSelected,\n      rowId,\n      tabIndex,\n      value,\n      width,\n      className,\n      showRightBorder,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  const valueToRender = formattedValue == null ? value : formattedValue;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    align,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    isSelected\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0\n      };\n    }\n    const cellStyle = {\n      minWidth: width,\n      maxWidth: width,\n      minHeight: height,\n      maxHeight: height === 'auto' ? 'none' : height // max-height doesn't support \"auto\"\n    };\n\n    return cellStyle;\n  }, [width, height, isNotVisible]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && (_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if ((focusedCell == null ? void 0 : focusedCell.id) === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell == null ? void 0 : focusedCell.id}, field=${focusedCell == null ? void 0 : focusedCell.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  const managesOwnFocus = column.type === 'actions';\n  let children = childrenProp;\n  if (children === undefined) {\n    const valueString = valueToRender == null ? void 0 : valueToRender.toString();\n    children = /*#__PURE__*/_jsx(\"div\", {\n      className: classes.content,\n      title: valueString,\n      children: valueString\n    });\n  }\n  if ( /*#__PURE__*/React.isValidElement(children) && managesOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(className, classes.root),\n    role: \"cell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    style: style,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: children\n  }));\n});\nconst MemoizedCellWrapper = fastMemo(GridCellWrapper);\nprocess.env.NODE_ENV !== \"production\" ? GridCellWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']),\n  className: PropTypes.string,\n  colIndex: PropTypes.number,\n  colSpan: PropTypes.number,\n  column: PropTypes.object,\n  disableDragEvents: PropTypes.bool,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  showRightBorder: PropTypes.bool,\n  width: PropTypes.number\n} : void 0;\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']),\n  cellMode: PropTypes.oneOf(['edit', 'view']),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  colIndex: PropTypes.number,\n  colSpan: PropTypes.number,\n  column: PropTypes.object,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  isNotVisible: PropTypes.bool,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  showRightBorder: PropTypes.bool,\n  width: PropTypes.number\n} : void 0;\nexport { MemoizedCellWrapper as GridCellWrapper, GridCell };\nconst GridCellV7 = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _rootProps$experiment2;\n  const {\n      column,\n      rowId,\n      editCellState,\n      align,\n      colIndex,\n      height,\n      width,\n      className,\n      showRightBorder,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded3);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const field = column.field;\n  const cellParamsWithAPI = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      const cellParams = apiRef.current.getCellParams(rowId, field);\n      const result = cellParams;\n      result.api = apiRef.current;\n      return result;\n    } catch (e) {\n      if (e instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw e;\n    }\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const {\n    cellMode,\n    hasFocus,\n    isEditable,\n    value,\n    formattedValue\n  } = cellParamsWithAPI;\n  const managesOwnFocus = column.type === 'actions';\n  const tabIndex = (cellMode === 'view' || !isEditable) && !managesOwnFocus ? cellParamsWithAPI.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n  const classNames = apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  });\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParamsWithAPI) : column.cellClassName);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParamsWithAPI));\n  }\n  const valueToRender = formattedValue == null ? value : formattedValue;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const ownerState = {\n    align,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    isSelected\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0\n      };\n    }\n    const cellStyle = {\n      minWidth: width,\n      maxWidth: width,\n      minHeight: height,\n      maxHeight: height === 'auto' ? 'none' : height // max-height doesn't support \"auto\"\n    };\n\n    return cellStyle;\n  }, [width, height, isNotVisible]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (cellParamsWithAPI === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && (_rootProps$experiment2 = rootProps.experimentalFeatures) != null && _rootProps$experiment2.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if ((focusedCell == null ? void 0 : focusedCell.id) === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell == null ? void 0 : focusedCell.id}, field=${focusedCell == null ? void 0 : focusedCell.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  if (editCellState == null && column.renderCell) {\n    children = column.renderCell(cellParamsWithAPI);\n    classNames.push(gridClasses['cell--withRenderer']);\n    classNames.push(rootClasses == null ? void 0 : rootClasses['cell--withRenderer']);\n  }\n  if (editCellState != null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded4);\n    const params = _extends({}, cellParamsWithAPI, {\n      row: updatedRow\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses == null ? void 0 : rootClasses['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender == null ? void 0 : valueToRender.toString();\n    children = /*#__PURE__*/_jsx(\"div\", {\n      className: classes.content,\n      title: valueString,\n      children: valueString\n    });\n  }\n  if ( /*#__PURE__*/React.isValidElement(children) && managesOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(className, classNames, classes.root),\n    role: \"cell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    style: style,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellV7.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  isNotVisible: PropTypes.bool,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  showRightBorder: PropTypes.bool,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCellV7 = fastMemo(GridCellV7);\nexport { MemoizedGridCellV7 as GridCellV7 };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}