{"ast":null,"code":"import _slicedToArray from\"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from'react';import{FullPageChat}from'flowise-embed-react';import{useNavigate}from'react-router-dom';// Project import\nimport LoginDialog from'ui-component/dialog/LoginDialog';// API\nimport chatflowsApi from'api/chatflows';// Hooks\nimport useApi from'hooks/useApi';//Const\nimport{baseURL}from'store/constant';// ==============================|| Chatbot ||============================== //\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChatbotFull=function ChatbotFull(){var URLpath=document.location.pathname.toString().split('/');var chatflowId=URLpath[URLpath.length-1]==='chatbot'?'':URLpath[URLpath.length-1];var navigate=useNavigate();var _useState=useState(null),_useState2=_slicedToArray(_useState,2),chatflow=_useState2[0],setChatflow=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),chatbotTheme=_useState4[0],setChatbotTheme=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),loginDialogOpen=_useState6[0],setLoginDialogOpen=_useState6[1];var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),loginDialogProps=_useState8[0],setLoginDialogProps=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),isLoading=_useState10[0],setLoading=_useState10[1];var _useState11=useState({}),_useState12=_slicedToArray(_useState11,2),chatbotOverrideConfig=_useState12[0],setChatbotOverrideConfig=_useState12[1];var getSpecificChatflowFromPublicApi=useApi(chatflowsApi.getSpecificChatflowFromPublicEndpoint);var getSpecificChatflowApi=useApi(chatflowsApi.getSpecificChatflow);var onLoginClick=function onLoginClick(username,password){localStorage.setItem('username',username);localStorage.setItem('password',password);navigate(0);};useEffect(function(){getSpecificChatflowFromPublicApi.request(chatflowId);// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);useEffect(function(){if(getSpecificChatflowFromPublicApi.error){var _getSpecificChatflowF,_getSpecificChatflowF2;if(((_getSpecificChatflowF=getSpecificChatflowFromPublicApi.error)===null||_getSpecificChatflowF===void 0?void 0:(_getSpecificChatflowF2=_getSpecificChatflowF.response)===null||_getSpecificChatflowF2===void 0?void 0:_getSpecificChatflowF2.status)===401){if(localStorage.getItem('username')&&localStorage.getItem('password')){getSpecificChatflowApi.request(chatflowId);}else{setLoginDialogProps({title:'Login',confirmButtonName:'Login'});setLoginDialogOpen(true);}}}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[getSpecificChatflowFromPublicApi.error]);useEffect(function(){if(getSpecificChatflowApi.error){var _getSpecificChatflowA,_getSpecificChatflowA2;if(((_getSpecificChatflowA=getSpecificChatflowApi.error)===null||_getSpecificChatflowA===void 0?void 0:(_getSpecificChatflowA2=_getSpecificChatflowA.response)===null||_getSpecificChatflowA2===void 0?void 0:_getSpecificChatflowA2.status)===401){setLoginDialogProps({title:'Login',confirmButtonName:'Login'});setLoginDialogOpen(true);}}},[getSpecificChatflowApi.error]);useEffect(function(){if(getSpecificChatflowFromPublicApi.data||getSpecificChatflowApi.data){var chatflowData=getSpecificChatflowFromPublicApi.data||getSpecificChatflowApi.data;setChatflow(chatflowData);if(chatflowData.chatbotConfig){try{var parsedConfig=JSON.parse(chatflowData.chatbotConfig);setChatbotTheme(parsedConfig);if(parsedConfig.overrideConfig){// Generate new sessionId\nif(parsedConfig.overrideConfig.generateNewSession){parsedConfig.overrideConfig.sessionId=Date.now().toString();}setChatbotOverrideConfig(parsedConfig.overrideConfig);}}catch(e){console.error(e);setChatbotTheme({});setChatbotOverrideConfig({});}}}},[getSpecificChatflowFromPublicApi.data,getSpecificChatflowApi.data]);useEffect(function(){setLoading(getSpecificChatflowFromPublicApi.loading||getSpecificChatflowApi.loading);},[getSpecificChatflowFromPublicApi.loading,getSpecificChatflowApi.loading]);return/*#__PURE__*/_jsx(_Fragment,{children:!isLoading?/*#__PURE__*/_jsxs(_Fragment,{children:[!chatflow||chatflow.apikeyid?/*#__PURE__*/_jsx(\"p\",{children:\"Invalid Chatbot\"}):/*#__PURE__*/_jsx(FullPageChat,{chatflowid:chatflow.id,apiHost:baseURL,chatflowConfig:chatbotOverrideConfig,theme:{chatWindow:chatbotTheme}}),/*#__PURE__*/_jsx(LoginDialog,{show:loginDialogOpen,dialogProps:loginDialogProps,onConfirm:onLoginClick})]}):null});};export default ChatbotFull;","map":{"version":3,"names":["useEffect","useState","FullPageChat","useNavigate","LoginDialog","chatflowsApi","useApi","baseURL","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ChatbotFull","URLpath","document","location","pathname","toString","split","chatflowId","length","navigate","_useState","_useState2","_slicedToArray","chatflow","setChatflow","_useState3","_useState4","chatbotTheme","setChatbotTheme","_useState5","_useState6","loginDialogOpen","setLoginDialogOpen","_useState7","_useState8","loginDialogProps","setLoginDialogProps","_useState9","_useState10","isLoading","setLoading","_useState11","_useState12","chatbotOverrideConfig","setChatbotOverrideConfig","getSpecificChatflowFromPublicApi","getSpecificChatflowFromPublicEndpoint","getSpecificChatflowApi","getSpecificChatflow","onLoginClick","username","password","localStorage","setItem","request","error","_getSpecificChatflowF","_getSpecificChatflowF2","response","status","getItem","title","confirmButtonName","_getSpecificChatflowA","_getSpecificChatflowA2","data","chatflowData","chatbotConfig","parsedConfig","JSON","parse","overrideConfig","generateNewSession","sessionId","Date","now","e","console","loading","children","apikeyid","chatflowid","id","apiHost","chatflowConfig","theme","chatWindow","show","dialogProps","onConfirm"],"sources":["/Users/zorro/Downloads/Flowise/packages/ui/src/views/chatbot/index.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { FullPageChat } from 'flowise-embed-react'\nimport { useNavigate } from 'react-router-dom'\n\n// Project import\nimport LoginDialog from 'ui-component/dialog/LoginDialog'\n\n// API\nimport chatflowsApi from 'api/chatflows'\n\n// Hooks\nimport useApi from 'hooks/useApi'\n\n//Const\nimport { baseURL } from 'store/constant'\n\n// ==============================|| Chatbot ||============================== //\n\nconst ChatbotFull = () => {\n    const URLpath = document.location.pathname.toString().split('/')\n    const chatflowId = URLpath[URLpath.length - 1] === 'chatbot' ? '' : URLpath[URLpath.length - 1]\n    const navigate = useNavigate()\n\n    const [chatflow, setChatflow] = useState(null)\n    const [chatbotTheme, setChatbotTheme] = useState({})\n    const [loginDialogOpen, setLoginDialogOpen] = useState(false)\n    const [loginDialogProps, setLoginDialogProps] = useState({})\n    const [isLoading, setLoading] = useState(true)\n    const [chatbotOverrideConfig, setChatbotOverrideConfig] = useState({})\n\n    const getSpecificChatflowFromPublicApi = useApi(chatflowsApi.getSpecificChatflowFromPublicEndpoint)\n    const getSpecificChatflowApi = useApi(chatflowsApi.getSpecificChatflow)\n\n    const onLoginClick = (username, password) => {\n        localStorage.setItem('username', username)\n        localStorage.setItem('password', password)\n        navigate(0)\n    }\n\n    useEffect(() => {\n        getSpecificChatflowFromPublicApi.request(chatflowId)\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        if (getSpecificChatflowFromPublicApi.error) {\n            if (getSpecificChatflowFromPublicApi.error?.response?.status === 401) {\n                if (localStorage.getItem('username') && localStorage.getItem('password')) {\n                    getSpecificChatflowApi.request(chatflowId)\n                } else {\n                    setLoginDialogProps({\n                        title: 'Login',\n                        confirmButtonName: 'Login'\n                    })\n                    setLoginDialogOpen(true)\n                }\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [getSpecificChatflowFromPublicApi.error])\n\n    useEffect(() => {\n        if (getSpecificChatflowApi.error) {\n            if (getSpecificChatflowApi.error?.response?.status === 401) {\n                setLoginDialogProps({\n                    title: 'Login',\n                    confirmButtonName: 'Login'\n                })\n                setLoginDialogOpen(true)\n            }\n        }\n    }, [getSpecificChatflowApi.error])\n\n    useEffect(() => {\n        if (getSpecificChatflowFromPublicApi.data || getSpecificChatflowApi.data) {\n            const chatflowData = getSpecificChatflowFromPublicApi.data || getSpecificChatflowApi.data\n            setChatflow(chatflowData)\n            if (chatflowData.chatbotConfig) {\n                try {\n                    const parsedConfig = JSON.parse(chatflowData.chatbotConfig)\n                    setChatbotTheme(parsedConfig)\n                    if (parsedConfig.overrideConfig) {\n                        // Generate new sessionId\n                        if (parsedConfig.overrideConfig.generateNewSession) {\n                            parsedConfig.overrideConfig.sessionId = Date.now().toString()\n                        }\n                        setChatbotOverrideConfig(parsedConfig.overrideConfig)\n                    }\n                } catch (e) {\n                    console.error(e)\n                    setChatbotTheme({})\n                    setChatbotOverrideConfig({})\n                }\n            }\n        }\n    }, [getSpecificChatflowFromPublicApi.data, getSpecificChatflowApi.data])\n\n    useEffect(() => {\n        setLoading(getSpecificChatflowFromPublicApi.loading || getSpecificChatflowApi.loading)\n    }, [getSpecificChatflowFromPublicApi.loading, getSpecificChatflowApi.loading])\n\n    return (\n        <>\n            {!isLoading ? (\n                <>\n                    {!chatflow || chatflow.apikeyid ? (\n                        <p>Invalid Chatbot</p>\n                    ) : (\n                        <FullPageChat\n                            chatflowid={chatflow.id}\n                            apiHost={baseURL}\n                            chatflowConfig={chatbotOverrideConfig}\n                            theme={{ chatWindow: chatbotTheme }}\n                        />\n                    )}\n                    <LoginDialog show={loginDialogOpen} dialogProps={loginDialogProps} onConfirm={onLoginClick} />\n                </>\n            ) : null}\n        </>\n    )\n}\n\nexport default ChatbotFull\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}