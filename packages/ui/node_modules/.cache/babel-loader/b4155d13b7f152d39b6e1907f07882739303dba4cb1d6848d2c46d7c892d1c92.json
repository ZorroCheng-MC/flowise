{"ast":null,"code":"import _regeneratorRuntime from\"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import{useDispatch,useSelector}from'react-redux';import{enqueueSnackbar as enqueueSnackbarAction,closeSnackbar as closeSnackbarAction,SET_CHATFLOW}from'store/actions';import{SketchPicker}from'react-color';import{Box,Typography,Button,Switch,OutlinedInput,Popover,Stack,IconButton}from'@mui/material';import{useTheme}from'@mui/material/styles';// Project import\nimport{StyledButton}from'ui-component/button/StyledButton';import{TooltipWithParser}from'ui-component/tooltip/TooltipWithParser';// Icons\nimport{IconX,IconCopy,IconArrowUpRightCircle}from'@tabler/icons';// API\nimport chatflowsApi from'api/chatflows';// utils\nimport useNotifier from'utils/useNotifier';// Const\nimport{baseURL}from'store/constant';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var defaultConfig={backgroundColor:'#ffffff',fontSize:16,poweredByTextColor:'#303235',botMessage:{backgroundColor:'#f7f8ff',textColor:'#303235'},userMessage:{backgroundColor:'#3B81F6',textColor:'#ffffff'},textInput:{backgroundColor:'#ffffff',textColor:'#303235',sendButtonColor:'#3B81F6'}};var ShareChatbot=function ShareChatbot(_ref){var _chatflow$isPublic,_chatbotConfig$genera,_chatbotConfig$welcom,_chatbotConfig$backgr,_chatbotConfig$fontSi,_chatbotConfig$powere,_chatbotConfig$botMes,_chatbotConfig$botMes2,_chatbotConfig$botMes3,_chatbotConfig$botMes4,_chatbotConfig$botMes5,_chatbotConfig$botMes6,_chatbotConfig$botMes7,_chatbotConfig$botMes8,_chatbotConfig$userMe,_chatbotConfig$userMe2,_chatbotConfig$userMe3,_chatbotConfig$userMe4,_chatbotConfig$userMe5,_chatbotConfig$userMe6,_chatbotConfig$userMe7,_chatbotConfig$userMe8,_chatbotConfig$textIn,_chatbotConfig$textIn2,_chatbotConfig$textIn3,_chatbotConfig$textIn4,_chatbotConfig$textIn5,_chatbotConfig$textIn6,_chatbotConfig$textIn7,_chatbotConfig$textIn8;var isSessionMemory=_ref.isSessionMemory;var dispatch=useDispatch();var theme=useTheme();var chatflow=useSelector(function(state){return state.canvas.chatflow;});var chatflowid=chatflow.id;var chatbotConfig=chatflow.chatbotConfig?JSON.parse(chatflow.chatbotConfig):{};useNotifier();var enqueueSnackbar=function enqueueSnackbar(){return dispatch(enqueueSnackbarAction.apply(void 0,arguments));};var closeSnackbar=function closeSnackbar(){return dispatch(closeSnackbarAction.apply(void 0,arguments));};var _useState=useState((_chatflow$isPublic=chatflow.isPublic)!==null&&_chatflow$isPublic!==void 0?_chatflow$isPublic:false),_useState2=_slicedToArray(_useState,2),isPublicChatflow=_useState2[0],setChatflowIsPublic=_useState2[1];var _useState3=useState((_chatbotConfig$genera=chatbotConfig===null||chatbotConfig===void 0?void 0:chatbotConfig.generateNewSession)!==null&&_chatbotConfig$genera!==void 0?_chatbotConfig$genera:false),_useState4=_slicedToArray(_useState3,2),generateNewSession=_useState4[0],setGenerateNewSession=_useState4[1];var _useState5=useState((_chatbotConfig$welcom=chatbotConfig===null||chatbotConfig===void 0?void 0:chatbotConfig.welcomeMessage)!==null&&_chatbotConfig$welcom!==void 0?_chatbotConfig$welcom:''),_useState6=_slicedToArray(_useState5,2),welcomeMessage=_useState6[0],setWelcomeMessage=_useState6[1];var _useState7=useState((_chatbotConfig$backgr=chatbotConfig===null||chatbotConfig===void 0?void 0:chatbotConfig.backgroundColor)!==null&&_chatbotConfig$backgr!==void 0?_chatbotConfig$backgr:defaultConfig.backgroundColor),_useState8=_slicedToArray(_useState7,2),backgroundColor=_useState8[0],setBackgroundColor=_useState8[1];var _useState9=useState((_chatbotConfig$fontSi=chatbotConfig===null||chatbotConfig===void 0?void 0:chatbotConfig.fontSize)!==null&&_chatbotConfig$fontSi!==void 0?_chatbotConfig$fontSi:defaultConfig.fontSize),_useState10=_slicedToArray(_useState9,2),fontSize=_useState10[0],setFontSize=_useState10[1];var _useState11=useState((_chatbotConfig$powere=chatbotConfig===null||chatbotConfig===void 0?void 0:chatbotConfig.poweredByTextColor)!==null&&_chatbotConfig$powere!==void 0?_chatbotConfig$powere:defaultConfig.poweredByTextColor),_useState12=_slicedToArray(_useState11,2),poweredByTextColor=_useState12[0],setPoweredByTextColor=_useState12[1];var _useState13=useState((_chatbotConfig$botMes=chatbotConfig===null||chatbotConfig===void 0?void 0:(_chatbotConfig$botMes2=chatbotConfig.botMessage)===null||_chatbotConfig$botMes2===void 0?void 0:_chatbotConfig$botMes2.backgroundColor)!==null&&_chatbotConfig$botMes!==void 0?_chatbotConfig$botMes:defaultConfig.botMessage.backgroundColor),_useState14=_slicedToArray(_useState13,2),botMessageBackgroundColor=_useState14[0],setBotMessageBackgroundColor=_useState14[1];var _useState15=useState((_chatbotConfig$botMes3=chatbotConfig===null||chatbotConfig===void 0?void 0:(_chatbotConfig$botMes4=chatbotConfig.botMessage)===null||_chatbotConfig$botMes4===void 0?void 0:_chatbotConfig$botMes4.textColor)!==null&&_chatbotConfig$botMes3!==void 0?_chatbotConfig$botMes3:defaultConfig.botMessage.textColor),_useState16=_slicedToArray(_useState15,2),botMessageTextColor=_useState16[0],setBotMessageTextColor=_useState16[1];var _useState17=useState((_chatbotConfig$botMes5=chatbotConfig===null||chatbotConfig===void 0?void 0:(_chatbotConfig$botMes6=chatbotConfig.botMessage)===null||_chatbotConfig$botMes6===void 0?void 0:_chatbotConfig$botMes6.avatarSrc)!==null&&_chatbotConfig$botMes5!==void 0?_chatbotConfig$botMes5:''),_useState18=_slicedToArray(_useState17,2),botMessageAvatarSrc=_useState18[0],setBotMessageAvatarSrc=_useState18[1];var _useState19=useState((_chatbotConfig$botMes7=chatbotConfig===null||chatbotConfig===void 0?void 0:(_chatbotConfig$botMes8=chatbotConfig.botMessage)===null||_chatbotConfig$botMes8===void 0?void 0:_chatbotConfig$botMes8.showAvatar)!==null&&_chatbotConfig$botMes7!==void 0?_chatbotConfig$botMes7:false),_useState20=_slicedToArray(_useState19,2),botMessageShowAvatar=_useState20[0],setBotMessageShowAvatar=_useState20[1];var _useState21=useState((_chatbotConfig$userMe=chatbotConfig===null||chatbotConfig===void 0?void 0:(_chatbotConfig$userMe2=chatbotConfig.userMessage)===null||_chatbotConfig$userMe2===void 0?void 0:_chatbotConfig$userMe2.backgroundColor)!==null&&_chatbotConfig$userMe!==void 0?_chatbotConfig$userMe:defaultConfig.userMessage.backgroundColor),_useState22=_slicedToArray(_useState21,2),userMessageBackgroundColor=_useState22[0],setUserMessageBackgroundColor=_useState22[1];var _useState23=useState((_chatbotConfig$userMe3=chatbotConfig===null||chatbotConfig===void 0?void 0:(_chatbotConfig$userMe4=chatbotConfig.userMessage)===null||_chatbotConfig$userMe4===void 0?void 0:_chatbotConfig$userMe4.textColor)!==null&&_chatbotConfig$userMe3!==void 0?_chatbotConfig$userMe3:defaultConfig.userMessage.textColor),_useState24=_slicedToArray(_useState23,2),userMessageTextColor=_useState24[0],setUserMessageTextColor=_useState24[1];var _useState25=useState((_chatbotConfig$userMe5=chatbotConfig===null||chatbotConfig===void 0?void 0:(_chatbotConfig$userMe6=chatbotConfig.userMessage)===null||_chatbotConfig$userMe6===void 0?void 0:_chatbotConfig$userMe6.avatarSrc)!==null&&_chatbotConfig$userMe5!==void 0?_chatbotConfig$userMe5:''),_useState26=_slicedToArray(_useState25,2),userMessageAvatarSrc=_useState26[0],setUserMessageAvatarSrc=_useState26[1];var _useState27=useState((_chatbotConfig$userMe7=chatbotConfig===null||chatbotConfig===void 0?void 0:(_chatbotConfig$userMe8=chatbotConfig.userMessage)===null||_chatbotConfig$userMe8===void 0?void 0:_chatbotConfig$userMe8.showAvatar)!==null&&_chatbotConfig$userMe7!==void 0?_chatbotConfig$userMe7:false),_useState28=_slicedToArray(_useState27,2),userMessageShowAvatar=_useState28[0],setUserMessageShowAvatar=_useState28[1];var _useState29=useState((_chatbotConfig$textIn=chatbotConfig===null||chatbotConfig===void 0?void 0:(_chatbotConfig$textIn2=chatbotConfig.textInput)===null||_chatbotConfig$textIn2===void 0?void 0:_chatbotConfig$textIn2.backgroundColor)!==null&&_chatbotConfig$textIn!==void 0?_chatbotConfig$textIn:defaultConfig.textInput.backgroundColor),_useState30=_slicedToArray(_useState29,2),textInputBackgroundColor=_useState30[0],setTextInputBackgroundColor=_useState30[1];var _useState31=useState((_chatbotConfig$textIn3=chatbotConfig===null||chatbotConfig===void 0?void 0:(_chatbotConfig$textIn4=chatbotConfig.textInput)===null||_chatbotConfig$textIn4===void 0?void 0:_chatbotConfig$textIn4.textColor)!==null&&_chatbotConfig$textIn3!==void 0?_chatbotConfig$textIn3:defaultConfig.textInput.textColor),_useState32=_slicedToArray(_useState31,2),textInputTextColor=_useState32[0],setTextInputTextColor=_useState32[1];var _useState33=useState((_chatbotConfig$textIn5=chatbotConfig===null||chatbotConfig===void 0?void 0:(_chatbotConfig$textIn6=chatbotConfig.textInput)===null||_chatbotConfig$textIn6===void 0?void 0:_chatbotConfig$textIn6.placeholder)!==null&&_chatbotConfig$textIn5!==void 0?_chatbotConfig$textIn5:''),_useState34=_slicedToArray(_useState33,2),textInputPlaceholder=_useState34[0],setTextInputPlaceholder=_useState34[1];var _useState35=useState((_chatbotConfig$textIn7=chatbotConfig===null||chatbotConfig===void 0?void 0:(_chatbotConfig$textIn8=chatbotConfig.textInput)===null||_chatbotConfig$textIn8===void 0?void 0:_chatbotConfig$textIn8.sendButtonColor)!==null&&_chatbotConfig$textIn7!==void 0?_chatbotConfig$textIn7:defaultConfig.textInput.sendButtonColor),_useState36=_slicedToArray(_useState35,2),textInputSendButtonColor=_useState36[0],setTextInputSendButtonColor=_useState36[1];var _useState37=useState(null),_useState38=_slicedToArray(_useState37,2),colorAnchorEl=_useState38[0],setColorAnchorEl=_useState38[1];var _useState39=useState(''),_useState40=_slicedToArray(_useState39,2),selectedColorConfig=_useState40[0],setSelectedColorConfig=_useState40[1];var _useState41=useState(''),_useState42=_slicedToArray(_useState41,2),sketchPickerColor=_useState42[0],setSketchPickerColor=_useState42[1];var openColorPopOver=Boolean(colorAnchorEl);var _useState43=useState(null),_useState44=_slicedToArray(_useState43,2),copyAnchorEl=_useState44[0],setCopyAnchorEl=_useState44[1];var openCopyPopOver=Boolean(copyAnchorEl);var formatObj=function formatObj(){var obj={botMessage:{showAvatar:false},userMessage:{showAvatar:false},textInput:{},overrideConfig:{}};if(welcomeMessage)obj.welcomeMessage=welcomeMessage;if(backgroundColor)obj.backgroundColor=backgroundColor;if(fontSize)obj.fontSize=fontSize;if(poweredByTextColor)obj.poweredByTextColor=poweredByTextColor;if(botMessageBackgroundColor)obj.botMessage.backgroundColor=botMessageBackgroundColor;if(botMessageTextColor)obj.botMessage.textColor=botMessageTextColor;if(botMessageAvatarSrc)obj.botMessage.avatarSrc=botMessageAvatarSrc;if(botMessageShowAvatar)obj.botMessage.showAvatar=botMessageShowAvatar;if(userMessageBackgroundColor)obj.userMessage.backgroundColor=userMessageBackgroundColor;if(userMessageTextColor)obj.userMessage.textColor=userMessageTextColor;if(userMessageAvatarSrc)obj.userMessage.avatarSrc=userMessageAvatarSrc;if(userMessageShowAvatar)obj.userMessage.showAvatar=userMessageShowAvatar;if(textInputBackgroundColor)obj.textInput.backgroundColor=textInputBackgroundColor;if(textInputTextColor)obj.textInput.textColor=textInputTextColor;if(textInputPlaceholder)obj.textInput.placeholder=textInputPlaceholder;if(textInputSendButtonColor)obj.textInput.sendButtonColor=textInputSendButtonColor;if(isSessionMemory)obj.overrideConfig.generateNewSession=generateNewSession;return obj;};var onSave=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var saveResp,errorData;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return chatflowsApi.updateChatflow(chatflowid,{chatbotConfig:JSON.stringify(formatObj())});case 3:saveResp=_context.sent;if(saveResp.data){enqueueSnackbar({message:'Chatbot Configuration Saved',options:{key:new Date().getTime()+Math.random(),variant:'success',action:function action(key){return/*#__PURE__*/_jsx(Button,{style:{color:'white'},onClick:function onClick(){return closeSnackbar(key);},children:/*#__PURE__*/_jsx(IconX,{})});}}});dispatch({type:SET_CHATFLOW,chatflow:saveResp.data});}_context.next=12;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.error(_context.t0);errorData=_context.t0.response.data||\"\".concat(_context.t0.response.status,\": \").concat(_context.t0.response.statusText);enqueueSnackbar({message:\"Failed to save Chatbot Configuration: \".concat(errorData),options:{key:new Date().getTime()+Math.random(),variant:'error',persist:true,action:function action(key){return/*#__PURE__*/_jsx(Button,{style:{color:'white'},onClick:function onClick(){return closeSnackbar(key);},children:/*#__PURE__*/_jsx(IconX,{})});}}});case 12:case\"end\":return _context.stop();}},_callee,null,[[0,7]]);}));return function onSave(){return _ref2.apply(this,arguments);};}();var onSwitchChange=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(checked){var saveResp,errorData;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return chatflowsApi.updateChatflow(chatflowid,{isPublic:checked});case 3:saveResp=_context2.sent;if(saveResp.data){enqueueSnackbar({message:'Chatbot Configuration Saved',options:{key:new Date().getTime()+Math.random(),variant:'success',action:function action(key){return/*#__PURE__*/_jsx(Button,{style:{color:'white'},onClick:function onClick(){return closeSnackbar(key);},children:/*#__PURE__*/_jsx(IconX,{})});}}});dispatch({type:SET_CHATFLOW,chatflow:saveResp.data});}_context2.next=12;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);console.error(_context2.t0);errorData=_context2.t0.response.data||\"\".concat(_context2.t0.response.status,\": \").concat(_context2.t0.response.statusText);enqueueSnackbar({message:\"Failed to save Chatbot Configuration: \".concat(errorData),options:{key:new Date().getTime()+Math.random(),variant:'error',persist:true,action:function action(key){return/*#__PURE__*/_jsx(Button,{style:{color:'white'},onClick:function onClick(){return closeSnackbar(key);},children:/*#__PURE__*/_jsx(IconX,{})});}}});case 12:case\"end\":return _context2.stop();}},_callee2,null,[[0,7]]);}));return function onSwitchChange(_x){return _ref3.apply(this,arguments);};}();var handleClosePopOver=function handleClosePopOver(){setColorAnchorEl(null);};var handleCloseCopyPopOver=function handleCloseCopyPopOver(){setCopyAnchorEl(null);};var onColorSelected=function onColorSelected(hexColor){switch(selectedColorConfig){case'backgroundColor':setBackgroundColor(hexColor);break;case'poweredByTextColor':setPoweredByTextColor(hexColor);break;case'botMessageBackgroundColor':setBotMessageBackgroundColor(hexColor);break;case'botMessageTextColor':setBotMessageTextColor(hexColor);break;case'userMessageBackgroundColor':setUserMessageBackgroundColor(hexColor);break;case'userMessageTextColor':setUserMessageTextColor(hexColor);break;case'textInputBackgroundColor':setTextInputBackgroundColor(hexColor);break;case'textInputTextColor':setTextInputTextColor(hexColor);break;case'textInputSendButtonColor':setTextInputSendButtonColor(hexColor);break;}setSketchPickerColor(hexColor);};var onTextChanged=function onTextChanged(value,fieldName){switch(fieldName){case'welcomeMessage':setWelcomeMessage(value);break;case'fontSize':setFontSize(value);break;case'botMessageAvatarSrc':setBotMessageAvatarSrc(value);break;case'userMessageAvatarSrc':setUserMessageAvatarSrc(value);break;case'textInputPlaceholder':setTextInputPlaceholder(value);break;}};var onBooleanChanged=function onBooleanChanged(value,fieldName){switch(fieldName){case'botMessageShowAvatar':setBotMessageShowAvatar(value);break;case'userMessageShowAvatar':setUserMessageShowAvatar(value);break;case'generateNewSession':setGenerateNewSession(value);break;}};var colorField=function colorField(color,fieldName,fieldLabel){return/*#__PURE__*/_jsx(Box,{sx:{pt:2,pb:2},children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',alignItems:'flex-start'},children:[/*#__PURE__*/_jsx(Typography,{sx:{mb:1},children:fieldLabel}),/*#__PURE__*/_jsx(Box,{sx:{cursor:'pointer',width:'30px',height:'30px',border:'1px solid #616161',marginRight:'10px',backgroundColor:color!==null&&color!==void 0?color:'#ffffff',borderRadius:'5px'},onClick:function onClick(event){setSelectedColorConfig(fieldName);setSketchPickerColor(color!==null&&color!==void 0?color:'#ffffff');setColorAnchorEl(event.currentTarget);}})]})});};var booleanField=function booleanField(value,fieldName,fieldLabel){return/*#__PURE__*/_jsx(Box,{sx:{pt:2,pb:2},children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',alignItems:'flex-start'},children:[/*#__PURE__*/_jsx(Typography,{sx:{mb:1},children:fieldLabel}),/*#__PURE__*/_jsx(Switch,{id:fieldName,checked:value,onChange:function onChange(event){onBooleanChanged(event.target.checked,fieldName);}})]})});};var textField=function textField(message,fieldName,fieldLabel){var fieldType=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'string';var placeholder=arguments.length>4&&arguments[4]!==undefined?arguments[4]:'';return/*#__PURE__*/_jsx(Box,{sx:{pt:2,pb:2},children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',alignItems:'flex-start'},children:[/*#__PURE__*/_jsx(Typography,{sx:{mb:1},children:fieldLabel}),/*#__PURE__*/_jsx(OutlinedInput,{id:fieldName,type:fieldType,fullWidth:true,value:message,placeholder:placeholder,name:fieldName,onChange:function onChange(e){onTextChanged(e.target.value,fieldName);}})]})});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Stack,{direction:\"row\",children:[/*#__PURE__*/_jsx(Typography,{sx:{p:1,borderRadius:10,backgroundColor:theme.palette.primary.light,width:'max-content',height:'max-content'},variant:\"h5\",children:\"\".concat(baseURL,\"/chatbot/\").concat(chatflowid)}),/*#__PURE__*/_jsx(IconButton,{title:\"Copy Link\",color:\"success\",onClick:function onClick(event){navigator.clipboard.writeText(\"\".concat(baseURL,\"/chatbot/\").concat(chatflowid));setCopyAnchorEl(event.currentTarget);setTimeout(function(){handleCloseCopyPopOver();},1500);},children:/*#__PURE__*/_jsx(IconCopy,{})}),/*#__PURE__*/_jsx(IconButton,{title:\"Open New Tab\",color:\"primary\",onClick:function onClick(){return window.open(\"\".concat(baseURL,\"/chatbot/\").concat(chatflowid),'_blank');},children:/*#__PURE__*/_jsx(IconArrowUpRightCircle,{})}),/*#__PURE__*/_jsx(\"div\",{style:{flex:1}}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(Switch,{checked:isPublicChatflow,onChange:function onChange(event){setChatflowIsPublic(event.target.checked);onSwitchChange(event.target.checked);}}),/*#__PURE__*/_jsx(Typography,{children:\"Make Public\"}),/*#__PURE__*/_jsx(TooltipWithParser,{style:{marginLeft:10},title:'Making public will allow anyone to access the chatbot without username & password'})]})]}),textField(welcomeMessage,'welcomeMessage','Welcome Message','string','Hello! This is custom welcome message'),colorField(backgroundColor,'backgroundColor','Background Color'),textField(fontSize,'fontSize','Font Size','number'),colorField(poweredByTextColor,'poweredByTextColor','PoweredBy TextColor'),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",sx:{mb:1,mt:2},children:\"Bot Message\"}),colorField(botMessageBackgroundColor,'botMessageBackgroundColor','Background Color'),colorField(botMessageTextColor,'botMessageTextColor','Text Color'),textField(botMessageAvatarSrc,'botMessageAvatarSrc','Avatar Link','string',\"https://raw.githubusercontent.com/zahidkhawaja/langchain-chat-nextjs/main/public/parroticon.png\"),booleanField(botMessageShowAvatar,'botMessageShowAvatar','Show Avatar'),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",sx:{mb:1,mt:2},children:\"User Message\"}),colorField(userMessageBackgroundColor,'userMessageBackgroundColor','Background Color'),colorField(userMessageTextColor,'userMessageTextColor','Text Color'),textField(userMessageAvatarSrc,'userMessageAvatarSrc','Avatar Link','string',\"https://raw.githubusercontent.com/zahidkhawaja/langchain-chat-nextjs/main/public/usericon.png\"),booleanField(userMessageShowAvatar,'userMessageShowAvatar','Show Avatar'),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",sx:{mb:1,mt:2},children:\"Text Input\"}),colorField(textInputBackgroundColor,'textInputBackgroundColor','Background Color'),colorField(textInputTextColor,'textInputTextColor','Text Color'),textField(textInputPlaceholder,'textInputPlaceholder','TextInput Placeholder','string',\"Type question..\"),colorField(textInputSendButtonColor,'textInputSendButtonColor','TextIntput Send Button Color'),isSessionMemory&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",sx:{mb:1,mt:2},children:\"Session Memory\"}),booleanField(generateNewSession,'generateNewSession','Start new session when chatbot link is opened or refreshed')]}),/*#__PURE__*/_jsx(StyledButton,{style:{marginBottom:10,marginTop:10},variant:\"contained\",onClick:function onClick(){return onSave();},children:\"Save Changes\"}),/*#__PURE__*/_jsx(Popover,{open:openColorPopOver,anchorEl:colorAnchorEl,onClose:handleClosePopOver,anchorOrigin:{vertical:'top',horizontal:'right'},transformOrigin:{vertical:'top',horizontal:'left'},children:/*#__PURE__*/_jsx(SketchPicker,{color:sketchPickerColor,onChange:function onChange(color){return onColorSelected(color.hex);}})}),/*#__PURE__*/_jsx(Popover,{open:openCopyPopOver,anchorEl:copyAnchorEl,onClose:handleCloseCopyPopOver,anchorOrigin:{vertical:'top',horizontal:'right'},transformOrigin:{vertical:'top',horizontal:'left'},children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{pl:1,pr:1,color:'white',background:theme.palette.success.dark},children:\"Copied!\"})})]});};export default ShareChatbot;","map":{"version":3,"names":["useState","useDispatch","useSelector","enqueueSnackbar","enqueueSnackbarAction","closeSnackbar","closeSnackbarAction","SET_CHATFLOW","SketchPicker","Box","Typography","Button","Switch","OutlinedInput","Popover","Stack","IconButton","useTheme","StyledButton","TooltipWithParser","IconX","IconCopy","IconArrowUpRightCircle","chatflowsApi","useNotifier","baseURL","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","defaultConfig","backgroundColor","fontSize","poweredByTextColor","botMessage","textColor","userMessage","textInput","sendButtonColor","ShareChatbot","_ref","_chatflow$isPublic","_chatbotConfig$genera","_chatbotConfig$welcom","_chatbotConfig$backgr","_chatbotConfig$fontSi","_chatbotConfig$powere","_chatbotConfig$botMes","_chatbotConfig$botMes2","_chatbotConfig$botMes3","_chatbotConfig$botMes4","_chatbotConfig$botMes5","_chatbotConfig$botMes6","_chatbotConfig$botMes7","_chatbotConfig$botMes8","_chatbotConfig$userMe","_chatbotConfig$userMe2","_chatbotConfig$userMe3","_chatbotConfig$userMe4","_chatbotConfig$userMe5","_chatbotConfig$userMe6","_chatbotConfig$userMe7","_chatbotConfig$userMe8","_chatbotConfig$textIn","_chatbotConfig$textIn2","_chatbotConfig$textIn3","_chatbotConfig$textIn4","_chatbotConfig$textIn5","_chatbotConfig$textIn6","_chatbotConfig$textIn7","_chatbotConfig$textIn8","isSessionMemory","dispatch","theme","chatflow","state","canvas","chatflowid","id","chatbotConfig","JSON","parse","apply","arguments","_useState","isPublic","_useState2","_slicedToArray","isPublicChatflow","setChatflowIsPublic","_useState3","generateNewSession","_useState4","setGenerateNewSession","_useState5","welcomeMessage","_useState6","setWelcomeMessage","_useState7","_useState8","setBackgroundColor","_useState9","_useState10","setFontSize","_useState11","_useState12","setPoweredByTextColor","_useState13","_useState14","botMessageBackgroundColor","setBotMessageBackgroundColor","_useState15","_useState16","botMessageTextColor","setBotMessageTextColor","_useState17","avatarSrc","_useState18","botMessageAvatarSrc","setBotMessageAvatarSrc","_useState19","showAvatar","_useState20","botMessageShowAvatar","setBotMessageShowAvatar","_useState21","_useState22","userMessageBackgroundColor","setUserMessageBackgroundColor","_useState23","_useState24","userMessageTextColor","setUserMessageTextColor","_useState25","_useState26","userMessageAvatarSrc","setUserMessageAvatarSrc","_useState27","_useState28","userMessageShowAvatar","setUserMessageShowAvatar","_useState29","_useState30","textInputBackgroundColor","setTextInputBackgroundColor","_useState31","_useState32","textInputTextColor","setTextInputTextColor","_useState33","placeholder","_useState34","textInputPlaceholder","setTextInputPlaceholder","_useState35","_useState36","textInputSendButtonColor","setTextInputSendButtonColor","_useState37","_useState38","colorAnchorEl","setColorAnchorEl","_useState39","_useState40","selectedColorConfig","setSelectedColorConfig","_useState41","_useState42","sketchPickerColor","setSketchPickerColor","openColorPopOver","Boolean","_useState43","_useState44","copyAnchorEl","setCopyAnchorEl","openCopyPopOver","formatObj","obj","overrideConfig","onSave","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","saveResp","errorData","wrap","_callee$","_context","prev","next","updateChatflow","stringify","sent","data","message","options","key","Date","getTime","Math","random","variant","action","style","color","onClick","children","type","t0","console","error","response","concat","status","statusText","persist","stop","onSwitchChange","_ref3","_callee2","checked","_callee2$","_context2","_x","handleClosePopOver","handleCloseCopyPopOver","onColorSelected","hexColor","onTextChanged","value","fieldName","onBooleanChanged","colorField","fieldLabel","sx","pt","pb","display","flexDirection","alignItems","mb","cursor","width","height","border","marginRight","borderRadius","event","currentTarget","booleanField","onChange","target","textField","fieldType","length","undefined","fullWidth","name","e","direction","p","palette","primary","light","title","navigator","clipboard","writeText","setTimeout","window","open","flex","marginLeft","mt","marginBottom","marginTop","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","hex","pl","pr","background","success","dark"],"sources":["/Users/zorro/Downloads/Flowise/packages/ui/src/views/chatflows/ShareChatbot.js"],"sourcesContent":["import { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { enqueueSnackbar as enqueueSnackbarAction, closeSnackbar as closeSnackbarAction, SET_CHATFLOW } from 'store/actions'\nimport { SketchPicker } from 'react-color'\nimport PropTypes from 'prop-types'\n\nimport { Box, Typography, Button, Switch, OutlinedInput, Popover, Stack, IconButton } from '@mui/material'\nimport { useTheme } from '@mui/material/styles'\n\n// Project import\nimport { StyledButton } from 'ui-component/button/StyledButton'\nimport { TooltipWithParser } from 'ui-component/tooltip/TooltipWithParser'\n\n// Icons\nimport { IconX, IconCopy, IconArrowUpRightCircle } from '@tabler/icons'\n\n// API\nimport chatflowsApi from 'api/chatflows'\n\n// utils\nimport useNotifier from 'utils/useNotifier'\n\n// Const\nimport { baseURL } from 'store/constant'\n\nconst defaultConfig = {\n    backgroundColor: '#ffffff',\n    fontSize: 16,\n    poweredByTextColor: '#303235',\n    botMessage: {\n        backgroundColor: '#f7f8ff',\n        textColor: '#303235'\n    },\n    userMessage: {\n        backgroundColor: '#3B81F6',\n        textColor: '#ffffff'\n    },\n    textInput: {\n        backgroundColor: '#ffffff',\n        textColor: '#303235',\n        sendButtonColor: '#3B81F6'\n    }\n}\n\nconst ShareChatbot = ({ isSessionMemory }) => {\n    const dispatch = useDispatch()\n    const theme = useTheme()\n    const chatflow = useSelector((state) => state.canvas.chatflow)\n    const chatflowid = chatflow.id\n    const chatbotConfig = chatflow.chatbotConfig ? JSON.parse(chatflow.chatbotConfig) : {}\n\n    useNotifier()\n\n    const enqueueSnackbar = (...args) => dispatch(enqueueSnackbarAction(...args))\n    const closeSnackbar = (...args) => dispatch(closeSnackbarAction(...args))\n\n    const [isPublicChatflow, setChatflowIsPublic] = useState(chatflow.isPublic ?? false)\n    const [generateNewSession, setGenerateNewSession] = useState(chatbotConfig?.generateNewSession ?? false)\n\n    const [welcomeMessage, setWelcomeMessage] = useState(chatbotConfig?.welcomeMessage ?? '')\n    const [backgroundColor, setBackgroundColor] = useState(chatbotConfig?.backgroundColor ?? defaultConfig.backgroundColor)\n    const [fontSize, setFontSize] = useState(chatbotConfig?.fontSize ?? defaultConfig.fontSize)\n    const [poweredByTextColor, setPoweredByTextColor] = useState(chatbotConfig?.poweredByTextColor ?? defaultConfig.poweredByTextColor)\n\n    const [botMessageBackgroundColor, setBotMessageBackgroundColor] = useState(\n        chatbotConfig?.botMessage?.backgroundColor ?? defaultConfig.botMessage.backgroundColor\n    )\n    const [botMessageTextColor, setBotMessageTextColor] = useState(\n        chatbotConfig?.botMessage?.textColor ?? defaultConfig.botMessage.textColor\n    )\n    const [botMessageAvatarSrc, setBotMessageAvatarSrc] = useState(chatbotConfig?.botMessage?.avatarSrc ?? '')\n    const [botMessageShowAvatar, setBotMessageShowAvatar] = useState(chatbotConfig?.botMessage?.showAvatar ?? false)\n\n    const [userMessageBackgroundColor, setUserMessageBackgroundColor] = useState(\n        chatbotConfig?.userMessage?.backgroundColor ?? defaultConfig.userMessage.backgroundColor\n    )\n    const [userMessageTextColor, setUserMessageTextColor] = useState(\n        chatbotConfig?.userMessage?.textColor ?? defaultConfig.userMessage.textColor\n    )\n    const [userMessageAvatarSrc, setUserMessageAvatarSrc] = useState(chatbotConfig?.userMessage?.avatarSrc ?? '')\n    const [userMessageShowAvatar, setUserMessageShowAvatar] = useState(chatbotConfig?.userMessage?.showAvatar ?? false)\n\n    const [textInputBackgroundColor, setTextInputBackgroundColor] = useState(\n        chatbotConfig?.textInput?.backgroundColor ?? defaultConfig.textInput.backgroundColor\n    )\n    const [textInputTextColor, setTextInputTextColor] = useState(chatbotConfig?.textInput?.textColor ?? defaultConfig.textInput.textColor)\n    const [textInputPlaceholder, setTextInputPlaceholder] = useState(chatbotConfig?.textInput?.placeholder ?? '')\n    const [textInputSendButtonColor, setTextInputSendButtonColor] = useState(\n        chatbotConfig?.textInput?.sendButtonColor ?? defaultConfig.textInput.sendButtonColor\n    )\n\n    const [colorAnchorEl, setColorAnchorEl] = useState(null)\n    const [selectedColorConfig, setSelectedColorConfig] = useState('')\n    const [sketchPickerColor, setSketchPickerColor] = useState('')\n    const openColorPopOver = Boolean(colorAnchorEl)\n\n    const [copyAnchorEl, setCopyAnchorEl] = useState(null)\n    const openCopyPopOver = Boolean(copyAnchorEl)\n\n    const formatObj = () => {\n        const obj = {\n            botMessage: {\n                showAvatar: false\n            },\n            userMessage: {\n                showAvatar: false\n            },\n            textInput: {},\n            overrideConfig: {}\n        }\n        if (welcomeMessage) obj.welcomeMessage = welcomeMessage\n        if (backgroundColor) obj.backgroundColor = backgroundColor\n        if (fontSize) obj.fontSize = fontSize\n        if (poweredByTextColor) obj.poweredByTextColor = poweredByTextColor\n\n        if (botMessageBackgroundColor) obj.botMessage.backgroundColor = botMessageBackgroundColor\n        if (botMessageTextColor) obj.botMessage.textColor = botMessageTextColor\n        if (botMessageAvatarSrc) obj.botMessage.avatarSrc = botMessageAvatarSrc\n        if (botMessageShowAvatar) obj.botMessage.showAvatar = botMessageShowAvatar\n\n        if (userMessageBackgroundColor) obj.userMessage.backgroundColor = userMessageBackgroundColor\n        if (userMessageTextColor) obj.userMessage.textColor = userMessageTextColor\n        if (userMessageAvatarSrc) obj.userMessage.avatarSrc = userMessageAvatarSrc\n        if (userMessageShowAvatar) obj.userMessage.showAvatar = userMessageShowAvatar\n\n        if (textInputBackgroundColor) obj.textInput.backgroundColor = textInputBackgroundColor\n        if (textInputTextColor) obj.textInput.textColor = textInputTextColor\n        if (textInputPlaceholder) obj.textInput.placeholder = textInputPlaceholder\n        if (textInputSendButtonColor) obj.textInput.sendButtonColor = textInputSendButtonColor\n\n        if (isSessionMemory) obj.overrideConfig.generateNewSession = generateNewSession\n\n        return obj\n    }\n\n    const onSave = async () => {\n        try {\n            const saveResp = await chatflowsApi.updateChatflow(chatflowid, {\n                chatbotConfig: JSON.stringify(formatObj())\n            })\n            if (saveResp.data) {\n                enqueueSnackbar({\n                    message: 'Chatbot Configuration Saved',\n                    options: {\n                        key: new Date().getTime() + Math.random(),\n                        variant: 'success',\n                        action: (key) => (\n                            <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\n                                <IconX />\n                            </Button>\n                        )\n                    }\n                })\n                dispatch({ type: SET_CHATFLOW, chatflow: saveResp.data })\n            }\n        } catch (error) {\n            console.error(error)\n            const errorData = error.response.data || `${error.response.status}: ${error.response.statusText}`\n            enqueueSnackbar({\n                message: `Failed to save Chatbot Configuration: ${errorData}`,\n                options: {\n                    key: new Date().getTime() + Math.random(),\n                    variant: 'error',\n                    persist: true,\n                    action: (key) => (\n                        <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\n                            <IconX />\n                        </Button>\n                    )\n                }\n            })\n        }\n    }\n\n    const onSwitchChange = async (checked) => {\n        try {\n            const saveResp = await chatflowsApi.updateChatflow(chatflowid, { isPublic: checked })\n            if (saveResp.data) {\n                enqueueSnackbar({\n                    message: 'Chatbot Configuration Saved',\n                    options: {\n                        key: new Date().getTime() + Math.random(),\n                        variant: 'success',\n                        action: (key) => (\n                            <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\n                                <IconX />\n                            </Button>\n                        )\n                    }\n                })\n                dispatch({ type: SET_CHATFLOW, chatflow: saveResp.data })\n            }\n        } catch (error) {\n            console.error(error)\n            const errorData = error.response.data || `${error.response.status}: ${error.response.statusText}`\n            enqueueSnackbar({\n                message: `Failed to save Chatbot Configuration: ${errorData}`,\n                options: {\n                    key: new Date().getTime() + Math.random(),\n                    variant: 'error',\n                    persist: true,\n                    action: (key) => (\n                        <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\n                            <IconX />\n                        </Button>\n                    )\n                }\n            })\n        }\n    }\n\n    const handleClosePopOver = () => {\n        setColorAnchorEl(null)\n    }\n\n    const handleCloseCopyPopOver = () => {\n        setCopyAnchorEl(null)\n    }\n\n    const onColorSelected = (hexColor) => {\n        switch (selectedColorConfig) {\n            case 'backgroundColor':\n                setBackgroundColor(hexColor)\n                break\n            case 'poweredByTextColor':\n                setPoweredByTextColor(hexColor)\n                break\n            case 'botMessageBackgroundColor':\n                setBotMessageBackgroundColor(hexColor)\n                break\n            case 'botMessageTextColor':\n                setBotMessageTextColor(hexColor)\n                break\n            case 'userMessageBackgroundColor':\n                setUserMessageBackgroundColor(hexColor)\n                break\n            case 'userMessageTextColor':\n                setUserMessageTextColor(hexColor)\n                break\n            case 'textInputBackgroundColor':\n                setTextInputBackgroundColor(hexColor)\n                break\n            case 'textInputTextColor':\n                setTextInputTextColor(hexColor)\n                break\n            case 'textInputSendButtonColor':\n                setTextInputSendButtonColor(hexColor)\n                break\n        }\n        setSketchPickerColor(hexColor)\n    }\n\n    const onTextChanged = (value, fieldName) => {\n        switch (fieldName) {\n            case 'welcomeMessage':\n                setWelcomeMessage(value)\n                break\n            case 'fontSize':\n                setFontSize(value)\n                break\n            case 'botMessageAvatarSrc':\n                setBotMessageAvatarSrc(value)\n                break\n            case 'userMessageAvatarSrc':\n                setUserMessageAvatarSrc(value)\n                break\n            case 'textInputPlaceholder':\n                setTextInputPlaceholder(value)\n                break\n        }\n    }\n\n    const onBooleanChanged = (value, fieldName) => {\n        switch (fieldName) {\n            case 'botMessageShowAvatar':\n                setBotMessageShowAvatar(value)\n                break\n            case 'userMessageShowAvatar':\n                setUserMessageShowAvatar(value)\n                break\n            case 'generateNewSession':\n                setGenerateNewSession(value)\n                break\n        }\n    }\n\n    const colorField = (color, fieldName, fieldLabel) => {\n        return (\n            <Box sx={{ pt: 2, pb: 2 }}>\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\n                    <Typography sx={{ mb: 1 }}>{fieldLabel}</Typography>\n                    <Box\n                        sx={{\n                            cursor: 'pointer',\n                            width: '30px',\n                            height: '30px',\n                            border: '1px solid #616161',\n                            marginRight: '10px',\n                            backgroundColor: color ?? '#ffffff',\n                            borderRadius: '5px'\n                        }}\n                        onClick={(event) => {\n                            setSelectedColorConfig(fieldName)\n                            setSketchPickerColor(color ?? '#ffffff')\n                            setColorAnchorEl(event.currentTarget)\n                        }}\n                    ></Box>\n                </div>\n            </Box>\n        )\n    }\n\n    const booleanField = (value, fieldName, fieldLabel) => {\n        return (\n            <Box sx={{ pt: 2, pb: 2 }}>\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\n                    <Typography sx={{ mb: 1 }}>{fieldLabel}</Typography>\n                    <Switch\n                        id={fieldName}\n                        checked={value}\n                        onChange={(event) => {\n                            onBooleanChanged(event.target.checked, fieldName)\n                        }}\n                    />\n                </div>\n            </Box>\n        )\n    }\n\n    const textField = (message, fieldName, fieldLabel, fieldType = 'string', placeholder = '') => {\n        return (\n            <Box sx={{ pt: 2, pb: 2 }}>\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\n                    <Typography sx={{ mb: 1 }}>{fieldLabel}</Typography>\n                    <OutlinedInput\n                        id={fieldName}\n                        type={fieldType}\n                        fullWidth\n                        value={message}\n                        placeholder={placeholder}\n                        name={fieldName}\n                        onChange={(e) => {\n                            onTextChanged(e.target.value, fieldName)\n                        }}\n                    />\n                </div>\n            </Box>\n        )\n    }\n\n    return (\n        <>\n            <Stack direction='row'>\n                <Typography\n                    sx={{\n                        p: 1,\n                        borderRadius: 10,\n                        backgroundColor: theme.palette.primary.light,\n                        width: 'max-content',\n                        height: 'max-content'\n                    }}\n                    variant='h5'\n                >\n                    {`${baseURL}/chatbot/${chatflowid}`}\n                </Typography>\n                <IconButton\n                    title='Copy Link'\n                    color='success'\n                    onClick={(event) => {\n                        navigator.clipboard.writeText(`${baseURL}/chatbot/${chatflowid}`)\n                        setCopyAnchorEl(event.currentTarget)\n                        setTimeout(() => {\n                            handleCloseCopyPopOver()\n                        }, 1500)\n                    }}\n                >\n                    <IconCopy />\n                </IconButton>\n                <IconButton title='Open New Tab' color='primary' onClick={() => window.open(`${baseURL}/chatbot/${chatflowid}`, '_blank')}>\n                    <IconArrowUpRightCircle />\n                </IconButton>\n                <div style={{ flex: 1 }} />\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <Switch\n                        checked={isPublicChatflow}\n                        onChange={(event) => {\n                            setChatflowIsPublic(event.target.checked)\n                            onSwitchChange(event.target.checked)\n                        }}\n                    />\n                    <Typography>Make Public</Typography>\n                    <TooltipWithParser\n                        style={{ marginLeft: 10 }}\n                        title={'Making public will allow anyone to access the chatbot without username & password'}\n                    />\n                </div>\n            </Stack>\n            {textField(welcomeMessage, 'welcomeMessage', 'Welcome Message', 'string', 'Hello! This is custom welcome message')}\n            {colorField(backgroundColor, 'backgroundColor', 'Background Color')}\n            {textField(fontSize, 'fontSize', 'Font Size', 'number')}\n            {colorField(poweredByTextColor, 'poweredByTextColor', 'PoweredBy TextColor')}\n\n            {/*BOT Message*/}\n            <Typography variant='h4' sx={{ mb: 1, mt: 2 }}>\n                Bot Message\n            </Typography>\n            {colorField(botMessageBackgroundColor, 'botMessageBackgroundColor', 'Background Color')}\n            {colorField(botMessageTextColor, 'botMessageTextColor', 'Text Color')}\n            {textField(\n                botMessageAvatarSrc,\n                'botMessageAvatarSrc',\n                'Avatar Link',\n                'string',\n                `https://raw.githubusercontent.com/zahidkhawaja/langchain-chat-nextjs/main/public/parroticon.png`\n            )}\n            {booleanField(botMessageShowAvatar, 'botMessageShowAvatar', 'Show Avatar')}\n\n            {/*USER Message*/}\n            <Typography variant='h4' sx={{ mb: 1, mt: 2 }}>\n                User Message\n            </Typography>\n            {colorField(userMessageBackgroundColor, 'userMessageBackgroundColor', 'Background Color')}\n            {colorField(userMessageTextColor, 'userMessageTextColor', 'Text Color')}\n            {textField(\n                userMessageAvatarSrc,\n                'userMessageAvatarSrc',\n                'Avatar Link',\n                'string',\n                `https://raw.githubusercontent.com/zahidkhawaja/langchain-chat-nextjs/main/public/usericon.png`\n            )}\n            {booleanField(userMessageShowAvatar, 'userMessageShowAvatar', 'Show Avatar')}\n\n            {/*TEXT Input*/}\n            <Typography variant='h4' sx={{ mb: 1, mt: 2 }}>\n                Text Input\n            </Typography>\n            {colorField(textInputBackgroundColor, 'textInputBackgroundColor', 'Background Color')}\n            {colorField(textInputTextColor, 'textInputTextColor', 'Text Color')}\n            {textField(textInputPlaceholder, 'textInputPlaceholder', 'TextInput Placeholder', 'string', `Type question..`)}\n            {colorField(textInputSendButtonColor, 'textInputSendButtonColor', 'TextIntput Send Button Color')}\n\n            {/*Session Memory Input*/}\n            {isSessionMemory && (\n                <>\n                    <Typography variant='h4' sx={{ mb: 1, mt: 2 }}>\n                        Session Memory\n                    </Typography>\n                    {booleanField(generateNewSession, 'generateNewSession', 'Start new session when chatbot link is opened or refreshed')}\n                </>\n            )}\n\n            <StyledButton style={{ marginBottom: 10, marginTop: 10 }} variant='contained' onClick={() => onSave()}>\n                Save Changes\n            </StyledButton>\n            <Popover\n                open={openColorPopOver}\n                anchorEl={colorAnchorEl}\n                onClose={handleClosePopOver}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n            >\n                <SketchPicker color={sketchPickerColor} onChange={(color) => onColorSelected(color.hex)} />\n            </Popover>\n            <Popover\n                open={openCopyPopOver}\n                anchorEl={copyAnchorEl}\n                onClose={handleCloseCopyPopOver}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n            >\n                <Typography variant='h6' sx={{ pl: 1, pr: 1, color: 'white', background: theme.palette.success.dark }}>\n                    Copied!\n                </Typography>\n            </Popover>\n        </>\n    )\n}\n\nShareChatbot.propTypes = {\n    isSessionMemory: PropTypes.bool\n}\n\nexport default ShareChatbot\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}