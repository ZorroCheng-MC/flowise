{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _slicedToArray from\"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _defineProperty from\"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"className\"];import{Handle,Position,useUpdateNodeInternals}from'reactflow';import{useEffect,useRef,useState,useContext}from'react';import{useSelector}from'react-redux';// material-ui\nimport{useTheme,styled}from'@mui/material/styles';import{Box,Typography,Tooltip,IconButton,Button}from'@mui/material';import{tooltipClasses}from'@mui/material/Tooltip';import{IconArrowsMaximize,IconEdit,IconAlertTriangle}from'@tabler/icons';// project import\nimport{Dropdown}from'ui-component/dropdown/Dropdown';import{AsyncDropdown}from'ui-component/dropdown/AsyncDropdown';import{Input}from'ui-component/input/Input';import{File}from'ui-component/file/File';import{SwitchInput}from'ui-component/switch/Switch';import{flowContext}from'store/context/ReactFlowContext';import{isValidConnection as _isValidConnection}from'utils/genericHelper';import{JsonEditorInput}from'ui-component/json/JsonEditor';import{TooltipWithParser}from'ui-component/tooltip/TooltipWithParser';import ToolDialog from'views/tools/ToolDialog';import FormatPromptValuesDialog from'ui-component/dialog/FormatPromptValuesDialog';import{getInputVariables}from'utils/genericHelper';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var EDITABLE_TOOLS=['selectedTool'];var CustomWidthTooltip=styled(function(_ref){var className=_ref.className,props=_objectWithoutProperties(_ref,_excluded);return/*#__PURE__*/_jsx(Tooltip,_objectSpread(_objectSpread({},props),{},{classes:{popper:className}}));})(_defineProperty({},\"& .\".concat(tooltipClasses.tooltip),{maxWidth:500}));// ===========================|| NodeInputHandler ||=========================== //\nvar NodeInputHandler=function NodeInputHandler(_ref2){var _ref4,_data$inputs$inputPar2,_ref5,_data$inputs$inputPar3,_ref6,_data$inputs$inputPar4,_ref7,_data$inputs$inputPar5,_ref8,_data$inputs$inputPar7,_ref9,_data$inputs$inputPar8;var inputAnchor=_ref2.inputAnchor,inputParam=_ref2.inputParam,data=_ref2.data,_ref2$disabled=_ref2.disabled,disabled=_ref2$disabled===void 0?false:_ref2$disabled,_ref2$isAdditionalPar=_ref2.isAdditionalParams,isAdditionalParams=_ref2$isAdditionalPar===void 0?false:_ref2$isAdditionalPar;var theme=useTheme();var customization=useSelector(function(state){return state.customization;});var ref=useRef(null);var _useContext=useContext(flowContext),reactFlowInstance=_useContext.reactFlowInstance;var updateNodeInternals=useUpdateNodeInternals();var _useState=useState(0),_useState2=_slicedToArray(_useState,2),position=_useState2[0],setPosition=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showExpandDialog=_useState4[0],setShowExpandDialog=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),expandDialogProps=_useState6[0],setExpandDialogProps=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),showAsyncOptionDialog=_useState8[0],setAsyncOptionEditDialog=_useState8[1];var _useState9=useState({}),_useState10=_slicedToArray(_useState9,2),asyncOptionEditDialogProps=_useState10[0],setAsyncOptionEditDialogProps=_useState10[1];var _useState11=useState(Date.now().toString()),_useState12=_slicedToArray(_useState11,2),reloadTimestamp=_useState12[0],setReloadTimestamp=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),showFormatPromptValuesDialog=_useState14[0],setShowFormatPromptValuesDialog=_useState14[1];var _useState15=useState({}),_useState16=_slicedToArray(_useState15,2),formatPromptValuesDialogProps=_useState16[0],setFormatPromptValuesDialogProps=_useState16[1];var onExpandDialogClicked=function onExpandDialogClicked(value,inputParam){var dialogProp={value:value,inputParam:inputParam,disabled:disabled,confirmButtonName:'Save',cancelButtonName:'Cancel'};setExpandDialogProps(dialogProp);setShowExpandDialog(true);};var onFormatPromptValuesClicked=function onFormatPromptValuesClicked(value,inputParam){// Preset values if the field is format prompt values\nvar inputValue=value;if(inputParam.name==='promptValues'&&!value){var _data$inputs$template,_data$inputs$systemMe,_data$inputs$humanMes;var obj={};var templateValue=((_data$inputs$template=data.inputs['template'])!==null&&_data$inputs$template!==void 0?_data$inputs$template:'')+((_data$inputs$systemMe=data.inputs['systemMessagePrompt'])!==null&&_data$inputs$systemMe!==void 0?_data$inputs$systemMe:'')+((_data$inputs$humanMes=data.inputs['humanMessagePrompt'])!==null&&_data$inputs$humanMes!==void 0?_data$inputs$humanMes:'');var inputVariables=getInputVariables(templateValue);var _iterator=_createForOfIteratorHelper(inputVariables),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var inputVariable=_step.value;obj[inputVariable]='';}}catch(err){_iterator.e(err);}finally{_iterator.f();}if(Object.keys(obj).length)inputValue=JSON.stringify(obj);}var dialogProp={value:inputValue,inputParam:inputParam,nodes:reactFlowInstance.getNodes(),edges:reactFlowInstance.getEdges(),nodeId:data.id};setFormatPromptValuesDialogProps(dialogProp);setShowFormatPromptValuesDialog(true);};var onExpandDialogSave=function onExpandDialogSave(newValue,inputParamName){setShowExpandDialog(false);data.inputs[inputParamName]=newValue;};var editAsyncOption=function editAsyncOption(inputParamName,inputValue){if(inputParamName==='selectedTool'){setAsyncOptionEditDialogProps({title:'Edit Tool',type:'EDIT',cancelButtonName:'Cancel',confirmButtonName:'Save',toolId:inputValue});}setAsyncOptionEditDialog(inputParamName);};var addAsyncOption=function addAsyncOption(inputParamName){if(inputParamName==='selectedTool'){setAsyncOptionEditDialogProps({title:'Add New Tool',type:'ADD',cancelButtonName:'Cancel',confirmButtonName:'Add'});}setAsyncOptionEditDialog(inputParamName);};var onConfirmAsyncOption=function onConfirmAsyncOption(){var selectedOptionId=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';if(!selectedOptionId){data.inputs[showAsyncOptionDialog]='';}else{data.inputs[showAsyncOptionDialog]=selectedOptionId;setReloadTimestamp(Date.now().toString());}setAsyncOptionEditDialogProps({});setAsyncOptionEditDialog('');};useEffect(function(){if(ref.current&&ref.current.offsetTop&&ref.current.clientHeight){setPosition(ref.current.offsetTop+ref.current.clientHeight/2);updateNodeInternals(data.id);}},[data.id,ref,updateNodeInternals]);useEffect(function(){updateNodeInternals(data.id);},[data.id,position,updateNodeInternals]);return/*#__PURE__*/_jsxs(\"div\",{ref:ref,children:[inputAnchor&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CustomWidthTooltip,{placement:\"left\",title:inputAnchor.type,children:/*#__PURE__*/_jsx(Handle,{type:\"target\",position:Position.Left,id:inputAnchor.id,isValidConnection:function isValidConnection(connection){return _isValidConnection(connection,reactFlowInstance);},style:{height:10,width:10,backgroundColor:data.selected?theme.palette.primary.main:theme.palette.text.secondary,top:position}},inputAnchor.id)}),/*#__PURE__*/_jsx(Box,{sx:{p:2},children:/*#__PURE__*/_jsxs(Typography,{children:[inputAnchor.label,!inputAnchor.optional&&/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"\\xA0*\"}),inputAnchor.description&&/*#__PURE__*/_jsx(TooltipWithParser,{style:{marginLeft:10},title:inputAnchor.description})]})})]}),(inputParam&&!inputParam.additionalParams||isAdditionalParams)&&/*#__PURE__*/_jsxs(_Fragment,{children:[inputParam.acceptVariable&&/*#__PURE__*/_jsx(CustomWidthTooltip,{placement:\"left\",title:inputParam.type,children:/*#__PURE__*/_jsx(Handle,{type:\"target\",position:Position.Left,id:inputParam.id,isValidConnection:function isValidConnection(connection){return _isValidConnection(connection,reactFlowInstance);},style:{height:10,width:10,backgroundColor:data.selected?theme.palette.primary.main:theme.palette.text.secondary,top:position}},inputParam.id)}),/*#__PURE__*/_jsxs(Box,{sx:{p:2},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'row'},children:[/*#__PURE__*/_jsxs(Typography,{children:[inputParam.label,!inputParam.optional&&/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"\\xA0*\"}),inputParam.description&&/*#__PURE__*/_jsx(TooltipWithParser,{style:{marginLeft:10},title:inputParam.description})]}),/*#__PURE__*/_jsx(\"div\",{style:{flexGrow:1}}),inputParam.type==='string'&&inputParam.rows&&/*#__PURE__*/_jsx(IconButton,{size:\"small\",sx:{height:25,width:25},title:\"Expand\",color:\"primary\",onClick:function onClick(){var _ref3,_data$inputs$inputPar;return onExpandDialogClicked((_ref3=(_data$inputs$inputPar=data.inputs[inputParam.name])!==null&&_data$inputs$inputPar!==void 0?_data$inputs$inputPar:inputParam.default)!==null&&_ref3!==void 0?_ref3:'',inputParam);},children:/*#__PURE__*/_jsx(IconArrowsMaximize,{})})]}),inputParam.warning&&/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'row',borderRadius:10,background:'rgb(254,252,191)',padding:10,marginTop:10,marginBottom:10},children:[/*#__PURE__*/_jsx(IconAlertTriangle,{size:36,color:\"orange\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'rgb(116,66,16)',marginLeft:10},children:inputParam.warning})]}),inputParam.type==='file'&&/*#__PURE__*/_jsx(File,{disabled:disabled,fileType:inputParam.fileType||'*',onChange:function onChange(newValue){return data.inputs[inputParam.name]=newValue;},value:(_ref4=(_data$inputs$inputPar2=data.inputs[inputParam.name])!==null&&_data$inputs$inputPar2!==void 0?_data$inputs$inputPar2:inputParam.default)!==null&&_ref4!==void 0?_ref4:'Choose a file to upload'}),inputParam.type==='boolean'&&/*#__PURE__*/_jsx(SwitchInput,{disabled:disabled,onChange:function onChange(newValue){return data.inputs[inputParam.name]=newValue;},value:(_ref5=(_data$inputs$inputPar3=data.inputs[inputParam.name])!==null&&_data$inputs$inputPar3!==void 0?_data$inputs$inputPar3:inputParam.default)!==null&&_ref5!==void 0?_ref5:false}),(inputParam.type==='string'||inputParam.type==='password'||inputParam.type==='number')&&/*#__PURE__*/_jsx(Input,{disabled:disabled,inputParam:inputParam,onChange:function onChange(newValue){return data.inputs[inputParam.name]=newValue;},value:(_ref6=(_data$inputs$inputPar4=data.inputs[inputParam.name])!==null&&_data$inputs$inputPar4!==void 0?_data$inputs$inputPar4:inputParam.default)!==null&&_ref6!==void 0?_ref6:'',showDialog:showExpandDialog,dialogProps:expandDialogProps,onDialogCancel:function onDialogCancel(){return setShowExpandDialog(false);},onDialogConfirm:function onDialogConfirm(newValue,inputParamName){return onExpandDialogSave(newValue,inputParamName);}},data.inputs[inputParam.name]),inputParam.type==='json'&&/*#__PURE__*/_jsxs(_Fragment,{children:[!(inputParam!==null&&inputParam!==void 0&&inputParam.acceptVariable)&&/*#__PURE__*/_jsx(JsonEditorInput,{disabled:disabled,onChange:function onChange(newValue){return data.inputs[inputParam.name]=newValue;},value:(_ref7=(_data$inputs$inputPar5=data.inputs[inputParam.name])!==null&&_data$inputs$inputPar5!==void 0?_data$inputs$inputPar5:inputParam.default)!==null&&_ref7!==void 0?_ref7:'',isDarkMode:customization.isDarkMode}),(inputParam===null||inputParam===void 0?void 0:inputParam.acceptVariable)&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{sx:{borderRadius:25,width:'100%',mb:2,mt:2},variant:\"outlined\",onClick:function onClick(){var _data$inputs$inputPar6;return onFormatPromptValuesClicked((_data$inputs$inputPar6=data.inputs[inputParam.name])!==null&&_data$inputs$inputPar6!==void 0?_data$inputs$inputPar6:'',inputParam);},children:\"Format Prompt Values\"}),/*#__PURE__*/_jsx(FormatPromptValuesDialog,{show:showFormatPromptValuesDialog,dialogProps:formatPromptValuesDialogProps,onCancel:function onCancel(){return setShowFormatPromptValuesDialog(false);},onChange:function onChange(newValue){return data.inputs[inputParam.name]=newValue;}})]})]}),inputParam.type==='options'&&/*#__PURE__*/_jsx(Dropdown,{disabled:disabled,name:inputParam.name,options:inputParam.options,onSelect:function onSelect(newValue){return data.inputs[inputParam.name]=newValue;},value:(_ref8=(_data$inputs$inputPar7=data.inputs[inputParam.name])!==null&&_data$inputs$inputPar7!==void 0?_data$inputs$inputPar7:inputParam.default)!==null&&_ref8!==void 0?_ref8:'choose an option'}),inputParam.type==='asyncOptions'&&/*#__PURE__*/_jsxs(_Fragment,{children:[data.inputParams.length===1&&/*#__PURE__*/_jsx(\"div\",{style:{marginTop:10}}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'row'},children:[/*#__PURE__*/_jsx(AsyncDropdown,{disabled:disabled,name:inputParam.name,nodeData:data,value:(_ref9=(_data$inputs$inputPar8=data.inputs[inputParam.name])!==null&&_data$inputs$inputPar8!==void 0?_data$inputs$inputPar8:inputParam.default)!==null&&_ref9!==void 0?_ref9:'choose an option',isCreateNewOption:EDITABLE_TOOLS.includes(inputParam.name),onSelect:function onSelect(newValue){return data.inputs[inputParam.name]=newValue;},onCreateNew:function onCreateNew(){return addAsyncOption(inputParam.name);}}),EDITABLE_TOOLS.includes(inputParam.name)&&data.inputs[inputParam.name]&&/*#__PURE__*/_jsx(IconButton,{title:\"Edit\",color:\"primary\",size:\"small\",onClick:function onClick(){return editAsyncOption(inputParam.name,data.inputs[inputParam.name]);},children:/*#__PURE__*/_jsx(IconEdit,{})})]},reloadTimestamp)]})]})]}),/*#__PURE__*/_jsx(ToolDialog,{show:EDITABLE_TOOLS.includes(showAsyncOptionDialog),dialogProps:asyncOptionEditDialogProps,onCancel:function onCancel(){return setAsyncOptionEditDialog('');},onConfirm:onConfirmAsyncOption})]});};export default NodeInputHandler;","map":{"version":3,"names":["Handle","Position","useUpdateNodeInternals","useEffect","useRef","useState","useContext","useSelector","useTheme","styled","Box","Typography","Tooltip","IconButton","Button","tooltipClasses","IconArrowsMaximize","IconEdit","IconAlertTriangle","Dropdown","AsyncDropdown","Input","File","SwitchInput","flowContext","isValidConnection","JsonEditorInput","TooltipWithParser","ToolDialog","FormatPromptValuesDialog","getInputVariables","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","EDITABLE_TOOLS","CustomWidthTooltip","_ref","className","props","_objectWithoutProperties","_excluded","_objectSpread","classes","popper","_defineProperty","concat","tooltip","maxWidth","NodeInputHandler","_ref2","_ref4","_data$inputs$inputPar2","_ref5","_data$inputs$inputPar3","_ref6","_data$inputs$inputPar4","_ref7","_data$inputs$inputPar5","_ref8","_data$inputs$inputPar7","_ref9","_data$inputs$inputPar8","inputAnchor","inputParam","data","_ref2$disabled","disabled","_ref2$isAdditionalPar","isAdditionalParams","theme","customization","state","ref","_useContext","reactFlowInstance","updateNodeInternals","_useState","_useState2","_slicedToArray","position","setPosition","_useState3","_useState4","showExpandDialog","setShowExpandDialog","_useState5","_useState6","expandDialogProps","setExpandDialogProps","_useState7","_useState8","showAsyncOptionDialog","setAsyncOptionEditDialog","_useState9","_useState10","asyncOptionEditDialogProps","setAsyncOptionEditDialogProps","_useState11","Date","now","toString","_useState12","reloadTimestamp","setReloadTimestamp","_useState13","_useState14","showFormatPromptValuesDialog","setShowFormatPromptValuesDialog","_useState15","_useState16","formatPromptValuesDialogProps","setFormatPromptValuesDialogProps","onExpandDialogClicked","value","dialogProp","confirmButtonName","cancelButtonName","onFormatPromptValuesClicked","inputValue","name","_data$inputs$template","_data$inputs$systemMe","_data$inputs$humanMes","obj","templateValue","inputs","inputVariables","_iterator","_createForOfIteratorHelper","_step","s","n","done","inputVariable","err","e","f","Object","keys","length","JSON","stringify","nodes","getNodes","edges","getEdges","nodeId","id","onExpandDialogSave","newValue","inputParamName","editAsyncOption","title","type","toolId","addAsyncOption","onConfirmAsyncOption","selectedOptionId","arguments","undefined","current","offsetTop","clientHeight","children","placement","Left","connection","style","height","width","backgroundColor","selected","palette","primary","main","text","secondary","top","sx","p","label","optional","color","description","marginLeft","additionalParams","acceptVariable","display","flexDirection","flexGrow","rows","size","onClick","_ref3","_data$inputs$inputPar","default","warning","borderRadius","background","padding","marginTop","marginBottom","fileType","onChange","showDialog","dialogProps","onDialogCancel","onDialogConfirm","isDarkMode","mb","mt","variant","_data$inputs$inputPar6","show","onCancel","options","onSelect","inputParams","nodeData","isCreateNewOption","includes","onCreateNew","onConfirm"],"sources":["/Users/zorro/Downloads/Flowise/packages/ui/src/views/canvas/NodeInputHandler.js"],"sourcesContent":["import PropTypes from 'prop-types'\nimport { Handle, Position, useUpdateNodeInternals } from 'reactflow'\nimport { useEffect, useRef, useState, useContext } from 'react'\nimport { useSelector } from 'react-redux'\n\n// material-ui\nimport { useTheme, styled } from '@mui/material/styles'\nimport { Box, Typography, Tooltip, IconButton, Button } from '@mui/material'\nimport { tooltipClasses } from '@mui/material/Tooltip'\nimport { IconArrowsMaximize, IconEdit, IconAlertTriangle } from '@tabler/icons'\n\n// project import\nimport { Dropdown } from 'ui-component/dropdown/Dropdown'\nimport { AsyncDropdown } from 'ui-component/dropdown/AsyncDropdown'\nimport { Input } from 'ui-component/input/Input'\nimport { File } from 'ui-component/file/File'\nimport { SwitchInput } from 'ui-component/switch/Switch'\nimport { flowContext } from 'store/context/ReactFlowContext'\nimport { isValidConnection } from 'utils/genericHelper'\nimport { JsonEditorInput } from 'ui-component/json/JsonEditor'\nimport { TooltipWithParser } from 'ui-component/tooltip/TooltipWithParser'\nimport ToolDialog from 'views/tools/ToolDialog'\nimport FormatPromptValuesDialog from 'ui-component/dialog/FormatPromptValuesDialog'\n\nimport { getInputVariables } from 'utils/genericHelper'\n\nconst EDITABLE_TOOLS = ['selectedTool']\n\nconst CustomWidthTooltip = styled(({ className, ...props }) => <Tooltip {...props} classes={{ popper: className }} />)({\n    [`& .${tooltipClasses.tooltip}`]: {\n        maxWidth: 500\n    }\n})\n\n// ===========================|| NodeInputHandler ||=========================== //\n\nconst NodeInputHandler = ({ inputAnchor, inputParam, data, disabled = false, isAdditionalParams = false }) => {\n    const theme = useTheme()\n    const customization = useSelector((state) => state.customization)\n    const ref = useRef(null)\n    const { reactFlowInstance } = useContext(flowContext)\n    const updateNodeInternals = useUpdateNodeInternals()\n    const [position, setPosition] = useState(0)\n    const [showExpandDialog, setShowExpandDialog] = useState(false)\n    const [expandDialogProps, setExpandDialogProps] = useState({})\n    const [showAsyncOptionDialog, setAsyncOptionEditDialog] = useState('')\n    const [asyncOptionEditDialogProps, setAsyncOptionEditDialogProps] = useState({})\n    const [reloadTimestamp, setReloadTimestamp] = useState(Date.now().toString())\n    const [showFormatPromptValuesDialog, setShowFormatPromptValuesDialog] = useState(false)\n    const [formatPromptValuesDialogProps, setFormatPromptValuesDialogProps] = useState({})\n\n    const onExpandDialogClicked = (value, inputParam) => {\n        const dialogProp = {\n            value,\n            inputParam,\n            disabled,\n            confirmButtonName: 'Save',\n            cancelButtonName: 'Cancel'\n        }\n        setExpandDialogProps(dialogProp)\n        setShowExpandDialog(true)\n    }\n\n    const onFormatPromptValuesClicked = (value, inputParam) => {\n        // Preset values if the field is format prompt values\n        let inputValue = value\n        if (inputParam.name === 'promptValues' && !value) {\n            const obj = {}\n            const templateValue =\n                (data.inputs['template'] ?? '') + (data.inputs['systemMessagePrompt'] ?? '') + (data.inputs['humanMessagePrompt'] ?? '')\n            const inputVariables = getInputVariables(templateValue)\n            for (const inputVariable of inputVariables) {\n                obj[inputVariable] = ''\n            }\n            if (Object.keys(obj).length) inputValue = JSON.stringify(obj)\n        }\n        const dialogProp = {\n            value: inputValue,\n            inputParam,\n            nodes: reactFlowInstance.getNodes(),\n            edges: reactFlowInstance.getEdges(),\n            nodeId: data.id\n        }\n        setFormatPromptValuesDialogProps(dialogProp)\n        setShowFormatPromptValuesDialog(true)\n    }\n\n    const onExpandDialogSave = (newValue, inputParamName) => {\n        setShowExpandDialog(false)\n        data.inputs[inputParamName] = newValue\n    }\n\n    const editAsyncOption = (inputParamName, inputValue) => {\n        if (inputParamName === 'selectedTool') {\n            setAsyncOptionEditDialogProps({\n                title: 'Edit Tool',\n                type: 'EDIT',\n                cancelButtonName: 'Cancel',\n                confirmButtonName: 'Save',\n                toolId: inputValue\n            })\n        }\n        setAsyncOptionEditDialog(inputParamName)\n    }\n\n    const addAsyncOption = (inputParamName) => {\n        if (inputParamName === 'selectedTool') {\n            setAsyncOptionEditDialogProps({\n                title: 'Add New Tool',\n                type: 'ADD',\n                cancelButtonName: 'Cancel',\n                confirmButtonName: 'Add'\n            })\n        }\n        setAsyncOptionEditDialog(inputParamName)\n    }\n\n    const onConfirmAsyncOption = (selectedOptionId = '') => {\n        if (!selectedOptionId) {\n            data.inputs[showAsyncOptionDialog] = ''\n        } else {\n            data.inputs[showAsyncOptionDialog] = selectedOptionId\n            setReloadTimestamp(Date.now().toString())\n        }\n        setAsyncOptionEditDialogProps({})\n        setAsyncOptionEditDialog('')\n    }\n\n    useEffect(() => {\n        if (ref.current && ref.current.offsetTop && ref.current.clientHeight) {\n            setPosition(ref.current.offsetTop + ref.current.clientHeight / 2)\n            updateNodeInternals(data.id)\n        }\n    }, [data.id, ref, updateNodeInternals])\n\n    useEffect(() => {\n        updateNodeInternals(data.id)\n    }, [data.id, position, updateNodeInternals])\n\n    return (\n        <div ref={ref}>\n            {inputAnchor && (\n                <>\n                    <CustomWidthTooltip placement='left' title={inputAnchor.type}>\n                        <Handle\n                            type='target'\n                            position={Position.Left}\n                            key={inputAnchor.id}\n                            id={inputAnchor.id}\n                            isValidConnection={(connection) => isValidConnection(connection, reactFlowInstance)}\n                            style={{\n                                height: 10,\n                                width: 10,\n                                backgroundColor: data.selected ? theme.palette.primary.main : theme.palette.text.secondary,\n                                top: position\n                            }}\n                        />\n                    </CustomWidthTooltip>\n                    <Box sx={{ p: 2 }}>\n                        <Typography>\n                            {inputAnchor.label}\n                            {!inputAnchor.optional && <span style={{ color: 'red' }}>&nbsp;*</span>}\n                            {inputAnchor.description && <TooltipWithParser style={{ marginLeft: 10 }} title={inputAnchor.description} />}\n                        </Typography>\n                    </Box>\n                </>\n            )}\n\n            {((inputParam && !inputParam.additionalParams) || isAdditionalParams) && (\n                <>\n                    {inputParam.acceptVariable && (\n                        <CustomWidthTooltip placement='left' title={inputParam.type}>\n                            <Handle\n                                type='target'\n                                position={Position.Left}\n                                key={inputParam.id}\n                                id={inputParam.id}\n                                isValidConnection={(connection) => isValidConnection(connection, reactFlowInstance)}\n                                style={{\n                                    height: 10,\n                                    width: 10,\n                                    backgroundColor: data.selected ? theme.palette.primary.main : theme.palette.text.secondary,\n                                    top: position\n                                }}\n                            />\n                        </CustomWidthTooltip>\n                    )}\n                    <Box sx={{ p: 2 }}>\n                        <div style={{ display: 'flex', flexDirection: 'row' }}>\n                            <Typography>\n                                {inputParam.label}\n                                {!inputParam.optional && <span style={{ color: 'red' }}>&nbsp;*</span>}\n                                {inputParam.description && <TooltipWithParser style={{ marginLeft: 10 }} title={inputParam.description} />}\n                            </Typography>\n                            <div style={{ flexGrow: 1 }}></div>\n                            {inputParam.type === 'string' && inputParam.rows && (\n                                <IconButton\n                                    size='small'\n                                    sx={{\n                                        height: 25,\n                                        width: 25\n                                    }}\n                                    title='Expand'\n                                    color='primary'\n                                    onClick={() =>\n                                        onExpandDialogClicked(data.inputs[inputParam.name] ?? inputParam.default ?? '', inputParam)\n                                    }\n                                >\n                                    <IconArrowsMaximize />\n                                </IconButton>\n                            )}\n                        </div>\n                        {inputParam.warning && (\n                            <div\n                                style={{\n                                    display: 'flex',\n                                    flexDirection: 'row',\n                                    borderRadius: 10,\n                                    background: 'rgb(254,252,191)',\n                                    padding: 10,\n                                    marginTop: 10,\n                                    marginBottom: 10\n                                }}\n                            >\n                                <IconAlertTriangle size={36} color='orange' />\n                                <span style={{ color: 'rgb(116,66,16)', marginLeft: 10 }}>{inputParam.warning}</span>\n                            </div>\n                        )}\n                        {inputParam.type === 'file' && (\n                            <File\n                                disabled={disabled}\n                                fileType={inputParam.fileType || '*'}\n                                onChange={(newValue) => (data.inputs[inputParam.name] = newValue)}\n                                value={data.inputs[inputParam.name] ?? inputParam.default ?? 'Choose a file to upload'}\n                            />\n                        )}\n                        {inputParam.type === 'boolean' && (\n                            <SwitchInput\n                                disabled={disabled}\n                                onChange={(newValue) => (data.inputs[inputParam.name] = newValue)}\n                                value={data.inputs[inputParam.name] ?? inputParam.default ?? false}\n                            />\n                        )}\n                        {(inputParam.type === 'string' || inputParam.type === 'password' || inputParam.type === 'number') && (\n                            <Input\n                                key={data.inputs[inputParam.name]}\n                                disabled={disabled}\n                                inputParam={inputParam}\n                                onChange={(newValue) => (data.inputs[inputParam.name] = newValue)}\n                                value={data.inputs[inputParam.name] ?? inputParam.default ?? ''}\n                                showDialog={showExpandDialog}\n                                dialogProps={expandDialogProps}\n                                onDialogCancel={() => setShowExpandDialog(false)}\n                                onDialogConfirm={(newValue, inputParamName) => onExpandDialogSave(newValue, inputParamName)}\n                            />\n                        )}\n                        {inputParam.type === 'json' && (\n                            <>\n                                {!inputParam?.acceptVariable && (\n                                    <JsonEditorInput\n                                        disabled={disabled}\n                                        onChange={(newValue) => (data.inputs[inputParam.name] = newValue)}\n                                        value={data.inputs[inputParam.name] ?? inputParam.default ?? ''}\n                                        isDarkMode={customization.isDarkMode}\n                                    />\n                                )}\n                                {inputParam?.acceptVariable && (\n                                    <>\n                                        <Button\n                                            sx={{ borderRadius: 25, width: '100%', mb: 2, mt: 2 }}\n                                            variant='outlined'\n                                            onClick={() => onFormatPromptValuesClicked(data.inputs[inputParam.name] ?? '', inputParam)}\n                                        >\n                                            Format Prompt Values\n                                        </Button>\n                                        <FormatPromptValuesDialog\n                                            show={showFormatPromptValuesDialog}\n                                            dialogProps={formatPromptValuesDialogProps}\n                                            onCancel={() => setShowFormatPromptValuesDialog(false)}\n                                            onChange={(newValue) => (data.inputs[inputParam.name] = newValue)}\n                                        ></FormatPromptValuesDialog>\n                                    </>\n                                )}\n                            </>\n                        )}\n                        {inputParam.type === 'options' && (\n                            <Dropdown\n                                disabled={disabled}\n                                name={inputParam.name}\n                                options={inputParam.options}\n                                onSelect={(newValue) => (data.inputs[inputParam.name] = newValue)}\n                                value={data.inputs[inputParam.name] ?? inputParam.default ?? 'choose an option'}\n                            />\n                        )}\n                        {inputParam.type === 'asyncOptions' && (\n                            <>\n                                {data.inputParams.length === 1 && <div style={{ marginTop: 10 }} />}\n                                <div key={reloadTimestamp} style={{ display: 'flex', flexDirection: 'row' }}>\n                                    <AsyncDropdown\n                                        disabled={disabled}\n                                        name={inputParam.name}\n                                        nodeData={data}\n                                        value={data.inputs[inputParam.name] ?? inputParam.default ?? 'choose an option'}\n                                        isCreateNewOption={EDITABLE_TOOLS.includes(inputParam.name)}\n                                        onSelect={(newValue) => (data.inputs[inputParam.name] = newValue)}\n                                        onCreateNew={() => addAsyncOption(inputParam.name)}\n                                    />\n                                    {EDITABLE_TOOLS.includes(inputParam.name) && data.inputs[inputParam.name] && (\n                                        <IconButton\n                                            title='Edit'\n                                            color='primary'\n                                            size='small'\n                                            onClick={() => editAsyncOption(inputParam.name, data.inputs[inputParam.name])}\n                                        >\n                                            <IconEdit />\n                                        </IconButton>\n                                    )}\n                                </div>\n                            </>\n                        )}\n                    </Box>\n                </>\n            )}\n            <ToolDialog\n                show={EDITABLE_TOOLS.includes(showAsyncOptionDialog)}\n                dialogProps={asyncOptionEditDialogProps}\n                onCancel={() => setAsyncOptionEditDialog('')}\n                onConfirm={onConfirmAsyncOption}\n            ></ToolDialog>\n        </div>\n    )\n}\n\nNodeInputHandler.propTypes = {\n    inputAnchor: PropTypes.object,\n    inputParam: PropTypes.object,\n    data: PropTypes.object,\n    disabled: PropTypes.bool,\n    isAdditionalParams: PropTypes.bool\n}\n\nexport default NodeInputHandler\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}