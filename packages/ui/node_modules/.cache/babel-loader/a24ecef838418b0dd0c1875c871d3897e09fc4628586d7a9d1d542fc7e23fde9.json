{"ast":null,"code":"import _slicedToArray from\"/Users/zorro/Downloads/Flowise/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import{FormControlLabel,Checkbox}from'@mui/material';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var CheckboxInput=function CheckboxInput(_ref){var value=_ref.value,label=_ref.label,_onChange=_ref.onChange,_ref$disabled=_ref.disabled,disabled=_ref$disabled===void 0?false:_ref$disabled;var _useState=useState(value),_useState2=_slicedToArray(_useState,2),myValue=_useState2[0],setMyValue=_useState2[1];return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(FormControlLabel,{sx:{mt:1,width:'100%'},size:\"small\",control:/*#__PURE__*/_jsx(Checkbox,{disabled:disabled,checked:myValue,onChange:function onChange(event){setMyValue(event.target.checked);_onChange(event.target.checked);}}),label:label})});};","map":{"version":3,"names":["useState","FormControlLabel","Checkbox","jsx","_jsx","Fragment","_Fragment","CheckboxInput","_ref","value","label","onChange","_ref$disabled","disabled","_useState","_useState2","_slicedToArray","myValue","setMyValue","children","sx","mt","width","size","control","checked","event","target"],"sources":["/Users/zorro/Downloads/Flowise/packages/ui/src/ui-component/checkbox/Checkbox.js"],"sourcesContent":["import { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { FormControlLabel, Checkbox } from '@mui/material'\n\nexport const CheckboxInput = ({ value, label, onChange, disabled = false }) => {\n    const [myValue, setMyValue] = useState(value)\n\n    return (\n        <>\n            <FormControlLabel\n                sx={{ mt: 1, width: '100%' }}\n                size='small'\n                control={\n                    <Checkbox\n                        disabled={disabled}\n                        checked={myValue}\n                        onChange={(event) => {\n                            setMyValue(event.target.checked)\n                            onChange(event.target.checked)\n                        }}\n                    />\n                }\n                label={label}\n            />\n        </>\n    )\n}\n\nCheckboxInput.propTypes = {\n    value: PropTypes.bool,\n    label: PropTypes.string,\n    onChange: PropTypes.func,\n    disabled: PropTypes.bool\n}\n"],"mappings":"oHAAA,OAASA,QAAQ,KAAQ,OAAO,CAEhC,OAASC,gBAAgB,CAAEC,QAAQ,KAAQ,eAAe,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAE1D,MAAO,IAAM,CAAAC,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAAC,IAAA,CAAqD,IAA/C,CAAAC,KAAK,CAAAD,IAAA,CAALC,KAAK,CAAEC,KAAK,CAAAF,IAAA,CAALE,KAAK,CAAEC,SAAQ,CAAAH,IAAA,CAARG,QAAQ,CAAAC,aAAA,CAAAJ,IAAA,CAAEK,QAAQ,CAARA,QAAQ,CAAAD,aAAA,UAAG,KAAK,CAAAA,aAAA,CACpE,IAAAE,SAAA,CAA8Bd,QAAQ,CAACS,KAAK,CAAC,CAAAM,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAtCG,OAAO,CAAAF,UAAA,IAAEG,UAAU,CAAAH,UAAA,IAE1B,mBACIX,IAAA,CAAAE,SAAA,EAAAa,QAAA,cACIf,IAAA,CAACH,gBAAgB,EACbmB,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAC,CAAEC,KAAK,CAAE,MAAO,CAAE,CAC7BC,IAAI,CAAC,OAAO,CACZC,OAAO,cACHpB,IAAA,CAACF,QAAQ,EACLW,QAAQ,CAAEA,QAAS,CACnBY,OAAO,CAAER,OAAQ,CACjBN,QAAQ,CAAE,SAAAA,SAACe,KAAK,CAAK,CACjBR,UAAU,CAACQ,KAAK,CAACC,MAAM,CAACF,OAAO,CAAC,CAChCd,SAAQ,CAACe,KAAK,CAACC,MAAM,CAACF,OAAO,CAAC,CAClC,CAAE,CACL,CACJ,CACDf,KAAK,CAAEA,KAAM,CAChB,CAAC,CACJ,CAAC,CAEX,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}